{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/lib/firebase/config.ts"],"sourcesContent":["// app/lib/firebase/config.ts\nimport { initializeApp, getApps } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDXsDtXK_yOf8bu9KO7m680-zgbBnK0g4A\",\n  authDomain: \"volunteer-connect-2d1b4.firebaseapp.com\",\n  projectId: \"volunteer-connect-2d1b4\",\n  storageBucket: \"volunteer-connect-2d1b4.firebasestorage.app\",\n  messagingSenderId: \"560928180195\",\n  appId: \"1:560928180195:web:1418c7c5348682621582d6\",\n  measurementId: \"G-MZ9J8536TZ\"\n};\n\n// Initialize Firebase only if it hasn't been initialized yet\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApps()[0];\n\n// Initialize Firebase services\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const storage = getStorage(app);\nexport default app;\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;;AAC7B;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,6DAA6D;AAC7D,MAAM,MAAM,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AAGrE,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,UAAU,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,EAAE;uCACnB","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/lib/firebase/auth.ts"],"sourcesContent":["// app/lib/firebase/auth.ts\nimport { auth, db } from './config';\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword,\n  signOut as firebaseSignOut,\n  onAuthStateChanged,\n  User\n} from 'firebase/auth';\nimport { \n  doc, \n  setDoc, \n  getDoc, \n  updateDoc,\n  serverTimestamp \n} from 'firebase/firestore';\n\n// Define user level types\nexport enum UserLevel {\n  Sprout = 'Sprout',\n  Bud = 'Bud',\n  Bloom = 'Bloom'\n}\n\n// User profile interface\nexport interface UserProfile {\n  uid: string;\n  email: string;\n  displayName: string;\n  age: number;\n  country: string;\n  state?: string;\n  weeklyCommitment: number;\n  volunteeringGoal: string;\n  interests: string[];\n  rankingPreferences: {\n    communityService: number; // 1-4 ranking\n    environmentalAction: number;\n    educationYouthSupport: number;\n    healthWellness: number;\n  };\n  level: UserLevel;\n  seeds: number;\n  location?: {\n    latitude: number;\n    longitude: number;\n  };\n  completedTasks: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\n// Create a new user with email and password\nexport const createUser = async (email: string, password: string) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Sign in an existing user\nexport const signIn = async (email: string, password: string) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Sign out the current user\nexport const signOut = async () => {\n  try {\n    await firebaseSignOut(auth);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Create a user profile in Firestore\nexport const createUserProfile = async (user: User, profileData: Omit<UserProfile, 'uid' | 'email' | 'createdAt' | 'updatedAt' | 'seeds' | 'completedTasks'>) => {\n  try {\n    // Create a base user profile\n    const userProfile: UserProfile = {\n      uid: user.uid,\n      email: user.email || '',\n      seeds: 0,\n      completedTasks: 0,\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp(),\n      ...profileData\n    };\n\n    // Remove undefined fields (like state if it's not provided)\n    const cleanedProfile = Object.fromEntries(\n      Object.entries(userProfile).filter(([_, value]) => value !== undefined)\n    );\n\n    await setDoc(doc(db, 'users', user.uid), cleanedProfile);\n    return userProfile;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\n// Get a user's profile from Firestore\nexport const getUserProfile = async (uid: string) => {\n  try {\n    const userDoc = await getDoc(doc(db, 'users', uid));\n    if (userDoc.exists()) {\n      return userDoc.data() as UserProfile;\n    }\n    return null;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Update a user's profile\nexport const updateUserProfile = async (uid: string, profileData: Partial<UserProfile>) => {\n  try {\n    const userRef = doc(db, 'users', uid);\n    await updateDoc(userRef, {\n      ...profileData,\n      updatedAt: serverTimestamp()\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Determine user level based on age\nexport const determineUserLevel = (age: number, hasGuardian: boolean = false): UserLevel => {\n  if (age < 16) {\n    return UserLevel.Sprout;\n  } else if (age >= 16 && age < 21) {\n    return hasGuardian ? UserLevel.Bloom : UserLevel.Bud;\n  } else {\n    return UserLevel.Bloom;\n  }\n}; \n\n// Add seeds to a user's account\nexport const addSeeds = async (uid: string, seeds: number) => {\n  try {\n    const userRef = doc(db, 'users', uid);\n    const userDoc = await getDoc(userRef);\n    \n    if (userDoc.exists()) {\n      const userData = userDoc.data() as UserProfile;\n      await updateDoc(userRef, {\n        seeds: userData.seeds + seeds,\n        updatedAt: serverTimestamp()\n      });\n      return userData.seeds + seeds;\n    }\n    return null;\n  } catch (error) {\n    throw error;\n  }\n};"],"names":[],"mappings":"AAAA,2BAA2B;;;;;;;;;;;;AAC3B;AACA;AAAA;AAAA;AAAA;AAOA;AAAA;;;;AASO,IAAA,AAAK,mCAAA;;;;WAAA;;AAmCL,MAAM,aAAa,OAAO,OAAe;IAC9C,IAAI;QACF,MAAM,iBAAiB,MAAM,CAAA,GAAA,qOAAA,CAAA,iCAA8B,AAAD,EAAE,mIAAA,CAAA,OAAI,EAAE,OAAO;QACzE,OAAO,eAAe,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAGO,MAAM,SAAS,OAAO,OAAe;IAC1C,IAAI;QACF,MAAM,iBAAiB,MAAM,CAAA,GAAA,iOAAA,CAAA,6BAA0B,AAAD,EAAE,mIAAA,CAAA,OAAI,EAAE,OAAO;QACrE,OAAO,eAAe,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAGO,MAAM,UAAU;IACrB,IAAI;QACF,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAe,AAAD,EAAE,mIAAA,CAAA,OAAI;IAC5B,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAGO,MAAM,oBAAoB,OAAO,MAAY;IAClD,IAAI;QACF,6BAA6B;QAC7B,MAAM,cAA2B;YAC/B,KAAK,KAAK,GAAG;YACb,OAAO,KAAK,KAAK,IAAI;YACrB,OAAO;YACP,gBAAgB;YAChB,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;YACzB,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;YACzB,GAAG,WAAW;QAChB;QAEA,4DAA4D;QAC5D,MAAM,iBAAiB,OAAO,WAAW,CACvC,OAAO,OAAO,CAAC,aAAa,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAK,UAAU;QAG/D,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS,KAAK,GAAG,GAAG;QACzC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAIO,MAAM,iBAAiB,OAAO;IACnC,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS;QAC9C,IAAI,QAAQ,MAAM,IAAI;YACpB,OAAO,QAAQ,IAAI;QACrB;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAGO,MAAM,oBAAoB,OAAO,KAAa;IACnD,IAAI;QACF,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS;QACjC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;YACvB,GAAG,WAAW;YACd,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;QAC3B;IACF,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAGO,MAAM,qBAAqB,CAAC,KAAa,cAAuB,KAAK;IAC1E,IAAI,MAAM,IAAI;QACZ;IACF,OAAO,IAAI,OAAO,MAAM,MAAM,IAAI;QAChC,OAAO;IACT,OAAO;QACL;IACF;AACF;AAGO,MAAM,WAAW,OAAO,KAAa;IAC1C,IAAI;QACF,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS;QACjC,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;QAE7B,IAAI,QAAQ,MAAM,IAAI;YACpB,MAAM,WAAW,QAAQ,IAAI;YAC7B,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;gBACvB,OAAO,SAAS,KAAK,GAAG;gBACxB,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;YAC3B;YACA,OAAO,SAAS,KAAK,GAAG;QAC1B;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/lib/firebase/firestore.ts"],"sourcesContent":["// app/lib/firebase/firestore.ts\nimport { db } from './config';\nimport {\n  collection,\n  doc,\n  query,\n  where,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  serverTimestamp,\n  GeoPoint,\n  Timestamp\n} from 'firebase/firestore';\nimport { UserLevel } from './auth';\n\nexport interface VolunteerTask {\n  id: string;\n  title: string;\n  description: string;\n  category: 'communityService' | 'environmentalAction' | 'educationYouthSupport' | 'healthWellness';\n  estimatedTime: number;\n  locationType: 'remote' | 'inPerson' | 'virtual';\n  location?: {\n    address?: string;\n    coordinates?: {\n      latitude: number;\n      longitude: number;\n    };\n  };\n  completedBy?: string[];\n  completionDate?: any; // Firestore timestamp\n  createdAt?: any; // Firestore timestamp\n  updatedAt?: any; // Firestore timestamp\n  createdBy?: string;\n  isCustom?: boolean;\n  \n  // Add the missing properties that are causing TypeScript errors\n  status?: 'open' | 'scheduled' | 'in-progress' | 'paused' | 'completed';\n  scheduledTime?: any; // Firestore timestamp\n  timeSpent?: number;\n  impact?: string;\n  requirements?: string;\n  pauseData?: Array<{\n    pauseTime: Date;\n    resumeTime?: Date;\n    reason: string;\n    description: string;\n  }>;\n  assignedTo?: string;\n  isAssigned?: boolean;\n  images?: string[];\n  achievements?: string;\n  feedback?: string;\n  contact?: {\n    name: string;\n    type: string;\n    value: string;\n  };\n}\n\nexport interface TaskCompletion {\n  id?: string;\n  taskId: string;\n  userId: string;\n  completionDate: any;\n  imageUrl: string;\n  rating: number; // 1-5 stars\n  feedback?: string;\n  createdAt: any;\n}\n\n// Create a new volunteer task (for Bloom users)\n// Create a new volunteer task (for Bloom users)\nexport const createTask = async (taskData: Omit<VolunteerTask, 'id' | 'createdAt' | 'updatedAt' | 'completedBy'>, userId: string) => {\n  try {\n    // Define the task data without isAssigned (since it doesn't exist in the interface)\n    const task = {\n      ...taskData,\n      createdBy: userId,\n      completedBy: [],\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp()\n    };\n\n    // If you need isAssigned for functionality, add it to the firestore document\n    // but not to the typed object\n    const firestoreData = {\n      ...task,\n      // Add any additional fields needed for Firestore but not in the interface\n      assignedTo: null, // If needed\n    };\n\n    const docRef = await addDoc(collection(db, 'tasks'), firestoreData);\n    return { id: docRef.id, ...task };\n  } catch (error) {\n    throw error;\n  }\n};\n// Add this to app/lib/firebase/firestore.ts\nexport const resetWeeklyTasks = async (userId: string) => {\n  try {\n    // Get user's current tasks\n    const userTasks = await getUserTasks(userId);\n\n    // For each task, unassign it\n    for (const task of userTasks) {\n      if (task.id) {\n        const taskRef = doc(db, 'tasks', task.id);\n        await updateDoc(taskRef, {\n          assignedTo: null,\n          isAssigned: false,\n          updatedAt: serverTimestamp()\n        });\n      }\n    }\n\n    // Get new tasks to assign based on user's preferences\n    // You can modify this based on your application's requirement\n    // For example, you can get 3 new tasks per week\n    const availableTasksQuery = query(\n      collection(db, 'tasks'),\n      where('isAssigned', '==', false),\n      where('requiredLevel', '==', 'Sapling') // Adjust as needed for the user's level\n    );\n\n    const availableTasksSnapshot = await getDocs(availableTasksQuery);\n    const availableTasks: VolunteerTask[] = [];\n\n    availableTasksSnapshot.forEach((doc) => {\n      availableTasks.push({ id: doc.id, ...doc.data() } as VolunteerTask);\n    });\n\n    // Assign up to 3 new tasks\n    const tasksToAssign = availableTasks.slice(0, 3);\n\n    for (const task of tasksToAssign) {\n      if (task.id) {\n        await assignTaskToUser(task.id, userId);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Error resetting weekly tasks:', error);\n    throw error;\n  }\n};\n\n// Get tasks based on filters\nexport const getTasks = async (filters: {\n  category?: VolunteerTask['category'];\n  locationType?: VolunteerTask['locationType'];\n  requiredLevel?: UserLevel;\n  isAssigned?: boolean;\n}) => {\n  try {\n    const tasksCollection = collection(db, 'tasks');\n    let q = query(tasksCollection);\n\n    // Build query based on filters\n    const constraints = [];\n\n    if (filters.category) {\n      constraints.push(where('category', '==', filters.category));\n    }\n\n    if (filters.locationType) {\n      constraints.push(where('locationType', '==', filters.locationType));\n    }\n\n    if (filters.requiredLevel) {\n      constraints.push(where('requiredLevel', '==', filters.requiredLevel));\n    }\n\n    if (filters.isAssigned !== undefined) {\n      constraints.push(where('isAssigned', '==', filters.isAssigned));\n    }\n\n    if (constraints.length > 0) {\n      q = query(tasksCollection, ...constraints);\n    }\n\n    const querySnapshot = await getDocs(q);\n    const tasks: VolunteerTask[] = [];\n\n    querySnapshot.forEach((doc) => {\n      tasks.push({ id: doc.id, ...doc.data() } as VolunteerTask);\n    });\n\n    return tasks;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get tasks assigned to a specific user\nexport const getUserTasks = async (userId: string) => {\n  try {\n    const q = query(collection(db, 'tasks'), where('assignedTo', '==', userId));\n    const querySnapshot = await getDocs(q);\n    const tasks: VolunteerTask[] = [];\n\n    querySnapshot.forEach((doc) => {\n      tasks.push({ id: doc.id, ...doc.data() } as VolunteerTask);\n    });\n\n    return tasks;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Assign a task to a user\nexport const assignTaskToUser = async (taskId: string, userId: string) => {\n  try {\n    const taskRef = doc(db, 'tasks', taskId);\n    await updateDoc(taskRef, {\n      completionDate: serverTimestamp(),\n      assignedTo: userId,\n      isAssigned: true,\n      updatedAt: serverTimestamp()\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Mark a task as completed\n// Update the completeTask function in firestore.ts\nexport const completeTask = async (taskId: string, userId: string, completionData: {\n  imageUrl: string;\n  summary: string;\n  contactInfo: string;\n  rating: number;\n  feedback?: string;\n  timeSpent: number;\n}) => {\n  try {\n    // Update the task document\n    const taskRef = doc(db, 'tasks', taskId);\n    const taskDoc = await getDoc(taskRef);\n\n    if (!taskDoc.exists()) {\n      throw new Error('Task not found');\n    }\n\n    const taskData = taskDoc.data() as VolunteerTask;\n    const completedBy = taskData.completedBy || [];\n\n    if (!completedBy.includes(userId)) {\n      completedBy.push(userId);\n    }\n\n    await updateDoc(taskRef, {\n      completedBy,\n      updatedAt: serverTimestamp()\n    });\n\n    // Create a completion record\n    const completion = {\n      taskId,\n      userId,\n      completionDate: serverTimestamp(),\n      imageUrl: completionData.imageUrl,\n      summary: completionData.summary,\n      contactInfo: completionData.contactInfo,\n      rating: completionData.rating,\n      feedback: completionData.feedback,\n      timeSpent: completionData.timeSpent,\n      createdAt: serverTimestamp()\n    };\n\n    const completionRef = await addDoc(collection(db, 'taskCompletions'), completion);\n    return { id: completionRef.id, ...completion };\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get nearby volunteer opportunities (for Bud and Bloom users)\n// Get nearby volunteer opportunities (for Bud and Bloom users)\nexport const getNearbyOpportunities = async (\n  latitude: number,\n  longitude: number,\n  radiusInKm: number = 10,\n  userLevel: UserLevel\n) => {\n  try {\n    // In a real implementation, we would use a spatial query\n    // For simplicity, we'll get all tasks and filter them manually\n    const tasks = await getTasks({\n      isAssigned: false,\n      requiredLevel: userLevel === 'Bloom' ? undefined : userLevel // Bloom users can see all opportunities\n    });\n\n    // Filter tasks by distance\n    const nearbyTasks = tasks.filter(task => {\n      // Check if task has coordinates\n      if (!task.location?.coordinates?.latitude || !task.location?.coordinates?.longitude) {\n        return false;\n      }\n\n      // Calculate distance using Haversine formula\n      const distance = calculateDistance(\n        latitude,\n        longitude,\n        task.location.coordinates.latitude,\n        task.location.coordinates.longitude\n      );\n\n      return distance <= radiusInKm;\n    });\n\n    return nearbyTasks;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Calculate distance between two points using Haversine formula\nconst calculateDistance = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\n  const R = 6371; // Radius of the Earth in km\n  const dLat = degToRad(lat2 - lat1);\n  const dLon = degToRad(lon2 - lon1);\n\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(degToRad(lat1)) * Math.cos(degToRad(lat2)) *\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  const distance = R * c;\n\n  return distance;\n};\n\nconst degToRad = (deg: number): number => {\n  return deg * (Math.PI / 180);\n};\n\n// Get weekly tasks for a user based on their commitment level\nexport const getWeeklyTasks = async (userId: string, weeklyCommitment: number) => {\n  try {\n    // Get user profile to determine level and preferences\n    const userDoc = await getDoc(doc(db, 'users', userId));\n\n    if (!userDoc.exists()) {\n      throw new Error('User not found');\n    }\n\n    const userData = userDoc.data();\n    const userLevel = userData.level as UserLevel;\n    const preferences = userData.rankingPreferences;\n\n    // Sort categories by user preference\n    const sortedCategories = [\n      { category: 'communityService', rank: preferences.communityService },\n      { category: 'environmentalAction', rank: preferences.environmentalAction },\n      { category: 'educationYouthSupport', rank: preferences.educationYouthSupport },\n      { category: 'healthWellness', rank: preferences.healthWellness }\n    ].sort((a, b) => a.rank - b.rank)\n      .map(item => item.category);\n\n    // Get unassigned tasks suitable for user's level\n    const availableTasks = await getTasks({\n      isAssigned: false,\n      requiredLevel: userLevel\n    });\n\n    // Prioritize tasks based on user preferences\n    const prioritizedTasks = availableTasks.sort((a, b) => {\n      const categoryIndexA = sortedCategories.indexOf(a.category);\n      const categoryIndexB = sortedCategories.indexOf(b.category);\n      return categoryIndexA - categoryIndexB;\n    });\n\n    // Limit to weekly commitment number\n    const tasksToAssign = prioritizedTasks.slice(0, weeklyCommitment);\n\n    // Assign tasks to user\n    for (const task of tasksToAssign) {\n      if (task.id) {\n        await assignTaskToUser(task.id, userId);\n      }\n    }\n\n    return tasksToAssign;\n  } catch (error) {\n    throw error;\n  }\n};\n// Add this function to app/lib/firebase/firestore.ts\nexport const addSeeds = async (userId: string, amount: number) => {\n  try {\n    const userRef = doc(db, 'users', userId);\n    const userDoc = await getDoc(userRef);\n\n    if (!userDoc.exists()) {\n      throw new Error('User not found');\n    }\n\n    const userData = userDoc.data();\n    const currentSeeds = userData.seeds || 0;\n\n    await updateDoc(userRef, {\n      seeds: currentSeeds + amount,\n      updatedAt: serverTimestamp()\n    });\n\n    return currentSeeds + amount;\n  } catch (error) {\n    console.error('Error adding seeds:', error);\n    throw error;\n  }\n};\n// Check weekly task completion and award seeds\nexport const checkWeeklyCompletion = async (userId: string) => {\n  try {\n    // Get user's assigned tasks\n    const userTasks = await getUserTasks(userId);\n\n    // Get user's completed tasks\n    const completedTasks = userTasks.filter(task =>\n      task.completedBy && task.completedBy.includes(userId)\n    );\n\n    // Calculate seeds based on completion ratio\n    const completionRatio = userTasks.length > 0 ? completedTasks.length / userTasks.length : 0;\n    let seedsEarned = 0;\n\n    if (completionRatio === 1) {\n      // All tasks completed, award 5 seeds\n      seedsEarned = 5;\n    } else if (completionRatio > 0) {\n      // Partial completion, award proportional seeds (rounded down)\n      seedsEarned = Math.floor(completionRatio * 5);\n    }\n\n    if (seedsEarned > 0) {\n      // Add seeds to user's account\n      await addSeeds(userId, seedsEarned);\n    }\n\n    return {\n      total: userTasks.length,\n      completed: completedTasks.length,\n      seedsEarned\n    };\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;;;;;;;;;;AAChC;AACA;AAAA;;;AA0EO,MAAM,aAAa,OAAO,UAAiF;IAChH,IAAI;QACF,oFAAoF;QACpF,MAAM,OAAO;YACX,GAAG,QAAQ;YACX,WAAW;YACX,aAAa,EAAE;YACf,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;YACzB,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;QAC3B;QAEA,6EAA6E;QAC7E,8BAA8B;QAC9B,MAAM,gBAAgB;YACpB,GAAG,IAAI;YACP,0EAA0E;YAC1E,YAAY;QACd;QAEA,MAAM,SAAS,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,UAAU;QACrD,OAAO;YAAE,IAAI,OAAO,EAAE;YAAE,GAAG,IAAI;QAAC;IAClC,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAEO,MAAM,mBAAmB,OAAO;IACrC,IAAI;QACF,2BAA2B;QAC3B,MAAM,YAAY,MAAM,aAAa;QAErC,6BAA6B;QAC7B,KAAK,MAAM,QAAQ,UAAW;YAC5B,IAAI,KAAK,EAAE,EAAE;gBACX,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS,KAAK,EAAE;gBACxC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;oBACvB,YAAY;oBACZ,YAAY;oBACZ,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;gBAC3B;YACF;QACF;QAEA,sDAAsD;QACtD,8DAA8D;QAC9D,gDAAgD;QAChD,MAAM,sBAAsB,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAC9B,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,UACf,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,cAAc,MAAM,QAC1B,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,iBAAiB,MAAM,WAAW,wCAAwC;;QAGlF,MAAM,yBAAyB,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;QAC7C,MAAM,iBAAkC,EAAE;QAE1C,uBAAuB,OAAO,CAAC,CAAC;YAC9B,eAAe,IAAI,CAAC;gBAAE,IAAI,IAAI,EAAE;gBAAE,GAAG,IAAI,IAAI,EAAE;YAAC;QAClD;QAEA,2BAA2B;QAC3B,MAAM,gBAAgB,eAAe,KAAK,CAAC,GAAG;QAE9C,KAAK,MAAM,QAAQ,cAAe;YAChC,IAAI,KAAK,EAAE,EAAE;gBACX,MAAM,iBAAiB,KAAK,EAAE,EAAE;YAClC;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM;IACR;AACF;AAGO,MAAM,WAAW,OAAO;IAM7B,IAAI;QACF,MAAM,kBAAkB,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE;QACvC,IAAI,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE;QAEd,+BAA+B;QAC/B,MAAM,cAAc,EAAE;QAEtB,IAAI,QAAQ,QAAQ,EAAE;YACpB,YAAY,IAAI,CAAC,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,YAAY,MAAM,QAAQ,QAAQ;QAC3D;QAEA,IAAI,QAAQ,YAAY,EAAE;YACxB,YAAY,IAAI,CAAC,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,gBAAgB,MAAM,QAAQ,YAAY;QACnE;QAEA,IAAI,QAAQ,aAAa,EAAE;YACzB,YAAY,IAAI,CAAC,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,iBAAiB,MAAM,QAAQ,aAAa;QACrE;QAEA,IAAI,QAAQ,UAAU,KAAK,WAAW;YACpC,YAAY,IAAI,CAAC,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,cAAc,MAAM,QAAQ,UAAU;QAC/D;QAEA,IAAI,YAAY,MAAM,GAAG,GAAG;YAC1B,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,oBAAoB;QAChC;QAEA,MAAM,gBAAgB,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;QACpC,MAAM,QAAyB,EAAE;QAEjC,cAAc,OAAO,CAAC,CAAC;YACrB,MAAM,IAAI,CAAC;gBAAE,IAAI,IAAI,EAAE;gBAAE,GAAG,IAAI,IAAI,EAAE;YAAC;QACzC;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAGO,MAAM,eAAe,OAAO;IACjC,IAAI;QACF,MAAM,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,UAAU,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,cAAc,MAAM;QACnE,MAAM,gBAAgB,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;QACpC,MAAM,QAAyB,EAAE;QAEjC,cAAc,OAAO,CAAC,CAAC;YACrB,MAAM,IAAI,CAAC;gBAAE,IAAI,IAAI,EAAE;gBAAE,GAAG,IAAI,IAAI,EAAE;YAAC;QACzC;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAGO,MAAM,mBAAmB,OAAO,QAAgB;IACrD,IAAI;QACF,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS;QACjC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;YACvB,gBAAgB,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;YAC9B,YAAY;YACZ,YAAY;YACZ,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;QAC3B;IACF,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAIO,MAAM,eAAe,OAAO,QAAgB,QAAgB;IAQjE,IAAI;QACF,2BAA2B;QAC3B,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS;QACjC,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;QAE7B,IAAI,CAAC,QAAQ,MAAM,IAAI;YACrB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,WAAW,QAAQ,IAAI;QAC7B,MAAM,cAAc,SAAS,WAAW,IAAI,EAAE;QAE9C,IAAI,CAAC,YAAY,QAAQ,CAAC,SAAS;YACjC,YAAY,IAAI,CAAC;QACnB;QAEA,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;YACvB;YACA,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;QAC3B;QAEA,6BAA6B;QAC7B,MAAM,aAAa;YACjB;YACA;YACA,gBAAgB,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;YAC9B,UAAU,eAAe,QAAQ;YACjC,SAAS,eAAe,OAAO;YAC/B,aAAa,eAAe,WAAW;YACvC,QAAQ,eAAe,MAAM;YAC7B,UAAU,eAAe,QAAQ;YACjC,WAAW,eAAe,SAAS;YACnC,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;QAC3B;QAEA,MAAM,gBAAgB,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,oBAAoB;QACtE,OAAO;YAAE,IAAI,cAAc,EAAE;YAAE,GAAG,UAAU;QAAC;IAC/C,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAIO,MAAM,yBAAyB,OACpC,UACA,WACA,aAAqB,EAAE,EACvB;IAEA,IAAI;QACF,yDAAyD;QACzD,+DAA+D;QAC/D,MAAM,QAAQ,MAAM,SAAS;YAC3B,YAAY;YACZ,eAAe,cAAc,UAAU,YAAY,UAAU,wCAAwC;QACvG;QAEA,2BAA2B;QAC3B,MAAM,cAAc,MAAM,MAAM,CAAC,CAAA;YAC/B,gCAAgC;YAChC,IAAI,CAAC,KAAK,QAAQ,EAAE,aAAa,YAAY,CAAC,KAAK,QAAQ,EAAE,aAAa,WAAW;gBACnF,OAAO;YACT;YAEA,6CAA6C;YAC7C,MAAM,WAAW,kBACf,UACA,WACA,KAAK,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAClC,KAAK,QAAQ,CAAC,WAAW,CAAC,SAAS;YAGrC,OAAO,YAAY;QACrB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAEA,gEAAgE;AAChE,MAAM,oBAAoB,CAAC,MAAc,MAAc,MAAc;IACnE,MAAM,IAAI,MAAM,4BAA4B;IAC5C,MAAM,OAAO,SAAS,OAAO;IAC7B,MAAM,OAAO,SAAS,OAAO;IAE7B,MAAM,IACJ,KAAK,GAAG,CAAC,OAAO,KAAK,KAAK,GAAG,CAAC,OAAO,KACrC,KAAK,GAAG,CAAC,SAAS,SAAS,KAAK,GAAG,CAAC,SAAS,SAC7C,KAAK,GAAG,CAAC,OAAO,KAAK,KAAK,GAAG,CAAC,OAAO;IAEvC,MAAM,IAAI,IAAI,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;IACrD,MAAM,WAAW,IAAI;IAErB,OAAO;AACT;AAEA,MAAM,WAAW,CAAC;IAChB,OAAO,MAAM,CAAC,KAAK,EAAE,GAAG,GAAG;AAC7B;AAGO,MAAM,iBAAiB,OAAO,QAAgB;IACnD,IAAI;QACF,sDAAsD;QACtD,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS;QAE9C,IAAI,CAAC,QAAQ,MAAM,IAAI;YACrB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,WAAW,QAAQ,IAAI;QAC7B,MAAM,YAAY,SAAS,KAAK;QAChC,MAAM,cAAc,SAAS,kBAAkB;QAE/C,qCAAqC;QACrC,MAAM,mBAAmB;YACvB;gBAAE,UAAU;gBAAoB,MAAM,YAAY,gBAAgB;YAAC;YACnE;gBAAE,UAAU;gBAAuB,MAAM,YAAY,mBAAmB;YAAC;YACzE;gBAAE,UAAU;gBAAyB,MAAM,YAAY,qBAAqB;YAAC;YAC7E;gBAAE,UAAU;gBAAkB,MAAM,YAAY,cAAc;YAAC;SAChE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,GAAG,EAAE,IAAI,EAC7B,GAAG,CAAC,CAAA,OAAQ,KAAK,QAAQ;QAE5B,iDAAiD;QACjD,MAAM,iBAAiB,MAAM,SAAS;YACpC,YAAY;YACZ,eAAe;QACjB;QAEA,6CAA6C;QAC7C,MAAM,mBAAmB,eAAe,IAAI,CAAC,CAAC,GAAG;YAC/C,MAAM,iBAAiB,iBAAiB,OAAO,CAAC,EAAE,QAAQ;YAC1D,MAAM,iBAAiB,iBAAiB,OAAO,CAAC,EAAE,QAAQ;YAC1D,OAAO,iBAAiB;QAC1B;QAEA,oCAAoC;QACpC,MAAM,gBAAgB,iBAAiB,KAAK,CAAC,GAAG;QAEhD,uBAAuB;QACvB,KAAK,MAAM,QAAQ,cAAe;YAChC,IAAI,KAAK,EAAE,EAAE;gBACX,MAAM,iBAAiB,KAAK,EAAE,EAAE;YAClC;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAEO,MAAM,WAAW,OAAO,QAAgB;IAC7C,IAAI;QACF,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS;QACjC,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;QAE7B,IAAI,CAAC,QAAQ,MAAM,IAAI;YACrB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,WAAW,QAAQ,IAAI;QAC7B,MAAM,eAAe,SAAS,KAAK,IAAI;QAEvC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;YACvB,OAAO,eAAe;YACtB,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;QAC3B;QAEA,OAAO,eAAe;IACxB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,MAAM;IACR;AACF;AAEO,MAAM,wBAAwB,OAAO;IAC1C,IAAI;QACF,4BAA4B;QAC5B,MAAM,YAAY,MAAM,aAAa;QAErC,6BAA6B;QAC7B,MAAM,iBAAiB,UAAU,MAAM,CAAC,CAAA,OACtC,KAAK,WAAW,IAAI,KAAK,WAAW,CAAC,QAAQ,CAAC;QAGhD,4CAA4C;QAC5C,MAAM,kBAAkB,UAAU,MAAM,GAAG,IAAI,eAAe,MAAM,GAAG,UAAU,MAAM,GAAG;QAC1F,IAAI,cAAc;QAElB,IAAI,oBAAoB,GAAG;YACzB,qCAAqC;YACrC,cAAc;QAChB,OAAO,IAAI,kBAAkB,GAAG;YAC9B,8DAA8D;YAC9D,cAAc,KAAK,KAAK,CAAC,kBAAkB;QAC7C;QAEA,IAAI,cAAc,GAAG;YACnB,8BAA8B;YAC9B,MAAM,SAAS,QAAQ;QACzB;QAEA,OAAO;YACL,OAAO,UAAU,MAAM;YACvB,WAAW,eAAe,MAAM;YAChC;QACF;IACF,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/lib/tasks/taskGenerator.ts"],"sourcesContent":["// app/lib/tasks/taskGenerator.ts\nimport { UserLevel } from '../firebase/auth';\nimport { VolunteerTask } from '../firebase/firestore';\nimport { serverTimestamp } from 'firebase/firestore';\n\n// Sample locations to use when precise location isn't available\nconst fallbackLocations = [\n  { name: 'Local Community Center', latitude: 0, longitude: 0 },\n  { name: 'Neighborhood Park', latitude: 0, longitude: 0 },\n  { name: 'Public Library', latitude: 0, longitude: 0 },\n  { name: 'Elementary School', latitude: 0, longitude: 0 },\n  { name: 'Senior Center', latitude: 0, longitude: 0 },\n  { name: 'Food Bank', latitude: 0, longitude: 0 },\n  { name: 'Animal Shelter', latitude: 0, longitude: 0 },\n  { name: 'Community Garden', latitude: 0, longitude: 0 },\n];\n\n// Task templates by category\nconst taskTemplates = {\n  communityService: [\n    {\n      title: 'Help at a Local Food Bank',\n      description: 'sort and package food donations to support families in need.',\n      estimatedTime: 120,\n      locationType: 'inPerson',\n    },\n    {\n      title: 'Neighborhood Cleanup',\n      description: 'join a team to pick up litter and beautify public spaces in your community.',\n      estimatedTime: 90,\n      locationType: 'inPerson',\n    },\n    {\n      title: 'Senior Companion',\n      description: 'spend time with senior citizens who may be experiencing isolation. Chat, play games, or help with simple tasks.',\n      estimatedTime: 60,\n      locationType: 'inPerson',\n    },\n    {\n      title: 'Donation Drive Coordinator',\n      description: 'organize a collection drive for clothes, books, or toys to donate to those in need.',\n      estimatedTime: 180,\n      locationType: 'remote',\n    },\n    {\n      title: 'Community Event Volunteer',\n      description: 'help set up, run, or clean up at a local community event or festival.',\n      estimatedTime: 240,\n      locationType: 'inPerson',\n    },\n  ],\n  environmentalAction: [\n    {\n      title: 'Tree Planting Initiative',\n      description: 'join a team to plant trees and improve the local ecosystem.',\n      estimatedTime: 180,\n      locationType: 'inPerson',\n    },\n    {\n      title: 'Beach or Waterway Cleanup',\n      description: 'help remove trash and plastic from beaches, rivers, or lakes to protect wildlife.',\n      estimatedTime: 120,\n      locationType: 'inPerson',\n    },\n    {\n      title: 'Recycling Education Campaign',\n      description: 'create and share information about proper recycling practices in your community.',\n      estimatedTime: 90,\n      locationType: 'remote',\n    },\n    {\n      title: 'Community Garden Helper',\n      description: 'assist with planting, weeding, and harvesting at a local community garden.',\n      estimatedTime: 120,\n      locationType: 'inPerson',\n    },\n    {\n      title: 'Wildlife Habitat Improvement',\n      description: 'help build or improve habitats for local wildlife, such as bird houses or butterfly gardens.',\n      estimatedTime: 150,\n      locationType: 'inPerson',\n    },\n  ],\n  educationYouthSupport: [\n    {\n      title: 'Virtual Tutoring Session',\n      description: 'provide one-on-one tutoring help for a student who needs assistance with schoolwork.',\n      estimatedTime: 60,\n      locationType: 'virtual',\n    },\n    {\n      title: 'Reading Buddy',\n      description: 'read with young children to help improve their literacy skills and foster a love of reading.',\n      estimatedTime: 45,\n      locationType: 'virtual',\n    },\n    {\n      title: 'STEM Workshop Assistant',\n      description: 'help run a workshop teaching science, technology, engineering, or math concepts to youth.',\n      estimatedTime: 120,\n      locationType: 'inPerson',\n    },\n    {\n      title: 'After-School Program Helper',\n      description: 'assist with activities, homework help, or supervision at an after-school program.',\n      estimatedTime: 120,\n      locationType: 'inPerson',\n    },\n    {\n      title: 'College Application Mentor',\n      description: 'help high school students navigate the college application process, essays, and scholarships.',\n      estimatedTime: 90,\n      locationType: 'virtual',\n    },\n  ],\n  healthWellness: [\n    {\n      title: 'Wellness Check Caller',\n      description: 'make phone calls to check on elderly or vulnerable community members.',\n      estimatedTime: 60,\n      locationType: 'remote',\n    },\n    {\n      title: 'Health Fair Volunteer',\n      description: 'assist with organization or activities at a community health fair.',\n      estimatedTime: 180,\n      locationType: 'inPerson',\n    },\n    {\n      title: 'Meal Preparation Helper',\n      description: 'prepare meals for those who are ill, elderly, or unable to cook for themselves.',\n      estimatedTime: 120,\n      locationType: 'inPerson',\n    },\n    {\n      title: 'Mental Health Awareness Campaign',\n      description: 'create and share resources about mental health awareness and support options.',\n      estimatedTime: 90,\n      locationType: 'remote',\n    },\n    {\n      title: 'Fitness Buddy',\n      description: 'accompany someone who needs motivation or assistance with physical activity.',\n      estimatedTime: 60,\n      locationType: 'inPerson',\n    },\n  ],\n};\n\n// Business-specific task templates\nconst businessTaskTemplates = [\n  {\n    businessType: 'coffee shop',\n    tasks: [\n      {\n        title: 'Coffee Shop Community Corner',\n        description: 'work with a local coffee shop to establish a community bulletin board or book exchange corner.',\n        category: 'communityService',\n        estimatedTime: 120,\n        locationType: 'inPerson',\n      },\n      {\n        title: 'Coffee Grounds Recycling Program',\n        description: 'coordinate with a local coffee shop to collect used coffee grounds for community garden composting.',\n        category: 'environmentalAction',\n        estimatedTime: 90,\n        locationType: 'inPerson',\n      },\n    ],\n  },\n  {\n    businessType: 'restaurant',\n    tasks: [\n      {\n        title: 'Restaurant Food Donation Coordination',\n        description: 'help coordinate the donation of unused food from restaurants to local shelters or food banks.',\n        category: 'communityService',\n        estimatedTime: 120,\n        locationType: 'inPerson',\n      },\n      {\n        title: 'Sustainable Restaurant Practices',\n        description: 'work with local restaurants to implement more environmentally friendly practices like reducing single-use plastics.',\n        category: 'environmentalAction',\n        estimatedTime: 150,\n        locationType: 'inPerson',\n      },\n    ],\n  },\n  {\n    businessType: 'library',\n    tasks: [\n      {\n        title: 'Library Reading Program',\n        description: 'help organize or run reading programs for children at the local library.',\n        category: 'educationYouthSupport',\n        estimatedTime: 120,\n        locationType: 'inPerson',\n      },\n      {\n        title: 'Digital Literacy Workshops',\n        description: 'assist seniors or other community members with technology skills at the local library.',\n        category: 'educationYouthSupport',\n        estimatedTime: 90,\n        locationType: 'inPerson',\n      },\n    ],\n  },\n  {\n    businessType: 'park',\n    tasks: [\n      {\n        title: 'Park Cleanup Initiative',\n        description: 'organize or participate in a cleanup day at a local park.',\n        category: 'environmentalAction',\n        estimatedTime: 120,\n        locationType: 'inPerson',\n      },\n      {\n        title: 'Nature Walk Guide',\n        description: 'lead educational nature walks for community members at a local park.',\n        category: 'educationYouthSupport',\n        estimatedTime: 90,\n        locationType: 'inPerson',\n      },\n    ],\n  },\n  {\n    businessType: 'school',\n    tasks: [\n      {\n        title: 'School Garden Project',\n        description: 'help maintain or establish a garden at a local school to teach children about growing food.',\n        category: 'environmentalAction',\n        estimatedTime: 120,\n        locationType: 'inPerson',\n      },\n      {\n        title: 'After-School Tutoring',\n        description: 'provide tutoring support to students after school hours.',\n        category: 'educationYouthSupport',\n        estimatedTime: 90,\n        locationType: 'inPerson',\n      },\n    ],\n  },\n  {\n    businessType: 'grocery store',\n    tasks: [\n      {\n        title: 'Grocery Delivery for Seniors',\n        description: 'coordinate with a local grocery store to help deliver groceries to elderly or disabled community members.',\n        category: 'healthWellness',\n        estimatedTime: 120,\n        locationType: 'inPerson',\n      },\n      {\n        title: 'Food Waste Reduction Program',\n        description: 'work with a local grocery store to implement or improve food waste reduction and donation programs.',\n        category: 'environmentalAction',\n        estimatedTime: 150,\n        locationType: 'inPerson',\n      },\n    ],\n  },\n];\n\n// Helper function to get random element from array\nconst getRandomElement = <T>(array: T[]): T => {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\n// Helper function to get random task template by category\nconst getRandomTaskTemplate = (category: keyof typeof taskTemplates) => {\n  return getRandomElement(taskTemplates[category]);\n};\n\n// Helper function to generate a variation of a task description\nconst generateTaskVariation = (description: string): string => {\n  // Simple variations to make tasks feel more unique\n  const introductions = [\n    '',\n    'We need your help to ',\n    'An exciting opportunity to ',\n    'Your community needs you to ',\n    'Make a difference by helping to ',\n    'Join others to ',\n  ];\n\n  const conclusion = [\n    '',\n    ' This is a great way to make a positive impact!',\n    ' Your contribution will make a real difference.',\n    ' This is perfect for someone with your interests!',\n    ' This opportunity matches your volunteering goals.',\n    ' Help create positive change through this activity.',\n  ];\n\n  return `${getRandomElement(introductions)}${description.replace(/\\.$/, '')}${getRandomElement(conclusion)}`;\n};\n\n// Generate nearby business tasks based on location and business type\nexport const generateNearbyBusinessTask = (\n  businessName: string,\n  businessType: string,\n  location: { latitude: number, longitude: number },\n  userLevel: UserLevel\n): VolunteerTask | null => {\n  // Find matching business type or use default\n  const businessTemplate = businessTaskTemplates.find(template =>\n    businessType.toLowerCase().includes(template.businessType)\n  ) || getRandomElement(businessTaskTemplates);\n\n  if (!businessTemplate) return null;\n\n  // Get a random task for this business type\n  const taskTemplate = getRandomElement(businessTemplate.tasks);\n\n  // Only include location for Bud and Bloom levels\n  const taskLocation = (userLevel !== UserLevel.Sprout && location)\n    ? {\n      address: businessName,\n      latitude: location.latitude,\n      longitude: location.longitude,\n    }\n    : null; // Use null instead of undefined\n\n  // Create the task with location null check\n  return {\n    title: taskTemplate.title.replace('a local', businessName),\n    description: generateTaskVariation(taskTemplate.description.replace('a local', businessName)),\n    category: taskTemplate.category as any,\n    estimatedTime: taskTemplate.estimatedTime,\n    locationType: taskTemplate.locationType as any,\n    // Only include location if it exists\n    ...(taskLocation ? { location: taskLocation } : {}),\n    requiredLevel: userLevel,\n    isAssigned: false,\n    completedBy: [],\n    createdAt: serverTimestamp(),\n    updatedAt: serverTimestamp(),\n  };\n};\n\n// Generate a batch of random tasks based on user preferences\nexport const generateRandomTasks = (\n  count: number,\n  userLevel: UserLevel,\n  userLocation?: { latitude: number, longitude: number },\n  preferences?: { [key: string]: number } // Lower number = higher preference\n): VolunteerTask[] => {\n  const tasks: VolunteerTask[] = [];\n  const categories = Object.keys(taskTemplates) as Array<keyof typeof taskTemplates>;\n\n  // Sort categories by preference if provided\n  let sortedCategories = [...categories];\n  if (preferences) {\n    sortedCategories.sort((a, b) =>\n      (preferences[a] || 5) - (preferences[b] || 5)\n    );\n  }\n\n  for (let i = 0; i < count; i++) {\n    // Bias toward preferred categories, but still include some variety\n    const usePreference = Math.random() < 0.7; // 70% chance to use preference\n    const category = usePreference\n      ? sortedCategories[i % sortedCategories.length]\n      : getRandomElement(categories);\n\n    // Get a random task template from the selected category\n    const template = getRandomTaskTemplate(category);\n\n    // Determine if this should be a location-based task\n    const isLocationBased = template.locationType === 'inPerson' &&\n      userLevel !== 'Bud' &&\n      userLocation &&\n      userLocation.latitude !== 0;\n\n    // Create location data if applicable\n    let location;\n    if (isLocationBased) {\n      // Add some randomness to the location to distribute tasks around the user\n      const radiusKm = 5; // 5km radius\n      const randomAngle = Math.random() * 2 * Math.PI;\n      const randomDistance = Math.random() * radiusKm;\n\n      // Convert distance and angle to lat/lng offset\n      // Rough approximation (1 degree latitude ≈ 111km)\n      const latOffset = (randomDistance * Math.cos(randomAngle)) / 111;\n      const lngOffset = (randomDistance * Math.sin(randomAngle)) /\n        (111 * Math.cos(userLocation.latitude * Math.PI / 180));\n\n      location = {\n        address: getRandomElement(fallbackLocations).name,\n        latitude: userLocation.latitude + latOffset,\n        longitude: userLocation.longitude + lngOffset,\n      };\n    }\n\n    // Create the task\n    // Create the task\n    // Create the task with null check for location\n    tasks.push({\n      title: template.title,\n      description: generateTaskVariation(template.description),\n      category: category as any,\n      estimatedTime: template.estimatedTime,\n      locationType: template.locationType as any,\n      // If location is undefined, remove the field completely\n      ...(location ? { location } : {}),\n      requiredLevel: userLevel,\n      isAssigned: false,\n      completedBy: [],\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp(),\n    });\n  }\n\n  return tasks;\n};\n\n// Generate a weekly set of tasks for a user based on their preferences and commitment\nexport const generateWeeklyTasks = (\n  weeklyCommitment: number,\n  userLevel: UserLevel,\n  userLocation?: { latitude: number, longitude: number },\n  preferences?: { [key: string]: number }\n): VolunteerTask[] => {\n  return generateRandomTasks(\n    weeklyCommitment,\n    userLevel,\n    userLocation,\n    preferences\n  );\n};\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;;AACjC;AAEA;AAAA;;;AAEA,gEAAgE;AAChE,MAAM,oBAAoB;IACxB;QAAE,MAAM;QAA0B,UAAU;QAAG,WAAW;IAAE;IAC5D;QAAE,MAAM;QAAqB,UAAU;QAAG,WAAW;IAAE;IACvD;QAAE,MAAM;QAAkB,UAAU;QAAG,WAAW;IAAE;IACpD;QAAE,MAAM;QAAqB,UAAU;QAAG,WAAW;IAAE;IACvD;QAAE,MAAM;QAAiB,UAAU;QAAG,WAAW;IAAE;IACnD;QAAE,MAAM;QAAa,UAAU;QAAG,WAAW;IAAE;IAC/C;QAAE,MAAM;QAAkB,UAAU;QAAG,WAAW;IAAE;IACpD;QAAE,MAAM;QAAoB,UAAU;QAAG,WAAW;IAAE;CACvD;AAED,6BAA6B;AAC7B,MAAM,gBAAgB;IACpB,kBAAkB;QAChB;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;KACD;IACD,qBAAqB;QACnB;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;KACD;IACD,uBAAuB;QACrB;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;KACD;IACD,gBAAgB;QACd;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;QACA;YACE,OAAO;YACP,aAAa;YACb,eAAe;YACf,cAAc;QAChB;KACD;AACH;AAEA,mCAAmC;AACnC,MAAM,wBAAwB;IAC5B;QACE,cAAc;QACd,OAAO;YACL;gBACE,OAAO;gBACP,aAAa;gBACb,UAAU;gBACV,eAAe;gBACf,cAAc;YAChB;YACA;gBACE,OAAO;gBACP,aAAa;gBACb,UAAU;gBACV,eAAe;gBACf,cAAc;YAChB;SACD;IACH;IACA;QACE,cAAc;QACd,OAAO;YACL;gBACE,OAAO;gBACP,aAAa;gBACb,UAAU;gBACV,eAAe;gBACf,cAAc;YAChB;YACA;gBACE,OAAO;gBACP,aAAa;gBACb,UAAU;gBACV,eAAe;gBACf,cAAc;YAChB;SACD;IACH;IACA;QACE,cAAc;QACd,OAAO;YACL;gBACE,OAAO;gBACP,aAAa;gBACb,UAAU;gBACV,eAAe;gBACf,cAAc;YAChB;YACA;gBACE,OAAO;gBACP,aAAa;gBACb,UAAU;gBACV,eAAe;gBACf,cAAc;YAChB;SACD;IACH;IACA;QACE,cAAc;QACd,OAAO;YACL;gBACE,OAAO;gBACP,aAAa;gBACb,UAAU;gBACV,eAAe;gBACf,cAAc;YAChB;YACA;gBACE,OAAO;gBACP,aAAa;gBACb,UAAU;gBACV,eAAe;gBACf,cAAc;YAChB;SACD;IACH;IACA;QACE,cAAc;QACd,OAAO;YACL;gBACE,OAAO;gBACP,aAAa;gBACb,UAAU;gBACV,eAAe;gBACf,cAAc;YAChB;YACA;gBACE,OAAO;gBACP,aAAa;gBACb,UAAU;gBACV,eAAe;gBACf,cAAc;YAChB;SACD;IACH;I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","debugId":null}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/lib/location/locationService.ts"],"sourcesContent":["// app/lib/location/locationService.ts\nimport { updateUserProfile } from '../firebase/auth';\n\n// Represents a nearby place/business\nexport interface NearbyPlace {\n  name: string;\n  type: string;\n  location: {\n    latitude: number;\n    longitude: number;\n  };\n  distance: number; // in meters\n}\n\n// Mock data for nearby places\n// In a real implementation, this would come from a Maps API like Google Maps or Mapbox\nconst mockNearbyPlaces: NearbyPlace[] = [\n  {\n    name: 'Central Park',\n    type: 'park',\n    location: { latitude: 40.7812, longitude: -73.9665 },\n    distance: 800\n  },\n  {\n    name: 'Main Street Library',\n    type: 'library',\n    location: { latitude: 40.7125, longitude: -74.0082 },\n    distance: 1200\n  },\n  {\n    name: 'Sunrise Cafe',\n    type: 'coffee shop',\n    location: { latitude: 40.7155, longitude: -74.0050 },\n    distance: 300\n  },\n  {\n    name: 'Green Grocers',\n    type: 'grocery store',\n    location: { latitude: 40.7140, longitude: -74.0062 },\n    distance: 500\n  },\n  {\n    name: 'Community Center',\n    type: 'community center',\n    location: { latitude: 40.7135, longitude: -74.0072 },\n    distance: 600\n  },\n  {\n    name: 'Washington High School',\n    type: 'school',\n    location: { latitude: 40.7145, longitude: -74.0090 },\n    distance: 900\n  },\n  {\n    name: 'Riverfront Park',\n    type: 'park',\n    location: { latitude: 40.7160, longitude: -74.0040 },\n    distance: 700\n  },\n  {\n    name: 'City Hospital',\n    type: 'hospital',\n    location: { latitude: 40.7170, longitude: -74.0095 },\n    distance: 1500\n  },\n  {\n    name: 'Local Pizzeria',\n    type: 'restaurant',\n    location: { latitude: 40.7132, longitude: -74.0058 },\n    distance: 400\n  },\n  {\n    name: 'Starbucks',\n    type: 'coffee shop',\n    location: { latitude: 40.7138, longitude: -74.0063 },\n    distance: 250\n  }\n];\n\n// Request location permissions and update user profile\nexport const requestLocationPermission = async (userId: string): Promise<{\n  success: boolean;\n  location?: { latitude: number; longitude: number };\n  error?: string;\n}> => {\n  if (!navigator.geolocation) {\n    return {\n      success: false,\n      error: 'Geolocation is not supported by your browser'\n    };\n  }\n\n  try {\n    // Request current position\n    const position = await new Promise<GeolocationPosition>((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject, {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      });\n    });\n\n    const location = {\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    };\n\n    // Update user profile with location\n    await updateUserProfile(userId, { location });\n\n    return {\n      success: true,\n      location\n    };\n  } catch (error: any) {\n    return {\n      success: false,\n      error: error.message || 'Failed to get location'\n    };\n  }\n};\n\n// Get nearby places based on user location\nexport const getNearbyPlaces = async (\n  location: { latitude: number; longitude: number },\n  radius: number = 2000, // meters\n  limit: number = 5\n): Promise<NearbyPlace[]> => {\n  // In a real implementation, this would call a Maps API\n  // For now, we'll simulate it using our mock data and some distance calculations\n  \n  // Function to calculate distance between two coordinates (Haversine formula)\n  const calculateDistance = (\n    lat1: number, \n    lon1: number, \n    lat2: number, \n    lon2: number\n  ): number => {\n    const R = 6371e3; // Earth radius in meters\n    const φ1 = lat1 * Math.PI / 180;\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\n\n    const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n              Math.cos(φ1) * Math.cos(φ2) *\n              Math.sin(Δλ/2) * Math.sin(Δλ/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n    return R * c;\n  };\n\n  // In a real implementation, we would call a Maps API here\n  // For the mock version, we'll just filter our static data\n  \n  // Calculate distance for each place\n  const placesWithActualDistance = mockNearbyPlaces.map(place => ({\n    ...place,\n    distance: calculateDistance(\n      location.latitude,\n      location.longitude,\n      place.location.latitude,\n      place.location.longitude\n    )\n  }));\n\n  // Filter by radius and sort by distance\n  const nearbyPlaces = placesWithActualDistance\n    .filter(place => place.distance <= radius)\n    .sort((a, b) => a.distance - b.distance)\n    .slice(0, limit);\n\n  return nearbyPlaces;\n};\n\n// Interface for real-world locations\nexport interface ReverseGeocodingResult {\n  formattedAddress: string;\n  neighborhood?: string;\n  city?: string;\n  county?: string;\n  state?: string;\n  country?: string;\n  postalCode?: string;\n}\n\n// Mock reverse geocoding function\n// In a real implementation, this would call a Geocoding API service\nexport const reverseGeocode = async (\n  latitude: number,\n  longitude: number\n): Promise<ReverseGeocodingResult> => {\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  // Return mock data based on coordinates\n  // In a real app, this would call Google Maps, Mapbox, or another geocoding service\n  return {\n    formattedAddress: `${Math.abs(latitude).toFixed(4)}° ${latitude >= 0 ? 'N' : 'S'}, ${Math.abs(longitude).toFixed(4)}° ${longitude >= 0 ? 'E' : 'W'}`,\n    neighborhood: 'Sample Neighborhood',\n    city: 'Sample City',\n    state: 'Sample State',\n    country: 'Sample Country',\n    postalCode: '10000'\n  };\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1127, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/lib/firebase/tasksService.ts"],"sourcesContent":["// app/lib/firebase/tasksService.ts\nimport {\n    collection,\n    doc,\n    addDoc,\n    getDocs,\n    getDoc,\n    query,\n    where,\n    writeBatch,\n    serverTimestamp\n} from 'firebase/firestore';\nimport { db } from '@/app/lib/firebase/config';\nimport { UserProfile } from '@/app/lib/firebase/auth';\nimport { VolunteerTask } from '@/app/lib/firebase/firestore';\nimport { generateWeeklyTasks, generateNearbyBusinessTask } from '@/app/lib/tasks/taskGenerator';\nimport { getNearbyPlaces } from '@/app/lib/location/locationService';\n\n// Assign weekly tasks to a user based on their profile\nexport const assignWeeklyTasks = async (userId: string): Promise<VolunteerTask[]> => {\n    try {\n        // Get user profile\n        const userDoc = await getDoc(doc(db, 'users', userId));\n        if (!userDoc.exists()) {\n            throw new Error('User not found');\n        }\n\n        const userProfile = userDoc.data() as UserProfile;\n        const {\n            weeklyCommitment,\n            level: userLevel,\n            rankingPreferences,\n            location\n        } = userProfile;\n\n        // Check if user already has active tasks for this week\n        const existingTasksQuery = query(\n            collection(db, 'tasks'),\n            where('assignedTo', '==', userId),\n            where('isAssigned', '==', true)\n        );\n\n        const existingTasksSnapshot = await getDocs(existingTasksQuery);\n\n        // If user already has tasks, return them\n        if (!existingTasksSnapshot.empty) {\n            const existingTasks: VolunteerTask[] = [];\n            existingTasksSnapshot.forEach(doc => {\n                existingTasks.push({ id: doc.id, ...doc.data() } as VolunteerTask);\n            });\n            return existingTasks;\n        }\n\n        // Create tasks based on user preferences\n        let tasksToAssign: VolunteerTask[] = [];\n\n        // First, try to generate location-based tasks if the user has location data\n        if (userLevel !== 'Sprout' && location && location.latitude !== 0) {\n            // Get nearby places\n            const nearbyPlaces = await getNearbyPlaces(location, 2000, 10);\n\n            // Generate tasks for some of the nearby places\n            for (const place of nearbyPlaces.slice(0, 2)) { // Just use 2 places for now\n                const businessTask = generateNearbyBusinessTask(\n                    place.name,\n                    place.type,\n                    place.location,\n                    userLevel\n                );\n\n                if (businessTask) {\n                    tasksToAssign.push(businessTask);\n                }\n            }\n        }\n\n        // Generate additional random tasks to fulfill the user's weekly commitment\n        const additionalTasksNeeded = weeklyCommitment - tasksToAssign.length;\n\n        if (additionalTasksNeeded > 0) {\n            const randomTasks = generateWeeklyTasks(\n                additionalTasksNeeded,\n                userLevel,\n                location,\n                rankingPreferences\n            );\n\n            tasksToAssign = [...tasksToAssign, ...randomTasks];\n        }\n\n        // Save tasks to Firestore and assign to user\n        const batch = writeBatch(db);\n        const assignedTasks: VolunteerTask[] = [];\n\n        for (const task of tasksToAssign) {\n            // Add the task to Firestore\n            const taskRef = await addDoc(collection(db, 'tasks'), {\n                ...task,\n                assignedTo: userId,\n                isAssigned: true,\n                updatedAt: serverTimestamp()\n            });\n\n            // Add the id to the task object\n            assignedTasks.push({\n                id: taskRef.id,\n                ...task,\n                assignedTo: userId,\n                isAssigned: true\n            });\n        }\n\n        // Commit all the changes\n        await batch.commit();\n\n        return assignedTasks;\n    } catch (error) {\n        console.error('Error assigning weekly tasks:', error);\n        throw error;\n    }\n};\n\n// Reset weekly tasks for all users\nexport const resetWeeklyTasks = async (): Promise<void> => {\n    try {\n        // This would typically be called by a scheduled function\n        // Get all assigned tasks\n        const tasksQuery = query(\n            collection(db, 'tasks'),\n            where('isAssigned', '==', true)\n        );\n\n        const tasksSnapshot = await getDocs(tasksQuery);\n\n        // Batch delete/update the tasks\n        const batch = writeBatch(db);\n\n        tasksSnapshot.forEach(taskDoc => {\n            // Option 1: Delete the task\n            // batch.delete(taskDoc.ref);\n\n            // Option 2: Archive the task\n            batch.update(taskDoc.ref, {\n                isAssigned: false,\n                isArchived: true,\n                updatedAt: serverTimestamp()\n            });\n        });\n\n        await batch.commit();\n    } catch (error) {\n        console.error('Error resetting weekly tasks:', error);\n        throw error;\n    }\n};\n\n// Get tasks that are suitable for a user based on their level and preferences\nexport const getSuggestedTasks = async (\n    userId: string,\n    limit: number = 10\n): Promise<VolunteerTask[]> => {\n    try {\n        // Get user profile\n        const userDoc = await getDoc(doc(db, 'users', userId));\n        if (!userDoc.exists()) {\n            throw new Error('User not found');\n        }\n\n        const userProfile = userDoc.data() as UserProfile;\n        const { level: userLevel, rankingPreferences } = userProfile;\n\n        // Convert ranking preferences to categories sorted by preference\n        const categories = Object.entries(rankingPreferences)\n            .sort(([, rankA], [, rankB]) => (rankA as number) - (rankB as number))\n            .map(([category]) => {\n                // Convert from camelCase to the category format in the database\n                switch (category) {\n                    case 'communityService': return 'communityService';\n                    case 'environmentalAction': return 'environmentalAction';\n                    case 'educationYouthSupport': return 'educationYouthSupport';\n                    case 'healthWellness': return 'healthWellness';\n                    default: return category;\n                }\n            });\n\n        // Query for unassigned tasks suitable for the user's level\n        // Prioritize the user's preferred categories\n        let suggestedTasks: VolunteerTask[] = [];\n\n        // Try to get tasks from each category in order of preference\n        for (const category of categories) {\n            if (suggestedTasks.length >= limit) break;\n\n            const categoryQuery = query(\n                collection(db, 'tasks'),\n                where('category', '==', category),\n                where('isAssigned', '==', false),\n                where('requiredLevel', '==', userLevel)\n            );\n\n            const categorySnapshot = await getDocs(categoryQuery);\n\n            categorySnapshot.forEach(doc => {\n                if (suggestedTasks.length < limit) {\n                    suggestedTasks.push({ id: doc.id, ...doc.data() } as VolunteerTask);\n                }\n            });\n        }\n\n        // If we still don't have enough tasks, generate some on the fly\n        if (suggestedTasks.length < limit) {\n            const additionalTasksNeeded = limit - suggestedTasks.length;\n\n            // Get user location if available\n            const location = userProfile.location;\n\n            // Generate random tasks\n            const randomTasks = generateWeeklyTasks(\n                additionalTasksNeeded,\n                userLevel,\n                location,\n                rankingPreferences\n            );\n\n            // We don't save these to Firestore yet - they're just suggestions\n            suggestedTasks = [...suggestedTasks, ...randomTasks];\n        }\n\n        return suggestedTasks;\n    } catch (error) {\n        console.error('Error getting suggested tasks:', error);\n        throw error;\n    }\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1309, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/lib/tasks/taskResources.ts"],"sourcesContent":["// app/lib/tasks/taskResources.ts\nimport { VolunteerTask } from '@/app/lib/firebase/firestore';\n\n// Reference resource suggestions for tasks\nexport interface TaskResource {\n  title: string;\n  url: string;\n  description: string;\n}\n\n// Generate resources based on task type and category\nexport const generateTaskResources = (task: VolunteerTask): TaskResource[] => {\n  // Resources by task location type\n  const locationBasedResources = {\n    remote: [\n      {\n        title: 'Working From Home Effectively',\n        url: 'https://www.example.com/remote-work-guide',\n        description: 'Tips for effective remote volunteering'\n      }\n    ],\n    inPerson: [\n      {\n        title: 'In-Person Volunteering Safety Guide',\n        url: 'https://www.example.com/safety-guide',\n        description: 'Safety tips for in-person volunteering'\n      }\n    ],\n    virtual: [\n      {\n        title: 'Virtual Meeting Best Practices',\n        url: 'https://www.example.com/virtual-meetings',\n        description: 'How to run effective virtual volunteering sessions'\n      }\n    ]\n  };\n\n  // Resources by category\n  const categoryBasedResources: {[key: string]: TaskResource[]} = {\n    communityService: [\n      {\n        title: 'Community Service Guide',\n        url: 'https://www.example.com/community-service',\n        description: 'Guide to effective community service'\n      }\n    ],\n    environmentalAction: [\n      {\n        title: 'Environmental Volunteer Guide',\n        url: 'https://www.example.com/environmental-guide',\n        description: 'Best practices for environmental volunteering'\n      }\n    ],\n    educationYouthSupport: [\n      {\n        title: 'Working With Youth',\n        url: 'https://www.example.com/youth-support',\n        description: 'Tips for supporting youth through education'\n      }\n    ],\n    healthWellness: [\n      {\n        title: 'Health & Wellness Volunteering',\n        url: 'https://www.example.com/health-wellness',\n        description: 'Guide to health and wellness volunteering'\n      }\n    ]\n  };\n\n  // Task-specific resources\n  const taskSpecificResources: {[key: string]: TaskResource[]} = {\n    'Mental Health Awareness Campaign': [\n      {\n        title: 'Creating Effective Awareness Campaigns',\n        url: 'https://www.example.com/awareness-campaigns',\n        description: 'How to create impactful awareness campaigns'\n      },\n      {\n        title: 'Mental Health Resources',\n        url: 'https://www.example.com/mental-health',\n        description: 'Facts and statistics about mental health'\n      },\n      {\n        title: 'Mental Health Organizations',\n        url: 'https://www.example.com/mental-health-orgs',\n        description: 'Directory of mental health organizations'\n      }\n    ],\n    // Add more task-specific resources here\n  };\n\n  // Combine resources based on task properties\n  let resources: TaskResource[] = [];\n\n  // Add location-based resources\n  if (task.locationType && locationBasedResources[task.locationType]) {\n    resources = [...resources, ...locationBasedResources[task.locationType]];\n  }\n\n  // Add category-based resources\n  if (task.category && categoryBasedResources[task.category]) {\n    resources = [...resources, ...categoryBasedResources[task.category]];\n  }\n\n  // Add task-specific resources\n  if (taskSpecificResources[task.title]) {\n    resources = [...resources, ...taskSpecificResources[task.title]];\n  }\n\n  return resources;\n};\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;AAW1B,MAAM,wBAAwB,CAAC;IACpC,kCAAkC;IAClC,MAAM,yBAAyB;QAC7B,QAAQ;YACN;gBACE,OAAO;gBACP,KAAK;gBACL,aAAa;YACf;SACD;QACD,UAAU;YACR;gBACE,OAAO;gBACP,KAAK;gBACL,aAAa;YACf;SACD;QACD,SAAS;YACP;gBACE,OAAO;gBACP,KAAK;gBACL,aAAa;YACf;SACD;IACH;IAEA,wBAAwB;IACxB,MAAM,yBAA0D;QAC9D,kBAAkB;YAChB;gBACE,OAAO;gBACP,KAAK;gBACL,aAAa;YACf;SACD;QACD,qBAAqB;YACnB;gBACE,OAAO;gBACP,KAAK;gBACL,aAAa;YACf;SACD;QACD,uBAAuB;YACrB;gBACE,OAAO;gBACP,KAAK;gBACL,aAAa;YACf;SACD;QACD,gBAAgB;YACd;gBACE,OAAO;gBACP,KAAK;gBACL,aAAa;YACf;SACD;IACH;IAEA,0BAA0B;IAC1B,MAAM,wBAAyD;QAC7D,oCAAoC;YAClC;gBACE,OAAO;gBACP,KAAK;gBACL,aAAa;YACf;YACA;gBACE,OAAO;gBACP,KAAK;gBACL,aAAa;YACf;YACA;gBACE,OAAO;gBACP,KAAK;gBACL,aAAa;YACf;SACD;IAEH;IAEA,6CAA6C;IAC7C,IAAI,YAA4B,EAAE;IAElC,+BAA+B;IAC/B,IAAI,KAAK,YAAY,IAAI,sBAAsB,CAAC,KAAK,YAAY,CAAC,EAAE;QAClE,YAAY;eAAI;eAAc,sBAAsB,CAAC,KAAK,YAAY,CAAC;SAAC;IAC1E;IAEA,+BAA+B;IAC/B,IAAI,KAAK,QAAQ,IAAI,sBAAsB,CAAC,KAAK,QAAQ,CAAC,EAAE;QAC1D,YAAY;eAAI;eAAc,sBAAsB,CAAC,KAAK,QAAQ,CAAC;SAAC;IACtE;IAEA,8BAA8B;IAC9B,IAAI,qBAAqB,CAAC,KAAK,KAAK,CAAC,EAAE;QACrC,YAAY;eAAI;eAAc,qBAAqB,CAAC,KAAK,KAAK,CAAC;SAAC;IAClE;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1423, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/dashboard/TaskDetailModal.tsx"],"sourcesContent":["// app/components/dashboard/TaskDetailModal.tsx - Fixed version for date handling and optional properties\n\n// Fix for the lines with Date.toDate() errors\n// The issue is that we're treating Date objects as if they were Firestore Timestamps\n// Let's create a helper function to safely handle both:\n\nimport { useState } from 'react';\nimport { VolunteerTask } from '@/app/lib/firebase/firestore';\nimport { TaskResource } from '@/app/lib/tasks/taskResources';\n\ninterface TaskDetailModalProps {\n  task: VolunteerTask;\n  resources: TaskResource[];\n  isCompleted: boolean;\n  isInProgress?: boolean;\n  onStartTask: () => void;\n  onClose: () => void;\n  userId: string;\n}\n\nconst TaskDetailModal: React.FC<TaskDetailModalProps> = ({\n  task,\n  resources,\n  isCompleted,\n  isInProgress = false,\n  onStartTask,\n  onClose,\n  userId\n}) => {\n  const [selectedTab, setSelectedTab] = useState('details');\n  const [showCalendarOptions, setShowCalendarOptions] = useState(false);\n\n  // Helper function to safely format dates from either Date objects or Firestore Timestamps\n  const formatDate = (dateValue: any): string => {\n    if (!dateValue) return 'Not specified';\n    \n    // Create a JavaScript Date object, handling both regular Date objects and Firestore Timestamps\n    let date: Date;\n    if (typeof dateValue.toDate === 'function') {\n      // It's a Firestore Timestamp\n      date = dateValue.toDate();\n    } else if (dateValue instanceof Date) {\n      // It's already a Date object\n      date = dateValue;\n    } else {\n      // It might be a string or number, try to convert\n      date = new Date(dateValue);\n    }\n    \n    return date.toLocaleDateString('en-US', { \n      year: 'numeric', \n      month: 'long', \n      day: 'numeric' \n    });\n  };\n  \n  // Helper function to safely format time from either Date objects or Firestore Timestamps\n  const formatTime = (dateValue: any): string => {\n    if (!dateValue) return '';\n    \n    // Create a JavaScript Date object, handling both regular Date objects and Firestore Timestamps\n    let date: Date;\n    if (typeof dateValue.toDate === 'function') {\n      // It's a Firestore Timestamp\n      date = dateValue.toDate();\n    } else if (dateValue instanceof Date) {\n      // It's already a Date object\n      date = dateValue;\n    } else {\n      // It might be a string or number, try to convert\n      date = new Date(dateValue);\n    }\n    \n    return date.toLocaleTimeString();\n  };\n  \n  // Format address if available\n  const formatAddress = () => {\n    if (!task.location) return 'Remote / Not specified';\n    \n    if (task.location.address) return task.location.address;\n    \n    if (task.location.coordinates) {\n      return `(${task.location.coordinates.latitude.toFixed(4)}, ${task.location.coordinates.longitude.toFixed(4)})`;\n    }\n    \n    return 'Location not specified';\n  };\n\n  // Handle calendar export\n  const handleCalendarExport = (type: string) => {\n    // In a real implementation, you would generate the appropriate calendar file\n    alert(`Exporting to ${type} calendar. This would download a calendar file in a real implementation.`);\n    setShowCalendarOptions(false);\n  };\n\n  // Format time spent (handle undefined value)\n  const formatTimeSpent = (seconds?: number): string => {\n    if (seconds === undefined || seconds <= 0) return 'None';\n    \n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    \n    return `${hours}h ${minutes}m ${secs}s`;\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-[100] p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-3xl w-full max-h-[90vh] flex flex-col\">\n        <div className=\"p-6 border-b\">\n          <div className=\"flex justify-between items-start\">\n            <h2 className=\"text-2xl font-bold text-gray-900 pr-8\">{task.title}</h2>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-500\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          <div className=\"flex mt-4 border-b\">\n            <button\n              onClick={() => setSelectedTab('details')}\n              className={`px-4 py-2 text-sm font-medium ${\n                selectedTab === 'details'\n                  ? 'text-green-700 border-b-2 border-green-500'\n                  : 'text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              Details\n            </button>\n            <button\n              onClick={() => setSelectedTab('resources')}\n              className={`px-4 py-2 text-sm font-medium ${\n                selectedTab === 'resources'\n                  ? 'text-green-700 border-b-2 border-green-500'\n                  : 'text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              Resources\n            </button>\n            <button\n              onClick={() => setSelectedTab('history')}\n              className={`px-4 py-2 text-sm font-medium ${\n                selectedTab === 'history'\n                  ? 'text-green-700 border-b-2 border-green-500'\n                  : 'text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              Activity\n            </button>\n            <button\n              onClick={() => setSelectedTab('status')}\n              className={`px-4 py-2 text-sm font-medium ${\n                selectedTab === 'status'\n                  ? 'text-green-700 border-b-2 border-green-500'\n                  : 'text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              Status\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"p-6 flex-grow overflow-y-auto\">\n          {selectedTab === 'details' && (\n            <div>\n              <div className=\"mb-6\">\n                <p className=\"text-gray-700 whitespace-pre-line\">{task.description}</p>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                <div>\n                  <h3 className=\"text-sm font-medium text-gray-500 mb-1\">Category</h3>\n                  <p className=\"text-gray-900\">\n                    {task.category === 'communityService' ? 'Community Service' : \n                     task.category === 'environmentalAction' ? 'Environmental Action' : \n                     task.category === 'educationYouthSupport' ? 'Education & Youth Support' : \n                     'Health & Wellness'}\n                  </p>\n                </div>\n                \n                <div>\n                  <h3 className=\"text-sm font-medium text-gray-500 mb-1\">Estimated Time</h3>\n                  <p className=\"text-gray-900\">\n                    {task.estimatedTime < 60 \n                      ? `${task.estimatedTime} minutes` \n                      : `${Math.floor(task.estimatedTime / 60)}h ${task.estimatedTime % 60 > 0 ? `${task.estimatedTime % 60}m` : ''}`}\n                  </p>\n                </div>\n                \n                <div>\n                  <h3 className=\"text-sm font-medium text-gray-500 mb-1\">Location Type</h3>\n                  <p className=\"text-gray-900\">\n                    {task.locationType === 'remote' ? 'Remote (do from home)' : \n                     task.locationType === 'inPerson' ? 'In-person' : 'Virtual meeting'}\n                  </p>\n                </div>\n                \n                <div>\n                  <h3 className=\"text-sm font-medium text-gray-500 mb-1\">Address / Location</h3>\n                  <p className=\"text-gray-900\">{formatAddress()}</p>\n                </div>\n                \n                <div>\n                  <h3 className=\"text-sm font-medium text-gray-500 mb-1\">Date Added</h3>\n                  <p className=\"text-gray-900\">{formatDate(task.createdAt)}</p>\n                </div>\n                \n                <div>\n                  <h3 className=\"text-sm font-medium text-gray-500 mb-1\">Status</h3>\n                  <p className={`font-medium ${\n                    isCompleted ? 'text-green-600' : \n                    isInProgress ? 'text-blue-600' :\n                    task.status === 'paused' ? 'text-yellow-600' :\n                    task.status === 'scheduled' ? 'text-purple-600' : 'text-gray-600'\n                  }`}>\n                    {isCompleted ? 'Completed' : \n                     isInProgress ? 'In Progress' :\n                     task.status === 'paused' ? 'Paused' :\n                     task.status === 'scheduled' ? 'Scheduled' : 'Open'}\n                  </p>\n                </div>\n              </div>\n              \n              {task.impact && (\n                <div className=\"mb-6\">\n                  <h3 className=\"text-sm font-medium text-gray-500 mb-1\">Impact</h3>\n                  <p className=\"text-gray-700\">{task.impact}</p>\n                </div>\n              )}\n              \n              {task.requirements && (\n                <div className=\"mb-6\">\n                  <h3 className=\"text-sm font-medium text-gray-500 mb-1\">Requirements</h3>\n                  <p className=\"text-gray-700\">{task.requirements}</p>\n                </div>\n              )}\n            </div>\n          )}\n          \n          {selectedTab === 'resources' && (\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Helpful Resources</h3>\n              \n              {resources.length === 0 ? (\n                <p className=\"text-gray-500\">No resources available for this task.</p>\n              ) : (\n                <div className=\"space-y-4\">\n                  {resources.map((resource, index) => (\n                    <div key={index} className=\"border rounded-md p-4\">\n                      <h4 className=\"font-medium text-gray-900 mb-1\">{resource.title}</h4>\n                      {resource.description && (\n                        <p className=\"text-gray-600 text-sm mb-2\">{resource.description}</p>\n                      )}\n                      <a \n                        href={resource.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-sm text-green-600 hover:underline inline-flex items-center\"\n                      >\n                        Visit Resource\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                        </svg>\n                      </a>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n          \n          {selectedTab === 'history' && (\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Activity History</h3>\n              \n              {task.pauseData && task.pauseData.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {task.pauseData.map((pause, index) => (\n                    <div key={index} className=\"border-l-4 border-yellow-400 pl-4 py-2\">\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <h4 className=\"font-medium text-gray-900\">Task Paused</h4>\n                          <p className=\"text-sm text-gray-600\">\n                            {formatDate(pause.pauseTime)} at {formatTime(pause.pauseTime)}\n                          </p>\n                        </div>\n                        {pause.resumeTime && (\n                          <div className=\"text-right\">\n                            <h4 className=\"font-medium text-green-600\">Resumed</h4>\n                            <p className=\"text-sm text-gray-600\">\n                              {formatDate(pause.resumeTime)} at {formatTime(pause.resumeTime)}\n                            </p>\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"mt-2\">\n                        <p className=\"text-sm font-medium text-gray-700\">Reason: {pause.reason}</p>\n                        <p className=\"text-sm text-gray-600 mt-1\">{pause.description}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <p className=\"text-gray-500\">No activity recorded for this task yet.</p>\n              )}\n              \n              {isCompleted && task.completionDate && (\n                <div className=\"mt-4 border-l-4 border-green-400 pl-4 py-2\">\n                  <h4 className=\"font-medium text-gray-900\">Task Completed</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    {formatDate(task.completionDate)} at {formatTime(task.completionDate)}\n                  </p>\n                </div>\n              )}\n            </div>\n          )}\n          \n          {selectedTab === 'status' && (\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Task Status</h3>\n              \n              <div className=\"bg-gray-50 p-4 rounded-lg mb-4\">\n                <div className=\"flex items-center mb-2\">\n                  <div className={`w-3 h-3 rounded-full mr-2 ${\n                    isCompleted ? 'bg-green-500' : \n                    isInProgress ? 'bg-blue-500' :\n                    task.status === 'paused' ? 'bg-yellow-500' :\n                    task.status === 'scheduled' ? 'bg-purple-500' : 'bg-gray-500'\n                  }`}></div>\n                  <h4 className=\"font-medium\">Current Status:</h4>\n                  <span className={`ml-2 ${\n                    isCompleted ? 'text-green-600' : \n                    isInProgress ? 'text-blue-600' :\n                    task.status === 'paused' ? 'text-yellow-600' :\n                    task.status === 'scheduled' ? 'text-purple-600' : 'text-gray-600'\n                  }`}>\n                    {isCompleted ? 'Completed' : \n                     isInProgress ? 'In Progress' :\n                     task.status === 'paused' ? 'Paused' :\n                     task.status === 'scheduled' ? 'Scheduled' : 'Open'}\n                  </span>\n                </div>\n                \n                {task.scheduledTime && (\n                  <div className=\"ml-5 text-sm text-gray-600\">\n                    Scheduled for: {formatDate(task.scheduledTime)} at {formatTime(task.scheduledTime)}\n                  </div>\n                )}\n                \n                {task.timeSpent !== undefined && task.timeSpent > 0 && (\n                  <div className=\"ml-5 text-sm text-gray-600\">\n                    Time spent: {formatTimeSpent(task.timeSpent)}\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h4 className=\"font-medium mb-2\">Task Progress</h4>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center\">\n                    <div className={`w-3 h-3 rounded-full mr-2 ${task.createdAt ? 'bg-green-500' : 'bg-gray-300'}`}></div>\n                    <span className=\"text-sm\">Created</span>\n                    {task.createdAt && (\n                      <span className=\"text-xs text-gray-500 ml-2\">\n                        {formatDate(task.createdAt)}\n                      </span>\n                    )}\n                  </div>\n                  \n                  <div className=\"flex items-center\">\n                    <div className={`w-3 h-3 rounded-full mr-2 ${task.scheduledTime ? 'bg-green-500' : 'bg-gray-300'}`}></div>\n                    <span className=\"text-sm\">Scheduled</span>\n                    {task.scheduledTime && (\n                      <span className=\"text-xs text-gray-500 ml-2\">\n                        {formatDate(task.scheduledTime)}\n                      </span>\n                    )}\n                  </div>\n                  \n                  <div className=\"flex items-center\">\n                    <div className={`w-3 h-3 rounded-full mr-2 ${task.status === 'in-progress' || task.status === 'paused' || isCompleted ? 'bg-green-500' : 'bg-gray-300'}`}></div>\n                    <span className=\"text-sm\">Started</span>\n                  </div>\n                  \n                  <div className=\"flex items-center\">\n                    <div className={`w-3 h-3 rounded-full mr-2 ${isCompleted ? 'bg-green-500' : 'bg-gray-300'}`}></div>\n                    <span className=\"text-sm\">Completed</span>\n                    {isCompleted && task.completionDate && (\n                      <span className=\"text-xs text-gray-500 ml-2\">\n                        {formatDate(task.completionDate)}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"p-4 border-t flex justify-between items-center\">\n          <div>\n            {task.isCustom && (\n              <span className=\"text-xs text-gray-500 bg-gray-100 rounded-full px-2 py-1\">\n                Custom Task\n              </span>\n            )}\n          </div>\n          \n          <div className=\"flex space-x-3\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 border rounded text-gray-700 hover:bg-gray-50\"\n            >\n              Close\n            </button>\n            \n            {!isCompleted && (\n              <div className=\"relative\">\n                <button\n                  onClick={onStartTask}\n                  className={`px-4 py-2 ${\n                    isInProgress \n                      ? 'bg-blue-600 hover:bg-blue-700' \n                      : 'bg-green-600 hover:bg-green-700'\n                  } text-white rounded`}\n                >\n                  {isInProgress ? 'View Progress' : 'Start Task'}\n                </button>\n                \n                {/* Calendar Options Dropdown */}\n                {!isInProgress && !isCompleted && (\n                  <div className=\"relative\">\n                    <button\n                      onMouseEnter={() => setShowCalendarOptions(true)}\n                      onMouseLeave={() => setShowCalendarOptions(false)}\n                      className=\"absolute -top-10 right-0 px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded\"\n                    >\n                      Schedule Task\n                    </button>\n                    \n                    {showCalendarOptions && (\n                      <div \n                        className=\"absolute -top-10 right-full mr-1 bg-white shadow-lg rounded-md overflow-hidden z-10\"\n                        onMouseEnter={() => setShowCalendarOptions(true)}\n                        onMouseLeave={() => setShowCalendarOptions(false)}\n                      >\n                        <div className=\"flex flex-col\">\n                          <button\n                            onClick={() => handleCalendarExport('Google')}\n                            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 text-left whitespace-nowrap\"\n                          >\n                            Google Calendar\n                          </button>\n                          <button\n                            onClick={() => handleCalendarExport('Outlook')}\n                            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 text-left whitespace-nowrap\"\n                          >\n                            Outlook\n                          </button>\n                          <button\n                            onClick={() => handleCalendarExport('iCal')}\n                            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 text-left whitespace-nowrap\"\n                          >\n                            iCal\n                          </button>\n                          <button\n                            onClick={() => handleCalendarExport('Office365')}\n                            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 text-left whitespace-nowrap\"\n                          >\n                            Office365\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDetailModal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2476, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/dashboard/TaskCard.tsx"],"sourcesContent":["// app/components/dashboard/TaskCard.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { VolunteerTask } from '@/app/lib/firebase/firestore';\nimport { generateTaskResources, TaskResource } from '@/app/lib/tasks/taskResources';\nimport TaskDetailModal from './TaskDetailModal';\n\ninterface TaskCardProps {\n  task: VolunteerTask;\n  isCompleted: boolean;\n  onComplete: (task: VolunteerTask) => void;\n  userId: string;\n  isDisabled?: boolean;\n  onTaskStart?: (taskId: string) => void;\n  onTaskPause?: () => void;\n}\n\nconst TaskCard: React.FC<TaskCardProps> = ({ \n  task, \n  isCompleted, \n  onComplete, \n  userId,\n  isDisabled = false,\n  onTaskStart,\n  onTaskPause\n}) => {\n  const [showDetailModal, setShowDetailModal] = useState(false);\n  const [showFullDescription, setShowFullDescription] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState<number | null>(null);\n  const resources = generateTaskResources(task);\n\n  // Check if description is too long\n  const isDescriptionLong = task.description.length > 120;\n  const truncatedDescription = isDescriptionLong \n    ? `${task.description.substring(0, 120)}...` \n    : task.description;\n\n  // Check if task is in progress\n  const isInProgress = task.status === 'in-progress' || task.status === 'paused';\n  \n  // Get time since scheduled (if applicable)\n  useEffect(() => {\n    if (task.scheduledTime) {\n      const scheduledTime = task.scheduledTime.toDate ? task.scheduledTime.toDate() : new Date(task.scheduledTime);\n      const now = new Date();\n      \n      // If scheduled time is in the future, show countdown\n      if (scheduledTime > now) {\n        const interval = setInterval(() => {\n          const timeDiff = scheduledTime.getTime() - new Date().getTime();\n          setTimeRemaining(timeDiff > 0 ? timeDiff : 0);\n        }, 1000);\n        \n        return () => clearInterval(interval);\n      }\n    }\n  }, [task.scheduledTime]);\n\n  // Get category color\n  const getCategoryColor = (category: string) => {\n    switch (category) {\n      case 'communityService':\n        return 'bg-purple-100 text-purple-800 border-purple-200';\n      case 'environmentalAction':\n        return 'bg-green-100 text-green-800 border-green-200';\n      case 'educationYouthSupport':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'healthWellness':\n        return 'bg-blue-100 text-blue-800 border-blue-200';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n  \n  // Format time remaining\n  const formatTimeRemaining = () => {\n    if (timeRemaining === null) return '';\n    \n    const hours = Math.floor(timeRemaining / (1000 * 60 * 60));\n    const minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);\n    \n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${seconds}s`;\n    } else {\n      return `${seconds}s`;\n    }\n  };\n\n  return (\n    <div className={`border rounded-lg overflow-hidden relative ${isDisabled ? 'opacity-50 pointer-events-none' : ''}`}>\n      {/* Expand button */}\n      <button \n        onClick={() => setShowDetailModal(true)}\n        className=\"absolute top-2 right-2 p-1 rounded-full bg-white/80 hover:bg-white\"\n        title=\"View details\"\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5v-4m0 4h-4m4 0l-5-5\" />\n        </svg>\n      </button>\n\n      {/* Scheduled indicator */}\n      {task.scheduledTime && timeRemaining !== null && (\n        <div className=\"absolute top-2 left-2 bg-white/90 rounded-full px-2 py-1 text-xs font-medium flex items-center\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 mr-1 text-purple-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n          <span>{formatTimeRemaining()}</span>\n        </div>\n      )}\n\n      {/* Category Banner */}\n      <div className={`py-1 px-3 text-sm font-medium ${getCategoryColor(task.category)}`}>\n        {task.category === 'communityService' ? 'Community Service' : \n         task.category === 'environmentalAction' ? 'Environmental Action' : \n         task.category === 'educationYouthSupport' ? 'Education & Youth' : \n         'Health & Wellness'}\n      </div>\n      \n      {/* Card Content */}\n      <div className=\"p-4 bg-white\">\n        <h3 className=\"text-lg font-semibold mb-2 pr-6\">{task.title}</h3>\n        \n        <div className=\"mb-3\">\n          {showFullDescription ? (\n            <p className=\"text-gray-600 text-sm\">{task.description}</p>\n          ) : (\n            <p className=\"text-gray-600 text-sm\">{truncatedDescription}</p>\n          )}\n          \n          {isDescriptionLong && (\n            <button \n              onClick={() => setShowFullDescription(!showFullDescription)}\n              className=\"text-xs text-green-600 mt-1 hover:underline\"\n            >\n              {showFullDescription ? 'View Less' : 'View More'}\n            </button>\n          )}\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <div className=\"text-xs bg-gray-100 rounded-full px-2 py-1 flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            {task.estimatedTime < 60 \n              ? `${task.estimatedTime} minutes` \n              : `${Math.floor(task.estimatedTime / 60)}h ${task.estimatedTime % 60 > 0 ? `${task.estimatedTime % 60}m` : ''}`}\n          </div>\n          \n          <div className=\"text-xs bg-gray-100 rounded-full px-2 py-1 flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n            </svg>\n            {task.locationType === 'remote' ? 'Do from home' : \n             task.locationType === 'inPerson' ? 'In-person' : 'Virtual meeting'}\n          </div>\n          \n          {task.status && (\n            <div className={`text-xs rounded-full px-2 py-1 flex items-center ${\n              task.status === 'in-progress' ? 'bg-blue-100 text-blue-800' :\n              task.status === 'paused' ? 'bg-yellow-100 text-yellow-800' :\n              task.status === 'scheduled' ? 'bg-purple-100 text-purple-800' :\n              task.status === 'completed' ? 'bg-green-100 text-green-800' :\n              'bg-gray-100 text-gray-800'\n            }`}>\n              <span>\n                {task.status === 'in-progress' ? 'In Progress' :\n                 task.status === 'paused' ? 'Paused' :\n                 task.status === 'scheduled' ? 'Scheduled' :\n                 task.status === 'completed' ? 'Completed' :\n                 'Open'}\n              </span>\n            </div>\n          )}\n        </div>\n        \n        {/* Resources Section */}\n        {resources.length > 0 && (\n          <div className=\"mb-4\">\n            <p className=\"text-xs font-medium text-gray-700 mb-1\">Helpful Resources:</p>\n            <div className=\"flex flex-wrap gap-1\">\n              {resources.slice(0, 2).map((resource, index) => (\n                <a \n                  key={index}\n                  href={resource.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-xs text-green-600 hover:underline\"\n                >\n                  {resource.title}{index < Math.min(resources.length, 2) - 1 ? ', ' : ''}\n                </a>\n              ))}\n              {resources.length > 2 && (\n                <button \n                  onClick={() => setShowDetailModal(true)}\n                  className=\"text-xs text-green-600 hover:underline\"\n                >\n                  +{resources.length - 2} more\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {isCompleted ? (\n          <div className=\"bg-green-100 text-green-800 text-center py-2 px-4 rounded-md font-medium text-sm\">\n            Task Completed\n          </div>\n        ) : isInProgress ? (\n          <button\n            onClick={() => onComplete(task)}\n            className=\"w-full py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md font-medium text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n          >\n            View Progress\n          </button>\n        ) : (\n          <button\n            onClick={() => onComplete(task)}\n            className=\"w-full py-2 bg-green-600 hover:bg-green-700 text-white rounded-md font-medium text-sm focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50\"\n          >\n            Start Task\n          </button>\n        )}\n      </div>\n\n      {/* Detail Modal */}\n      {showDetailModal && (\n        <TaskDetailModal\n          task={task}\n          resources={resources}\n          isCompleted={isCompleted}\n          isInProgress={isInProgress}\n          onStartTask={() => {\n            setShowDetailModal(false);\n            onComplete(task);\n          }}\n          onClose={() => setShowDetailModal(false)}\n          userId={userId}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TaskCard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2892, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/dashboard/PauseReasonModal.tsx"],"sourcesContent":["// app/components/dashboard/PauseReasonModal.tsx\n'use client';\n\nimport { useState } from 'react';\n\ninterface PauseReasonModalProps {\n  onSubmit: (reason: string, description: string) => void;\n  onResume: () => void;\n}\n\nconst PauseReasonModal: React.FC<PauseReasonModalProps> = ({ onSubmit, onResume }) => {\n  const [selectedReasons, setSelectedReasons] = useState<string[]>([]);\n  const [description, setDescription] = useState('');\n  \n  const reasons = [\n    'Taking a break',\n    'Need to attend to something urgent',\n    'Technical issues',\n    'Meeting with someone',\n    'Waiting for resources/information',\n    'Other'\n  ];\n  \n  const handleReasonToggle = (reason: string) => {\n    if (selectedReasons.includes(reason)) {\n      setSelectedReasons(prev => prev.filter(r => r !== reason));\n    } else {\n      setSelectedReasons(prev => [...prev, reason]);\n    }\n  };\n  \n  const handleSubmit = () => {\n    if (selectedReasons.length === 0 || !description.trim()) return;\n    \n    onSubmit(selectedReasons.join(', '), description);\n  };\n  \n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-[70] p-4\">\n      <div className=\"bg-white rounded-lg max-w-md w-full p-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">Why are you pausing this task?</h3>\n        \n        <div className=\"mb-4\">\n          <p className=\"text-sm text-gray-700 mb-2\">Select all that apply:</p>\n          \n          <div className=\"space-y-2\">\n            {reasons.map(reason => (\n              <label key={reason} className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedReasons.includes(reason)}\n                  onChange={() => handleReasonToggle(reason)}\n                  className=\"h-4 w-4 text-green-600 focus:ring-green-500 border-gray-300 rounded\"\n                />\n                <span className=\"ml-2 text-sm text-gray-700\">{reason}</span>\n              </label>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Please provide more details:\n          </label>\n          <textarea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            className=\"w-full px-3 py-2 border rounded-md h-32\"\n            placeholder=\"Add more context about why you're pausing...\"\n            required\n          />\n        </div>\n        \n        <div className=\"flex justify-between\">\n          <button\n            onClick={onResume}\n            className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\n          >\n            Resume Instead\n          </button>\n          \n          <button\n            onClick={handleSubmit}\n            disabled={selectedReasons.length === 0 || !description.trim()}\n            className={`px-4 py-2 ${\n              selectedReasons.length === 0 || !description.trim() \n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed' \n                : 'bg-yellow-500 text-white hover:bg-yellow-600'\n            } rounded-md`}\n          >\n            Pause Task\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PauseReasonModal;"],"names":[],"mappings":"AAAA,gDAAgD;;;;;AAGhD;;;AAFA;;AASA,MAAM,mBAAoD,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE;;IAC/E,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,UAAU;QACd;QACA;QACA;QACA;QACA;QACA;KACD;IAED,MAAM,qBAAqB,CAAC;QAC1B,IAAI,gBAAgB,QAAQ,CAAC,SAAS;YACpC,mBAAmB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,IAAK,MAAM;QACpD,OAAO;YACL,mBAAmB,CAAA,OAAQ;uBAAI;oBAAM;iBAAO;QAC9C;IACF;IAEA,MAAM,eAAe;QACnB,IAAI,gBAAgB,MAAM,KAAK,KAAK,CAAC,YAAY,IAAI,IAAI;QAEzD,SAAS,gBAAgB,IAAI,CAAC,OAAO;IACvC;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA6B;;;;;;8BAE3C,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAE,WAAU;sCAA6B;;;;;;sCAE1C,6LAAC;4BAAI,WAAU;sCACZ,QAAQ,GAAG,CAAC,CAAA,uBACX,6LAAC;oCAAmB,WAAU;;sDAC5B,6LAAC;4CACC,MAAK;4CACL,SAAS,gBAAgB,QAAQ,CAAC;4CAClC,UAAU,IAAM,mBAAmB;4CACnC,WAAU;;;;;;sDAEZ,6LAAC;4CAAK,WAAU;sDAA8B;;;;;;;mCAPpC;;;;;;;;;;;;;;;;8BAalB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAM,WAAU;sCAA+C;;;;;;sCAGhE,6LAAC;4BACC,OAAO;4BACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;4BAC9C,WAAU;4BACV,aAAY;4BACZ,QAAQ;;;;;;;;;;;;8BAIZ,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAID,6LAAC;4BACC,SAAS;4BACT,UAAU,gBAAgB,MAAM,KAAK,KAAK,CAAC,YAAY,IAAI;4BAC3D,WAAW,CAAC,UAAU,EACpB,gBAAgB,MAAM,KAAK,KAAK,CAAC,YAAY,IAAI,KAC7C,iDACA,+CACL,WAAW,CAAC;sCACd;;;;;;;;;;;;;;;;;;;;;;;AAOX;GAtFM;KAAA;uCAwFS","debugId":null}},
    {"offset": {"line": 3074, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/dashboard/TaskCompletionModal.tsx"],"sourcesContent":["// app/components/dashboard/TaskCompletionModal.tsx\n'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { VolunteerTask } from '@/app/lib/firebase/firestore';\nimport { doc, updateDoc, arrayUnion, serverTimestamp, increment } from 'firebase/firestore';\nimport { db } from '@/app/lib/firebase/config';\nimport PauseReasonModal from './PauseReasonModal';\nimport { storage } from '@/app/lib/firebase/config';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n\ninterface TaskCompletionModalProps {\n  task: VolunteerTask;\n  userId: string;\n  onClose: () => void;\n  onComplete: () => void;\n  onTaskStart: (taskId: string) => void;\n  onTaskPause: () => void;\n}\n\nconst TaskCompletionModal: React.FC<TaskCompletionModalProps> = ({ \n  task, \n  userId, \n  onClose,\n  onComplete,\n  onTaskStart,\n  onTaskPause\n}) => {\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n  const [showPauseReasonModal, setShowPauseReasonModal] = useState(false);\n  const [timerVisible, setTimerVisible] = useState(false);\n  const [scheduledDate, setScheduledDate] = useState('');\n  const [scheduledTime, setScheduledTime] = useState('');\n  const [timeSpent, setTimeSpent] = useState(0);\n  const [timerActive, setTimerActive] = useState(false);\n  const [timerIntervalId, setTimerIntervalId] = useState<NodeJS.Timeout | null>(null);\n  const [scheduledDateTime, setScheduledDateTime] = useState<Date | null>(null);\n  const [calendarType, setCalendarType] = useState<string | null>(null);\n  const [uploadedImages, setUploadedImages] = useState<string[]>([]);\n  const [taskStatus, setTaskStatus] = useState(task.completedBy?.includes(userId) ? 'completed' : task.status || 'open');\n  const [pauseData, setPauseData] = useState<{\n    pauseTime: Date;\n    resumeTime?: Date;\n    reason: string;\n    description: string;\n  }[]>(task.pauseData || []);\n  \n  const fileInputRef = useRef<HTMLInputElement>(null);\n  \n  // Check if the scheduled time has arrived and if we're within the 10-minute window\n  const isTimerEnabled = () => {\n    if (!scheduledDateTime) return false;\n    \n    const now = new Date();\n    const timeDiff = now.getTime() - scheduledDateTime.getTime();\n    \n    // Enable if scheduled time has passed but not more than 10 minutes ago\n    return timeDiff >= 0 && timeDiff <= 10 * 60 * 1000;\n  };\n  \n  // Start timer function\n  const startTimer = () => {\n    if (!timerActive) {\n      setTimerActive(true);\n      setTaskStatus('in-progress');\n      onTaskStart(task.id!);\n      \n      const interval = setInterval(() => {\n        setTimeSpent(prev => prev + 1);\n      }, 1000);\n      setTimerIntervalId(interval);\n      \n      // Update task status in Firestore\n      updateTaskStatus('in-progress');\n    }\n  };\n\n  // Stop timer function\n  const stopTimer = () => {\n    if (timerActive && timerIntervalId) {\n      clearInterval(timerIntervalId);\n      setTimerActive(false);\n      setShowPauseReasonModal(true);\n      onTaskPause();\n    }\n  };\n  \n  // Update task status in Firestore\n  const updateTaskStatus = async (status: string) => {\n    try {\n      if (!task.id) return;\n      \n      const taskRef = doc(db, 'tasks', task.id);\n      await updateDoc(taskRef, {\n        status: status,\n        timeSpent: timeSpent,\n        lastUpdated: serverTimestamp()\n      });\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n\n  // Complete task now\n  const completeTaskNow = async () => {\n    try {\n      if (!task.id) return;\n      \n      // Create update data\n      const updateData = {\n        completedBy: arrayUnion(userId),\n        completionDate: serverTimestamp(),\n        timeSpent: timeSpent,\n        status: 'completed',\n        uploadedImages: uploadedImages\n      };\n      \n      // Update the task in Firestore\n      const taskRef = doc(db, 'tasks', task.id);\n      await updateDoc(taskRef, updateData);\n      \n      // Add a seed to the user's account\n      const userRef = doc(db, 'users', userId);\n      await updateDoc(userRef, {\n        seeds: increment(1),\n        completedTasks: increment(1)\n      });\n      \n      // Call the callback\n      onComplete();\n      \n      // Close the modal\n      onClose();\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n\n  // Schedule task\n  const handleScheduleTask = () => {\n    setShowScheduleModal(true);\n  };\n\n  // Handle submit schedule\n  const handleSubmit = () => {\n    if (!scheduledDate || !scheduledTime) return;\n    \n    const dateTime = new Date(`${scheduledDate}T${scheduledTime}`);\n    setScheduledDateTime(dateTime);\n    setShowScheduleModal(false);\n    setShowConfirmationModal(true);\n  };\n\n  // Handle image upload\n  const handleImageUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files?.length || !task.id) return;\n    \n    try {\n      const file = e.target.files[0];\n      \n      // Create a storage reference\n      const storageRef = ref(storage, `task-images/${task.id}/${Date.now()}-${file.name}`);\n      \n      // Upload the file\n      await uploadBytes(storageRef, file);\n      \n      // Get the download URL\n      const downloadURL = await getDownloadURL(storageRef);\n      \n      // Add to uploaded images array\n      setUploadedImages(prev => [...prev, downloadURL]);\n      \n      // Update the task in Firestore with the new image\n      const taskRef = doc(db, 'tasks', task.id);\n      await updateDoc(taskRef, {\n        uploadedImages: arrayUnion(downloadURL)\n      });\n      \n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n\n  // Remove image\n  const handleRemoveImage = (index: number) => {\n    setUploadedImages(prev => prev.filter((_, i) => i !== index));\n    \n    // In a full implementation, you would also remove from storage\n    // and update the Firestore document\n  };\n  \n  // Handle calendar selection\n  const handleCalendarSelect = (type: string) => {\n    setCalendarType(type);\n    // In a real app, you would generate the appropriate calendar link/file\n  };\n\n  // Handle confirmation\n  const handleConfirmation = async (addToCalendar: boolean) => {\n    setShowConfirmationModal(false);\n    \n    if (!scheduledDateTime || !task.id) return;\n    \n    try {\n      // Update task with scheduled time in Firestore\n      const taskRef = doc(db, 'tasks', task.id);\n      await updateDoc(taskRef, {\n        scheduledTime: scheduledDateTime,\n        status: 'scheduled'\n      });\n      \n      setTaskStatus('scheduled');\n      \n      // If scheduled time is now or in the past, start timer immediately\n      const now = new Date();\n      if (scheduledDateTime <= now) {\n        setTimerVisible(true);\n        startTimer();\n      } else {\n        // Set a timeout to start the timer at the scheduled time\n        const timeUntilStart = scheduledDateTime.getTime() - now.getTime();\n        setTimeout(() => {\n          setTimerVisible(true);\n          startTimer();\n        }, timeUntilStart);\n      }\n    } catch (error) {\n      console.error('Error scheduling task:', error);\n    }\n    \n    // Close the modal\n    onClose();\n  };\n  \n  // Handle pause reason submission\n  const handlePauseReasonSubmit = async (reason: string, description: string) => {\n    const pauseInfo = {\n      pauseTime: new Date(),\n      reason,\n      description\n    };\n    \n    const updatedPauseData = [...pauseData, pauseInfo];\n    setPauseData(updatedPauseData);\n    setShowPauseReasonModal(false);\n    \n    // Update task with pause information in Firestore\n    try {\n      if (!task.id) return;\n      \n      const taskRef = doc(db, 'tasks', task.id);\n      await updateDoc(taskRef, {\n        pauseData: updatedPauseData,\n        status: 'paused',\n        timeSpent: timeSpent\n      });\n      \n      setTaskStatus('paused');\n    } catch (error) {\n      console.error('Error updating task pause data:', error);\n    }\n  };\n  \n  // Resume timer\n  const resumeTimer = async () => {\n    // Update the last pause entry with resume time\n    if (pauseData.length > 0) {\n      const updatedPauseData = [...pauseData];\n      const lastIndex = updatedPauseData.length - 1;\n      updatedPauseData[lastIndex] = {\n        ...updatedPauseData[lastIndex],\n        resumeTime: new Date()\n      };\n      \n      setPauseData(updatedPauseData);\n      \n      // Update in Firestore\n      try {\n        if (!task.id) return;\n        \n        const taskRef = doc(db, 'tasks', task.id);\n        await updateDoc(taskRef, {\n          pauseData: updatedPauseData,\n          status: 'in-progress'\n        });\n        \n        setTaskStatus('in-progress');\n      } catch (error) {\n        console.error('Error updating task resume data:', error);\n      }\n    }\n    \n    // Start timer again\n    startTimer();\n  };\n\n  // Clean up on unmount\n  useEffect(() => {\n    return () => {\n      if (timerIntervalId) {\n        clearInterval(timerIntervalId);\n      }\n    };\n  }, [timerIntervalId]);\n\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-[60] p-4\">\n        <div className=\"bg-white rounded-lg shadow-xl max-w-lg w-full\">\n          <div className=\"p-6\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              {taskStatus === 'completed' ? 'Task Completed: ' : 'Complete Task: '}\n              {task.title}\n            </h2>\n            \n            <div className=\"mb-4 px-3 py-2 bg-gray-100 rounded-md\">\n              <p className=\"text-sm font-medium text-gray-700\">\n                Status: <span className={`font-semibold ${\n                  taskStatus === 'completed' ? 'text-green-600' : \n                  taskStatus === 'in-progress' ? 'text-blue-600' :\n                  taskStatus === 'paused' ? 'text-yellow-600' :\n                  taskStatus === 'scheduled' ? 'text-purple-600' : 'text-gray-600'\n                }`}>\n                  {taskStatus === 'completed' ? 'Completed' : \n                   taskStatus === 'in-progress' ? 'In Progress' :\n                   taskStatus === 'paused' ? 'Paused' :\n                   taskStatus === 'scheduled' ? 'Scheduled' : 'Open'}\n                </span>\n              </p>\n            </div>\n            \n            {taskStatus !== 'completed' && (\n              <p className=\"text-gray-700 mb-6\">\n                Ready to complete this volunteer task? You can either:\n              </p>\n            )}\n            \n            {taskStatus !== 'completed' && (\n              <div className=\"space-y-4\">\n                <div className=\"border rounded-lg p-4 hover:bg-gray-50 cursor-pointer\">\n                  <div className=\"flex items-start\">\n                    <div className=\"bg-purple-100 rounded-full p-2 mr-3\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-purple-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                      </svg>\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">Schedule Task</h3>\n                      <p className=\"text-gray-600 text-sm\">\n                        Schedule this task for a specific time. You'll get a reminder when it's time to start.\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <button\n                    onClick={handleScheduleTask}\n                    className=\"mt-3 w-full py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-md text-sm\"\n                  >\n                    Schedule Task\n                  </button>\n                </div>\n                \n                <div className=\"border rounded-lg p-4 hover:bg-gray-50 cursor-pointer\">\n                  <div className=\"flex items-start\">\n                    <div className=\"bg-blue-100 rounded-full p-2 mr-3\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">Start Timer</h3>\n                      <p className=\"text-gray-600 text-sm\">\n                        Start a timer to track the time you spend on this task. The timer will help you log your volunteer hours.\n                      </p>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => {\n                      setTimerVisible(true);\n                      startTimer();\n                      onClose();\n                    }}\n                    disabled={taskStatus !== 'scheduled' || !isTimerEnabled()}\n                    className={`mt-3 w-full py-2 ${\n                      taskStatus === 'scheduled' && isTimerEnabled() \n                        ? 'bg-blue-600 hover:bg-blue-700 cursor-pointer' \n                        : 'bg-blue-300 cursor-not-allowed'\n                    } text-white rounded-md text-sm`}\n                  >\n                    Start Timer\n                  </button>\n                </div>\n                \n                <div className=\"border rounded-lg p-4 hover:bg-gray-50 cursor-pointer\">\n                  <div className=\"flex items-start\">\n                    <div className=\"bg-green-100 rounded-full p-2 mr-3\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">Complete Now</h3>\n                      <p className=\"text-gray-600 text-sm\">\n                        Mark this task as completed right now. Use this option if you've already finished the task.\n                      </p>\n                    </div>\n                  </div>\n                  <button\n                    onClick={completeTaskNow}\n                    disabled={taskStatus !== 'scheduled' || !isTimerEnabled()}\n                    className={`mt-3 w-full py-2 ${\n                      taskStatus === 'scheduled' && isTimerEnabled() \n                        ? 'bg-green-600 hover:bg-green-700 cursor-pointer' \n                        : 'bg-green-300 cursor-not-allowed'\n                    } text-white rounded-md text-sm`}\n                  >\n                    Complete Now\n                  </button>\n                </div>\n              </div>\n            )}\n            \n            {taskStatus === 'completed' && (\n              <div className=\"bg-green-50 rounded-lg p-6 text-center\">\n                <div className=\"flex justify-center mb-4\">\n                  <div className=\"bg-green-100 rounded-full p-3\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  </div>\n                </div>\n                <h3 className=\"text-lg font-medium text-green-800 mb-2\">Task Already Completed!</h3>\n                <p className=\"text-green-700\">\n                  You've already completed this task successfully.\n                </p>\n              </div>\n            )}\n            \n            <div className=\"mt-6 flex justify-end\">\n              <button\n                onClick={onClose}\n                className=\"px-4 py-2 border rounded-md text-gray-600 hover:bg-gray-50\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Schedule Modal */}\n      {showScheduleModal && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-[70] p-4\">\n          <div className=\"bg-white rounded-lg max-w-md w-full p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Schedule Task</h3>\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Date\n              </label>\n              <input\n                type=\"date\"\n                value={scheduledDate}\n                onChange={(e) => setScheduledDate(e.target.value)}\n                className=\"w-full px-3 py-2 border rounded-md\"\n              />\n            </div>\n\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Time\n              </label>\n              <input\n                type=\"time\"\n                value={scheduledTime}\n                onChange={(e) => setScheduledTime(e.target.value)}\n                className=\"w-full px-3 py-2 border rounded-md\"\n              />\n            </div>\n\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={() => setShowScheduleModal(false)}\n                className=\"px-4 py-2 border rounded-md text-gray-700\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSubmit}\n                disabled={!scheduledDate || !scheduledTime}\n                className={`px-4 py-2 ${!scheduledDate || !scheduledTime ? 'bg-gray-300 text-gray-500' : 'bg-green-600 text-white hover:bg-green-700'} rounded-md`}\n              >\n                Schedule\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Confirmation Modal */}\n      {showConfirmationModal && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-[70] p-4\">\n          <div className=\"bg-white rounded-lg max-w-md w-full p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Task Scheduled!</h3>\n            \n            <p className=\"text-gray-700 mb-6\">\n              Your task has been scheduled successfully. Would you like to add it to your calendar?\n            </p>\n            \n            <div className=\"flex justify-between space-x-4 mb-6\">\n              <button\n                onClick={() => handleConfirmation(true)}\n                className=\"flex-1 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\n              >\n                Yes, add to calendar\n              </button>\n              \n              <button\n                onClick={() => handleConfirmation(false)}\n                className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50\"\n              >\n                No, thanks\n              </button>\n            </div>\n            \n            <p className=\"text-sm text-gray-500\">\n              Note: The timer for this task will start automatically at the scheduled time. You'll have 10 minutes to start the timer once the scheduled time arrives.\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* Pause Reason Modal */}\n      {showPauseReasonModal && (\n        <PauseReasonModal \n          onSubmit={handlePauseReasonSubmit}\n          onResume={resumeTimer}\n        />\n      )}\n\n      {/* Floating Timer */}\n      {timerVisible && (\n        <div className=\"fixed bottom-4 right-4 bg-white shadow-lg rounded-lg p-3 z-[70] flex items-center space-x-3\">\n          <div className=\"relative w-12 h-12\">\n            {/* SVG Clock */}\n            <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\n              {/* Clock face */}\n              <circle cx=\"24\" cy=\"24\" r=\"22\" fill=\"white\" stroke=\"#10B981\" strokeWidth=\"2\" />\n              \n              {/* Clock ticks */}\n              {[...Array(12)].map((_, i) => (\n                <line \n                  key={i}\n                  x1=\"24\" \n                  y1=\"4\" \n                  x2=\"24\" \n                  y2=\"8\"\n                  stroke=\"#10B981\"\n                  strokeWidth=\"1.5\"\n                  transform={`rotate(${i * 30} 24 24)`}\n                />\n              ))}\n              \n              {/* Hour hand */}\n              <line \n                x1=\"24\" \n                y1=\"24\" \n                x2=\"24\" \n                y2=\"12\"\n                stroke=\"#065F46\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                transform={`rotate(${(timeSpent / 43200) * 360} 24 24)`}\n              />\n              \n              {/* Minute hand */}\n              <line \n                x1=\"24\" \n                y1=\"24\" \n                x2=\"24\" \n                y2=\"8\"\n                stroke=\"#059669\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                transform={`rotate(${(timeSpent / 3600) * 360} 24 24)`}\n              />\n              \n              {/* Second hand */}\n              <line \n                x1=\"24\" \n                y1=\"26\" \n                x2=\"24\" \n                y2=\"7\"\n                stroke=\"#EF4444\"\n                strokeWidth=\"1\"\n                strokeLinecap=\"round\"\n                transform={`rotate(${(timeSpent % 60) * 6} 24 24)`}\n              />\n              \n              {/* Center dot */}\n              <circle cx=\"24\" cy=\"24\" r=\"1.5\" fill=\"#065F46\" />\n            </svg>\n          </div>\n          \n          <div>\n            <div className=\"text-sm font-medium text-gray-700\">{task.title}</div>\n            <div className=\"font-bold text-green-800\">\n              {Math.floor(timeSpent / 3600)}h {Math.floor((timeSpent % 3600) / 60)}m {timeSpent % 60}s\n            </div>\n            \n            {/* Image Upload Button */}\n            <div className=\"mt-1 flex items-center\">\n              <button\n                onClick={() => fileInputRef.current?.click()}\n                className={`text-xs ${timerActive ? 'text-blue-600 hover:underline cursor-pointer' : 'text-gray-400 cursor-not-allowed'}`}\n                disabled={!timerActive}\n              >\n                Upload Image\n              </button>\n              <input\n                type=\"file\"\n                ref={fileInputRef}\n                onChange={handleImageUpload}\n                accept=\"image/*\"\n                multiple\n                className=\"hidden\"\n                disabled={!timerActive}\n              />\n            </div>\n          </div>\n          \n          {/* Uploaded Images Preview */}\n          {uploadedImages.length > 0 && (\n            <div className=\"flex space-x-1 overflow-x-auto max-w-xs\">\n              {uploadedImages.map((img, index) => (\n                <div key={index} className=\"relative flex-shrink-0\">\n                  <img\n                    src={img}\n                    alt={`Upload ${index + 1}`}\n                    className=\"h-10 w-10 object-cover rounded-md\"\n                  />\n                  <button\n                    onClick={() => handleRemoveImage(index)}\n                    className=\"absolute -top-1 -right-1 bg-red-500 text-white rounded-full p-0.5 shadow-sm\"\n                    title=\"Remove image\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n              ))}\n            </div>\n          )}\n          \n          {timerActive ? (\n            <button\n              onClick={stopTimer}\n              className=\"ml-2 p-2 bg-yellow-500 text-white rounded-full h-8 w-8 flex items-center justify-center hover:bg-yellow-600\"\n              title=\"Pause Timer\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </button>\n          ) : (\n            <button\n              onClick={resumeTimer}\n              className=\"ml-2 p-2 bg-green-500 text-white rounded-full h-8 w-8 flex items-center justify-center hover:bg-green-600\"\n              title=\"Resume Timer\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </button>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default TaskCompletionModal;"],"names":[],"mappings":"AAAA,mDAAmD;;;;;AAGnD;AAEA;AAAA;AACA;AACA;AAEA;AAAA;;;AARA;;;;;;;AAmBA,MAAM,sBAA0D,CAAC,EAC/D,IAAI,EACJ,MAAM,EACN,OAAO,EACP,UAAU,EACV,WAAW,EACX,WAAW,EACZ;;IACC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnE,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAyB;IAC9E,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IACxE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACjE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,WAAW,EAAE,SAAS,UAAU,cAAc,KAAK,MAAM,IAAI;IAC/G,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAKpC,KAAK,SAAS,IAAI,EAAE;IAEzB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAE9C,mFAAmF;IACnF,MAAM,iBAAiB;QACrB,IAAI,CAAC,mBAAmB,OAAO;QAE/B,MAAM,MAAM,IAAI;QAChB,MAAM,WAAW,IAAI,OAAO,KAAK,kBAAkB,OAAO;QAE1D,uEAAuE;QACvE,OAAO,YAAY,KAAK,YAAY,KAAK,KAAK;IAChD;IAEA,uBAAuB;IACvB,MAAM,aAAa;QACjB,IAAI,CAAC,aAAa;YAChB,eAAe;YACf,cAAc;YACd,YAAY,KAAK,EAAE;YAEnB,MAAM,WAAW,YAAY;gBAC3B,aAAa,CAAA,OAAQ,OAAO;YAC9B,GAAG;YACH,mBAAmB;YAEnB,kCAAkC;YAClC,iBAAiB;QACnB;IACF;IAEA,sBAAsB;IACtB,MAAM,YAAY;QAChB,IAAI,eAAe,iBAAiB;YAClC,cAAc;YACd,eAAe;YACf,wBAAwB;YACxB;QACF;IACF;IAEA,kCAAkC;IAClC,MAAM,mBAAmB,OAAO;QAC9B,IAAI;YACF,IAAI,CAAC,KAAK,EAAE,EAAE;YAEd,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS,KAAK,EAAE;YACxC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;gBACvB,QAAQ;gBACR,WAAW;gBACX,aAAa,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;YAC7B;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;IACF;IAEA,oBAAoB;IACpB,MAAM,kBAAkB;QACtB,IAAI;YACF,IAAI,CAAC,KAAK,EAAE,EAAE;YAEd,qBAAqB;YACrB,MAAM,aAAa;gBACjB,aAAa,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE;gBACxB,gBAAgB,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;gBAC9B,WAAW;gBACX,QAAQ;gBACR,gBAAgB;YAClB;YAEA,+BAA+B;YAC/B,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS,KAAK,EAAE;YACxC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;YAEzB,mCAAmC;YACnC,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS;YACjC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;gBACvB,OAAO,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE;gBACjB,gBAAgB,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE;YAC5B;YAEA,oBAAoB;YACpB;YAEA,kBAAkB;YAClB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C;IACF;IAEA,gBAAgB;IAChB,MAAM,qBAAqB;QACzB,qBAAqB;IACvB;IAEA,yBAAyB;IACzB,MAAM,eAAe;QACnB,IAAI,CAAC,iBAAiB,CAAC,eAAe;QAEtC,MAAM,WAAW,IAAI,KAAK,GAAG,cAAc,CAAC,EAAE,eAAe;QAC7D,qBAAqB;QACrB,qBAAqB;QACrB,yBAAyB;IAC3B;IAEA,sBAAsB;IACtB,MAAM,oBAAoB,OAAO;QAC/B,IAAI,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,EAAE;QAEzC,IAAI;YACF,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;YAE9B,6BAA6B;YAC7B,MAAM,aAAa,CAAA,GAAA,oKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,UAAO,EAAE,CAAC,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,IAAI,EAAE;YAEnF,kBAAkB;YAClB,MAAM,CAAA,GAAA,oKAAA,CAAA,cAAW,AAAD,EAAE,YAAY;YAE9B,uBAAuB;YACvB,MAAM,cAAc,MAAM,CAAA,GAAA,oKAAA,CAAA,iBAAc,AAAD,EAAE;YAEzC,+BAA+B;YAC/B,kBAAkB,CAAA,OAAQ;uBAAI;oBAAM;iBAAY;YAEhD,kDAAkD;YAClD,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS,KAAK,EAAE;YACxC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;gBACvB,gBAAgB,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE;YAC7B;QAEF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C;IACF;IAEA,eAAe;IACf,MAAM,oBAAoB,CAAC;QACzB,kBAAkB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;IAEtD,+DAA+D;IAC/D,oCAAoC;IACtC;IAEA,4BAA4B;IAC5B,MAAM,uBAAuB,CAAC;QAC5B,gBAAgB;IAChB,uEAAuE;IACzE;IAEA,sBAAsB;IACtB,MAAM,qBAAqB,OAAO;QAChC,yBAAyB;QAEzB,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,EAAE;QAEpC,IAAI;YACF,+CAA+C;YAC/C,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS,KAAK,EAAE;YACxC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;gBACvB,eAAe;gBACf,QAAQ;YACV;YAEA,cAAc;YAEd,mEAAmE;YACnE,MAAM,MAAM,IAAI;YAChB,IAAI,qBAAqB,KAAK;gBAC5B,gBAAgB;gBAChB;YACF,OAAO;gBACL,yDAAyD;gBACzD,MAAM,iBAAiB,kBAAkB,OAAO,KAAK,IAAI,OAAO;gBAChE,WAAW;oBACT,gBAAgB;oBAChB;gBACF,GAAG;YACL;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C;QAEA,kBAAkB;QAClB;IACF;IAEA,iCAAiC;IACjC,MAAM,0BAA0B,OAAO,QAAgB;QACrD,MAAM,YAAY;YAChB,WAAW,IAAI;YACf;YACA;QACF;QAEA,MAAM,mBAAmB;eAAI;YAAW;SAAU;QAClD,aAAa;QACb,wBAAwB;QAExB,kDAAkD;QAClD,IAAI;YACF,IAAI,CAAC,KAAK,EAAE,EAAE;YAEd,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS,KAAK,EAAE;YACxC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;gBACvB,WAAW;gBACX,QAAQ;gBACR,WAAW;YACb;YAEA,cAAc;QAChB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mCAAmC;QACnD;IACF;IAEA,eAAe;IACf,MAAM,cAAc;QAClB,+CAA+C;QAC/C,IAAI,UAAU,MAAM,GAAG,GAAG;YACxB,MAAM,mBAAmB;mBAAI;aAAU;YACvC,MAAM,YAAY,iBAAiB,MAAM,GAAG;YAC5C,gBAAgB,CAAC,UAAU,GAAG;gBAC5B,GAAG,gBAAgB,CAAC,UAAU;gBAC9B,YAAY,IAAI;YAClB;YAEA,aAAa;YAEb,sBAAsB;YACtB,IAAI;gBACF,IAAI,CAAC,KAAK,EAAE,EAAE;gBAEd,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS,KAAK,EAAE;gBACxC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;oBACvB,WAAW;oBACX,QAAQ;gBACV;gBAEA,cAAc;YAChB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,oCAAoC;YACpD;QACF;QAEA,oBAAoB;QACpB;IACF;IAEA,sBAAsB;IACtB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR;iDAAO;oBACL,IAAI,iBAAiB;wBACnB,cAAc;oBAChB;gBACF;;QACF;wCAAG;QAAC;KAAgB;IAEpB,qBACE;;0BACE,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;;oCACX,eAAe,cAAc,qBAAqB;oCAClD,KAAK,KAAK;;;;;;;0CAGb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAE,WAAU;;wCAAoC;sDACvC,6LAAC;4CAAK,WAAW,CAAC,cAAc,EACtC,eAAe,cAAc,mBAC7B,eAAe,gBAAgB,kBAC/B,eAAe,WAAW,oBAC1B,eAAe,cAAc,oBAAoB,iBACjD;sDACC,eAAe,cAAc,cAC7B,eAAe,gBAAgB,gBAC/B,eAAe,WAAW,WAC1B,eAAe,cAAc,cAAc;;;;;;;;;;;;;;;;;4BAKjD,eAAe,6BACd,6LAAC;gCAAE,WAAU;0CAAqB;;;;;;4BAKnC,eAAe,6BACd,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;kEACb,cAAA,6LAAC;4DAAI,OAAM;4DAA6B,WAAU;4DAA0B,MAAK;4DAAO,SAAQ;4DAAY,QAAO;sEACjH,cAAA,6LAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;;;;;;;;;;;kEAGzE,6LAAC;;0EACC,6LAAC;gEAAG,WAAU;0EAA4B;;;;;;0EAC1C,6LAAC;gEAAE,WAAU;0EAAwB;;;;;;;;;;;;;;;;;;0DAMzC,6LAAC;gDACC,SAAS;gDACT,WAAU;0DACX;;;;;;;;;;;;kDAKH,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;kEACb,cAAA,6LAAC;4DAAI,OAAM;4DAA6B,WAAU;4DAAwB,MAAK;4DAAO,SAAQ;4DAAY,QAAO;sEAC/G,cAAA,6LAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;;;;;;;;;;;kEAGzE,6LAAC;;0EACC,6LAAC;gEAAG,WAAU;0EAA4B;;;;;;0EAC1C,6LAAC;gEAAE,WAAU;0EAAwB;;;;;;;;;;;;;;;;;;0DAKzC,6LAAC;gDACC,SAAS;oDACP,gBAAgB;oDAChB;oDACA;gDACF;gDACA,UAAU,eAAe,eAAe,CAAC;gDACzC,WAAW,CAAC,iBAAiB,EAC3B,eAAe,eAAe,mBAC1B,iDACA,iCACL,8BAA8B,CAAC;0DACjC;;;;;;;;;;;;kDAKH,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;kEACb,cAAA,6LAAC;4DAAI,OAAM;4DAA6B,WAAU;4DAAyB,MAAK;4DAAO,SAAQ;4DAAY,QAAO;sEAChH,cAAA,6LAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;;;;;;;;;;;kEAGzE,6LAAC;;0EACC,6LAAC;gEAAG,WAAU;0EAA4B;;;;;;0EAC1C,6LAAC;gEAAE,WAAU;0EAAwB;;;;;;;;;;;;;;;;;;0DAKzC,6LAAC;gDACC,SAAS;gDACT,UAAU,eAAe,eAAe,CAAC;gDACzC,WAAW,CAAC,iBAAiB,EAC3B,eAAe,eAAe,mBAC1B,mDACA,kCACL,8BAA8B,CAAC;0DACjC;;;;;;;;;;;;;;;;;;4BAON,eAAe,6BACd,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,OAAM;gDAA6B,WAAU;gDAAyB,MAAK;gDAAO,SAAQ;gDAAY,QAAO;0DAChH,cAAA,6LAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;kDAI3E,6LAAC;wCAAG,WAAU;kDAA0C;;;;;;kDACxD,6LAAC;wCAAE,WAAU;kDAAiB;;;;;;;;;;;;0CAMlC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;YASR,mCACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAA6B;;;;;;sCAE3C,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,WAAU;8CAA+C;;;;;;8CAGhE,6LAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;oCAChD,WAAU;;;;;;;;;;;;sCAId,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,WAAU;8CAA+C;;;;;;8CAGhE,6LAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;oCAChD,WAAU;;;;;;;;;;;;sCAId,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,SAAS,IAAM,qBAAqB;oCACpC,WAAU;8CACX;;;;;;8CAGD,6LAAC;oCACC,SAAS;oCACT,UAAU,CAAC,iBAAiB,CAAC;oCAC7B,WAAW,CAAC,UAAU,EAAE,CAAC,iBAAiB,CAAC,gBAAgB,8BAA8B,6CAA6C,WAAW,CAAC;8CACnJ;;;;;;;;;;;;;;;;;;;;;;;YASR,uCACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAA6B;;;;;;sCAE3C,6LAAC;4BAAE,WAAU;sCAAqB;;;;;;sCAIlC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,SAAS,IAAM,mBAAmB;oCAClC,WAAU;8CACX;;;;;;8CAID,6LAAC;oCACC,SAAS,IAAM,mBAAmB;oCAClC,WAAU;8CACX;;;;;;;;;;;;sCAKH,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;YAQ1C,sCACC,6LAAC,sJAAA,CAAA,UAAgB;gBACf,UAAU;gBACV,UAAU;;;;;;YAKb,8BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAEb,cAAA,6LAAC;4BAAI,OAAM;4BAAK,QAAO;4BAAK,SAAQ;;8CAElC,6LAAC;oCAAO,IAAG;oCAAK,IAAG;oCAAK,GAAE;oCAAK,MAAK;oCAAQ,QAAO;oCAAU,aAAY;;;;;;gCAGxE;uCAAI,MAAM;iCAAI,CAAC,GAAG,CAAC,CAAC,GAAG,kBACtB,6LAAC;wCAEC,IAAG;wCACH,IAAG;wCACH,IAAG;wCACH,IAAG;wCACH,QAAO;wCACP,aAAY;wCACZ,WAAW,CAAC,OAAO,EAAE,IAAI,GAAG,OAAO,CAAC;uCAP/B;;;;;8CAYT,6LAAC;oCACC,IAAG;oCACH,IAAG;oCACH,IAAG;oCACH,IAAG;oCACH,QAAO;oCACP,aAAY;oCACZ,eAAc;oCACd,WAAW,CAAC,OAAO,EAAE,AAAC,YAAY,QAAS,IAAI,OAAO,CAAC;;;;;;8CAIzD,6LAAC;oCACC,IAAG;oCACH,IAAG;oCACH,IAAG;oCACH,IAAG;oCACH,QAAO;oCACP,aAAY;oCACZ,eAAc;oCACd,WAAW,CAAC,OAAO,EAAE,AAAC,YAAY,OAAQ,IAAI,OAAO,CAAC;;;;;;8CAIxD,6LAAC;oCACC,IAAG;oCACH,IAAG;oCACH,IAAG;oCACH,IAAG;oCACH,QAAO;oCACP,aAAY;oCACZ,eAAc;oCACd,WAAW,CAAC,OAAO,EAAE,AAAC,YAAY,KAAM,EAAE,OAAO,CAAC;;;;;;8CAIpD,6LAAC;oCAAO,IAAG;oCAAK,IAAG;oCAAK,GAAE;oCAAM,MAAK;;;;;;;;;;;;;;;;;kCAIzC,6LAAC;;0CACC,6LAAC;gCAAI,WAAU;0CAAqC,KAAK,KAAK;;;;;;0CAC9D,6LAAC;gCAAI,WAAU;;oCACZ,KAAK,KAAK,CAAC,YAAY;oCAAM;oCAAG,KAAK,KAAK,CAAC,AAAC,YAAY,OAAQ;oCAAI;oCAAG,YAAY;oCAAG;;;;;;;0CAIzF,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS,IAAM,aAAa,OAAO,EAAE;wCACrC,WAAW,CAAC,QAAQ,EAAE,cAAc,iDAAiD,oCAAoC;wCACzH,UAAU,CAAC;kDACZ;;;;;;kDAGD,6LAAC;wCACC,MAAK;wCACL,KAAK;wCACL,UAAU;wCACV,QAAO;wCACP,QAAQ;wCACR,WAAU;wCACV,UAAU,CAAC;;;;;;;;;;;;;;;;;;oBAMhB,eAAe,MAAM,GAAG,mBACvB,6LAAC;wBAAI,WAAU;kCACZ,eAAe,GAAG,CAAC,CAAC,KAAK,sBACxB,6LAAC;gCAAgB,WAAU;;kDACzB,6LAAC;wCACC,KAAK;wCACL,KAAK,CAAC,OAAO,EAAE,QAAQ,GAAG;wCAC1B,WAAU;;;;;;kDAEZ,6LAAC;wCACC,SAAS,IAAM,kBAAkB;wCACjC,WAAU;wCACV,OAAM;kDAEN,cAAA,6LAAC;4CAAI,OAAM;4CAA6B,WAAU;4CAAU,MAAK;4CAAO,SAAQ;4CAAY,QAAO;sDACjG,cAAA,6LAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;;+BAZjE;;;;;;;;;;oBAoBf,4BACC,6LAAC;wBACC,SAAS;wBACT,WAAU;wBACV,OAAM;kCAEN,cAAA,6LAAC;4BAAI,OAAM;4BAA6B,WAAU;4BAAU,MAAK;4BAAO,SAAQ;4BAAY,QAAO;sCACjG,cAAA,6LAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAa;gCAAG,GAAE;;;;;;;;;;;;;;;6CAIzE,6LAAC;wBACC,SAAS;wBACT,WAAU;wBACV,OAAM;kCAEN,cAAA,6LAAC;4BAAI,OAAM;4BAA6B,WAAU;4BAAU,MAAK;4BAAO,SAAQ;4BAAY,QAAO;;8CACjG,6LAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;8CACrE,6LAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;AAQrF;GAtpBM;KAAA;uCAwpBS","debugId":null}},
    {"offset": {"line": 4225, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/dashboard/CompletionAnimation.tsx"],"sourcesContent":["// app/components/dashboard/CompletionAnimation.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\n\ninterface CompletionAnimationProps {\n  mysteryReward: string | null;\n}\n\nconst CompletionAnimation: React.FC<CompletionAnimationProps> = ({ mysteryReward }) => {\n  const [animationStage, setAnimationStage] = useState(1);\n  \n  useEffect(() => {\n    // Progress through animation stages\n    const timer1 = setTimeout(() => setAnimationStage(2), 1000);\n    const timer2 = setTimeout(() => setAnimationStage(3), 2500);\n    \n    return () => {\n      clearTimeout(timer1);\n      clearTimeout(timer2);\n    };\n  }, []);\n  \n  // Seed color based on mystery reward\n  const getSeedColor = () => {\n    if (!mysteryReward) return \"#22c55e\"; // Regular green seed\n    \n    switch (mysteryReward) {\n      case 'silver': return \"linear-gradient(135deg, #f1f5f9, #94a3b8)\";\n      case 'gold': return \"linear-gradient(135deg, #fef3c7, #f59e0b)\";\n      case 'diamond': return \"linear-gradient(135deg, #e0f2fe, #0ea5e9)\";\n      case 'eternity': return \"linear-gradient(135deg, #fae8ff, #d946ef)\";\n      case 'mystery': return \"linear-gradient(135deg, #10b981, #6366f1, #ef4444)\";\n      default: return \"#22c55e\";\n    }\n  };\n  \n  return (\n    <div className=\"fixed inset-0 bg-black/80 flex items-center justify-center z-[100]\">\n      <div className=\"max-w-md w-full bg-white rounded-xl p-8 text-center relative overflow-hidden\">\n        {/* Flying seeds animation */}\n        {animationStage >= 1 && (\n          <div className=\"absolute inset-0 overflow-hidden\">\n            {[...Array(20)].map((_, i) => (\n              <div\n                key={i}\n                className=\"absolute animate-fly-seed\"\n                style={{\n                  left: `${Math.random() * 100}%`,\n                  top: `${Math.random() * 100}%`,\n                  animationDelay: `${Math.random() * 1}s`,\n                  animationDuration: `${1 + Math.random() * 3}s`,\n                  // Set random direction for each seed\n                  '--random-x': `${(Math.random() * 200 - 100)}px`,\n                  '--random-y': `${(Math.random() * 200 - 100)}px`\n                } as React.CSSProperties}\n              >\n                <div\n                  className=\"h-4 w-4 rounded-full\"\n                  style={{ background: getSeedColor() }}\n                ></div>\n              </div>\n            ))}\n          </div>\n        )}\n        \n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">\n          {animationStage < 3 ? \"Task Completed!\" : \"You've Earned a Seed!\"}\n        </h2>\n        \n        {animationStage >= 2 && (\n          <div className=\"mb-8 flex justify-center\">\n            <div \n              className=\"h-24 w-24 rounded-full animate-pulse-grow\"\n              style={{ background: getSeedColor() }}\n            ></div>\n          </div>\n        )}\n        \n        {animationStage >= 3 && (\n          <div className=\"space-y-4\">\n            <p className=\"text-gray-700\">\n              Congratulations on completing your task!\n            </p>\n            \n            {mysteryReward && (\n              <div className=\"bg-purple-50 p-4 rounded-lg\">\n                <p className=\"text-purple-800 font-medium\">\n                  WOW! You found a {mysteryReward.charAt(0).toUpperCase() + mysteryReward.slice(1)} Seed!\n                </p>\n                <p className=\"text-sm text-purple-700 mt-1\">\n                  These rare seeds will help your Greenhouse flourish and earn you special recognition!\n                </p>\n              </div>\n            )}\n            \n            <p className=\"text-sm text-gray-600\">\n              The more tasks you complete each week, the higher your chance to find a mystery seed!\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CompletionAnimation;"],"names":[],"mappings":"AAAA,mDAAmD;;;;;AAGnD;;;AAFA;;AAQA,MAAM,sBAA0D,CAAC,EAAE,aAAa,EAAE;;IAChF,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR,oCAAoC;YACpC,MAAM,SAAS;wDAAW,IAAM,kBAAkB;uDAAI;YACtD,MAAM,SAAS;wDAAW,IAAM,kBAAkB;uDAAI;YAEtD;iDAAO;oBACL,aAAa;oBACb,aAAa;gBACf;;QACF;wCAAG,EAAE;IAEL,qCAAqC;IACrC,MAAM,eAAe;QACnB,IAAI,CAAC,eAAe,OAAO,WAAW,qBAAqB;QAE3D,OAAQ;YACN,KAAK;gBAAU,OAAO;YACtB,KAAK;gBAAQ,OAAO;YACpB,KAAK;gBAAW,OAAO;YACvB,KAAK;gBAAY,OAAO;YACxB,KAAK;gBAAW,OAAO;YACvB;gBAAS,OAAO;QAClB;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;gBAEZ,kBAAkB,mBACjB,6LAAC;oBAAI,WAAU;8BACZ;2BAAI,MAAM;qBAAI,CAAC,GAAG,CAAC,CAAC,GAAG,kBACtB,6LAAC;4BAEC,WAAU;4BACV,OAAO;gCACL,MAAM,GAAG,KAAK,MAAM,KAAK,IAAI,CAAC,CAAC;gCAC/B,KAAK,GAAG,KAAK,MAAM,KAAK,IAAI,CAAC,CAAC;gCAC9B,gBAAgB,GAAG,KAAK,MAAM,KAAK,EAAE,CAAC,CAAC;gCACvC,mBAAmB,GAAG,IAAI,KAAK,MAAM,KAAK,EAAE,CAAC,CAAC;gCAC9C,qCAAqC;gCACrC,cAAc,GAAI,KAAK,MAAM,KAAK,MAAM,IAAK,EAAE,CAAC;gCAChD,cAAc,GAAI,KAAK,MAAM,KAAK,MAAM,IAAK,EAAE,CAAC;4BAClD;sCAEA,cAAA,6LAAC;gCACC,WAAU;gCACV,OAAO;oCAAE,YAAY;gCAAe;;;;;;2BAdjC;;;;;;;;;;8BAqBb,6LAAC;oBAAG,WAAU;8BACX,iBAAiB,IAAI,oBAAoB;;;;;;gBAG3C,kBAAkB,mBACjB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,WAAU;wBACV,OAAO;4BAAE,YAAY;wBAAe;;;;;;;;;;;gBAKzC,kBAAkB,mBACjB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAE,WAAU;sCAAgB;;;;;;wBAI5B,+BACC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;;wCAA8B;wCACvB,cAAc,MAAM,CAAC,GAAG,WAAW,KAAK,cAAc,KAAK,CAAC;wCAAG;;;;;;;8CAEnF,6LAAC;oCAAE,WAAU;8CAA+B;;;;;;;;;;;;sCAMhD,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;;;;;;;AAQjD;GA/FM;KAAA;uCAiGS","debugId":null}},
    {"offset": {"line": 4418, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/dashboard/TasksList.tsx"],"sourcesContent":["// app/components/dashboard/TasksList.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport TaskCard from './TaskCard';\nimport TaskCompletionModal from './TaskCompletionModal';\nimport { VolunteerTask } from '@/app/lib/firebase/firestore';\nimport { doc, updateDoc, arrayUnion, serverTimestamp, increment, collection, addDoc } from 'firebase/firestore';\nimport { db } from '@/app/lib/firebase/config';\nimport Link from 'next/link';\nimport CompletionAnimation from './CompletionAnimation';\n\ninterface TasksListProps {\n  tasks: VolunteerTask[];\n  userId: string;\n}\n\nconst TasksList: React.FC<TasksListProps> = ({ tasks, userId }) => {\n  const router = useRouter();\n  const [activeTab, setActiveTab] = useState('open');\n  const [selectedTask, setSelectedTask] = useState<VolunteerTask | null>(null);\n  const [showCompletionModal, setShowCompletionModal] = useState(false);\n  const [showCompletionAnimation, setShowCompletionAnimation] = useState(false);\n  const [scheduledTasks, setScheduledTasks] = useState<{\n    task: VolunteerTask;\n    scheduledTime: Date;\n  }[]>([]);\n  const [activeTaskId, setActiveTaskId] = useState<string | null>(null);\n  const [mysteryRewardReceived, setMysteryRewardReceived] = useState<string | null>(null);\n\n  // Group tasks by status\n  const openTasks = tasks.filter(task => \n    !task.completedBy?.includes(userId) && \n    (!task.status || task.status === 'open' || task.status === 'scheduled')\n  );\n  \n  const inProgressTasks = tasks.filter(task => \n    !task.completedBy?.includes(userId) && \n    (task.status === 'in-progress' || task.status === 'paused')\n  );\n  \n  const completedTasks = tasks.filter(task => \n    task.completedBy?.includes(userId) || \n    task.status === 'completed'\n  );\n\n  // Effect to update scheduled tasks\n  useEffect(() => {\n    // Find tasks with scheduled times\n    const scheduledTasksData = tasks\n      .filter(task => task.scheduledTime && !task.completedBy?.includes(userId))\n      .map(task => ({\n        task,\n        scheduledTime: task.scheduledTime.toDate ? task.scheduledTime.toDate() : new Date(task.scheduledTime)\n      }));\n    \n    setScheduledTasks(scheduledTasksData);\n  }, [tasks, userId]);\n\n  // Handle complete task action\n  const handleCompleteTask = async (task: VolunteerTask) => {\n    try {\n      if (!task || !task.id) {\n        console.error('Invalid task or missing task ID');\n        return;\n      }\n      \n      const taskRef = doc(db, 'tasks', task.id);\n      \n      // Create a basic update object without any undefined values\n      const updateData: Record<string, any> = {\n        completionDate: serverTimestamp(),\n        status: 'completed'\n      };\n      \n      // Only add completedBy if userId exists\n      if (userId) {\n        updateData.completedBy = arrayUnion(userId);\n      }\n      \n      // Update the task in Firestore\n      await updateDoc(taskRef, updateData);\n      \n      // Add a seed to the user\n      const userRef = doc(db, 'users', userId);\n      await updateDoc(userRef, {\n        seeds: increment(1),\n        completedTasks: increment(1)\n      });\n      \n      // Check for mystery seed\n      const mysteryReward = checkForMysteryReward();\n      if (mysteryReward) {\n        setMysteryRewardReceived(mysteryReward);\n        \n        // Add the mystery seed to user's collection\n        await updateDoc(userRef, {\n          [`mysterySeeds.${mysteryReward}`]: increment(1)\n        });\n        \n        // Add a public shoutout\n        await addDoc(collection(db, 'shoutouts'), {\n          userId: userId,\n          seedType: mysteryReward,\n          timestamp: serverTimestamp()\n        });\n      }\n      \n      // Show completion animation\n      setShowCompletionAnimation(true);\n      \n      // After animation finishes, close it\n      setTimeout(() => {\n        setShowCompletionAnimation(false);\n        setMysteryRewardReceived(null);\n      }, 5000);\n      \n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n  \n  // Check for mystery seed based on probabilities\n  const checkForMysteryReward = (): string | null => {\n    const random = Math.random() * 100; // Percentage\n    \n    if (random <= 0.001) return 'mystery'; // 0.001% chance for X mystery seed\n    if (random <= 0.01) return 'eternity'; // 0.01% chance for Eternity seed\n    if (random <= 0.1) return 'diamond'; // 0.1% chance for Diamond seed\n    if (random <= 5) return 'gold'; // 5% chance for Gold seed\n    if (random <= 10) return 'silver'; // 10% chance for Silver seed\n    \n    return null; // No mystery seed\n  };\n\n  const handleTaskCardClick = (task: VolunteerTask) => {\n    // Only allow interaction if no task is active or if this is the active task\n    if (!activeTaskId || activeTaskId === task.id) {\n      setSelectedTask(task);\n      setShowCompletionModal(true);\n    }\n  };\n\n  const closeCompletionModal = () => {\n    setShowCompletionModal(false);\n    setSelectedTask(null);\n  };\n  \n  const handleTaskStart = (taskId: string) => {\n    setActiveTaskId(taskId);\n  };\n  \n  const handleTaskPause = () => {\n    setActiveTaskId(null);\n  };\n\n  // Get current time to check for scheduled tasks that should start\n  const now = new Date();\n  const tasksStartingSoon = scheduledTasks.filter(\n    scheduled => {\n      const timeDiff = scheduled.scheduledTime.getTime() - now.getTime();\n      return timeDiff <= 15 * 60 * 1000 && timeDiff > 0; // 15 minutes or less\n    }\n  );\n\n  // Determine which tasks to display based on active tab\n  const displayedTasks = \n    activeTab === 'open' ? openTasks :\n    activeTab === 'in-progress' ? inProgressTasks :\n    completedTasks;\n\n  // Create custom task function\n  const handleCreateCustomTask = () => {\n    router.push('/tasks/create');\n  };\n\n  return (\n    <div>\n      {/* Weekly Reward Banner */}\n      <div className=\"bg-gradient-to-r from-green-50 to-blue-50 rounded-lg p-4 mb-6 shadow-sm border border-green-100\">\n        <h3 className=\"text-lg font-medium text-green-800 mb-2\">Weekly Reward: Complete all tasks to earn 5 seeds!</h3>\n        <div className=\"flex items-center\">\n          <div className=\"h-3 flex-grow bg-gray-200 rounded-full overflow-hidden\">\n            <div \n              className=\"h-full bg-green-500 rounded-full\" \n              style={{ width: `${(completedTasks.length / tasks.length) * 100}%` }}\n            ></div>\n          </div>\n          <span className=\"ml-3 text-sm font-medium text-gray-700\">\n            {completedTasks.length}/{tasks.length} tasks\n          </span>\n        </div>\n        \n        {/* Active Timer (if any) */}\n        {activeTaskId && (\n          <div className=\"mt-4 bg-white p-3 rounded-md shadow-sm border border-green-200 flex items-center\">\n            <div className=\"mr-3\">\n              <svg width=\"32\" height=\"32\" viewBox=\"0 0 48 48\" className=\"animate-pulse\">\n                <circle cx=\"24\" cy=\"24\" r=\"22\" fill=\"white\" stroke=\"#10B981\" strokeWidth=\"2\" />\n                <circle cx=\"24\" cy=\"24\" r=\"1.5\" fill=\"#065F46\" />\n              </svg>\n            </div>\n            <div className=\"flex-grow\">\n              <p className=\"text-sm font-medium text-gray-700\">\n                {tasks.find(t => t.id === activeTaskId)?.title} in progress\n              </p>\n              <p className=\"text-xs text-gray-500\">\n                Started at {new Date().toLocaleTimeString()}\n              </p>\n            </div>\n            <button className=\"p-1 bg-green-100 rounded-full text-green-600\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Task Actions Bar */}\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"flex\">\n          <button\n            onClick={() => setActiveTab('open')}\n            className={`px-4 py-2 text-sm font-medium ${\n              activeTab === 'open'\n                ? 'text-green-700 border-b-2 border-green-500'\n                : 'text-gray-500 hover:text-gray-700'\n            }`}\n          >\n            Open Tasks\n          </button>\n          <button\n            onClick={() => setActiveTab('in-progress')}\n            className={`px-4 py-2 text-sm font-medium ${\n              activeTab === 'in-progress'\n                ? 'text-blue-700 border-b-2 border-blue-500'\n                : 'text-gray-500 hover:text-gray-700'\n            }`}\n          >\n            In-Progress Tasks\n          </button>\n          <button\n            onClick={() => setActiveTab('completed')}\n            className={`px-4 py-2 text-sm font-medium ${\n              activeTab === 'completed'\n                ? 'text-gray-700 border-b-2 border-gray-500'\n                : 'text-gray-500 hover:text-gray-700'\n            }`}\n          >\n            Completed Tasks\n          </button>\n        </div>\n        \n        <button\n          onClick={handleCreateCustomTask}\n          className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md text-sm font-medium flex items-center\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n          </svg>\n          Add Custom Task\n        </button>\n      </div>\n\n      {/* Scheduled Task Reminders */}\n      {tasksStartingSoon.length > 0 && (\n        <div className=\"fixed top-4 right-4 z-50\">\n          {tasksStartingSoon.map((scheduled, index) => (\n            <div key={index} className=\"bg-white rounded-lg shadow-lg p-3 mb-2 flex items-center\">\n              <div className=\"bg-green-100 rounded-full p-2 mr-3\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div>\n                <p className=\"text-sm font-medium\">{scheduled.task.title}</p>\n                <p className=\"text-xs text-gray-500\">\n                  {`Starts in ${Math.ceil((scheduled.scheduledTime.getTime() - now.getTime()) / 60000)} minutes`}\n                </p>\n              </div>\n              <button className=\"ml-3 text-gray-500 hover:text-gray-700\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Tasks Display */}\n      {displayedTasks.length === 0 ? (\n        <div className=\"bg-gray-50 rounded-lg p-6 text-center\">\n          <p className=\"text-gray-600\">\n            {activeTab === 'open' \n              ? \"You don't have any open tasks.\" \n              : activeTab === 'in-progress' \n                ? \"You don't have any tasks in progress.\" \n                : \"You haven't completed any tasks yet.\"}\n          </p>\n          <p className=\"text-gray-500 text-sm mt-2\">\n            {activeTab === 'open' \n              ? \"Check back soon or create a custom task.\" \n              : activeTab === 'in-progress' \n                ? \"Start a task to track your progress.\" \n                : \"Complete tasks to earn seeds and rewards.\"}\n          </p>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {displayedTasks.map((task) => (\n            <TaskCard\n              key={task.id}\n              task={task}\n              isCompleted={task.completedBy?.includes(userId) || task.status === 'completed'}\n              onComplete={() => handleTaskCardClick(task)}\n              userId={userId}\n              isDisabled={activeTaskId !== null && activeTaskId !== task.id}\n              onTaskStart={() => handleTaskStart(task.id!)}\n              onTaskPause={handleTaskPause}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Task Completion Modal */}\n      {showCompletionModal && selectedTask && (\n        <TaskCompletionModal\n          task={selectedTask}\n          userId={userId}\n          onClose={closeCompletionModal}\n          onComplete={() => handleCompleteTask(selectedTask)}\n          onTaskStart={handleTaskStart}\n          onTaskPause={handleTaskPause}\n        />\n      )}\n\n      {/* Completion Animation */}\n      {showCompletionAnimation && (\n        <CompletionAnimation \n          mysteryReward={mysteryRewardReceived}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TasksList;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5003, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/dashboard/ProgressStats.tsx"],"sourcesContent":["// app/components/dashboard/ProgressStats.tsx\n'use client';\n\nimport { UserLevel } from '@/app/lib/firebase/auth';\n\ninterface ProgressStatsProps {\n  total: number;\n  completed: number;\n  level: UserLevel;\n}\n\nconst ProgressStats: React.FC<ProgressStatsProps> = ({ total, completed, level }) => {\n  // Calculate percentage completed\n  const percentage = total > 0 ? Math.round((completed / total) * 100) : 0;\n  \n  // Get level-specific text and colors\n  const getLevelInfo = (level: UserLevel) => {\n    switch (level) {\n      case 'Sprout':\n        return {\n          title: 'Growing Your Impact',\n          description: 'Complete your assigned tasks to earn seeds and make a difference!',\n          color: 'bg-green-400'\n        };\n      case 'Bud':\n        return {\n          title: 'Expanding Your Reach',\n          description: 'Connect with others locally and choose tasks that interest you.',\n          color: 'bg-green-600'\n        };\n      case 'Bloom':\n        return {\n          title: 'Leading the Way',\n          description: 'Create opportunities and mentor others in your community.',\n          color: 'bg-green-800'\n        };\n      default:\n        return {\n          title: 'Tracking Progress',\n          description: 'Complete tasks to earn seeds and make a difference.',\n          color: 'bg-green-500'\n        };\n    }\n  };\n  \n  const levelInfo = getLevelInfo(level);\n  \n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-2\">\n        <div>\n          <h3 className=\"font-semibold text-lg\">{levelInfo.title}</h3>\n          <p className=\"text-gray-600 text-sm\">{levelInfo.description}</p>\n        </div>\n        <div className=\"text-right\">\n          <p className=\"text-xl font-bold\">{completed} / {total}</p>\n          <p className=\"text-sm text-gray-600\">Tasks Completed</p>\n        </div>\n      </div>\n      \n      <div className=\"h-4 bg-gray-200 rounded-full mt-4\">\n        <div \n          className={`h-full rounded-full ${levelInfo.color}`}\n          style={{ width: `${percentage}%` }}\n        ></div>\n      </div>\n      \n      <div className=\"flex justify-between mt-2 text-sm text-gray-600\">\n        <p>{percentage}% Complete</p>\n        {percentage === 100 ? (\n          <p className=\"text-green-600 font-medium\">All tasks completed this week!</p>\n        ) : (\n          <p>{total - completed} task{total - completed !== 1 ? 's' : ''} remaining</p>\n        )}\n      </div>\n      \n      {/* Weekly reward info */}\n      <div className=\"mt-4 bg-green-50 p-3 rounded-md border border-green-100\">\n        <div className=\"flex items-center text-sm\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-green-600 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n          </svg>\n          <p className=\"text-green-800\">\n            <span className=\"font-medium\">Weekly Reward:</span> Complete all tasks to earn 5 seeds!\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressStats;\n"],"names":[],"mappings":"AAAA,6CAA6C;;;;;AAC7C;;AAUA,MAAM,gBAA8C,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE;IAC9E,iCAAiC;IACjC,MAAM,aAAa,QAAQ,IAAI,KAAK,KAAK,CAAC,AAAC,YAAY,QAAS,OAAO;IAEvE,qCAAqC;IACrC,MAAM,eAAe,CAAC;QACpB,OAAQ;YACN,KAAK;gBACH,OAAO;oBACL,OAAO;oBACP,aAAa;oBACb,OAAO;gBACT;YACF,KAAK;gBACH,OAAO;oBACL,OAAO;oBACP,aAAa;oBACb,OAAO;gBACT;YACF,KAAK;gBACH,OAAO;oBACL,OAAO;oBACP,aAAa;oBACb,OAAO;gBACT;YACF;gBACE,OAAO;oBACL,OAAO;oBACP,aAAa;oBACb,OAAO;gBACT;QACJ;IACF;IAEA,MAAM,YAAY,aAAa;IAE/B,qBACE,6LAAC;;0BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAAyB,UAAU,KAAK;;;;;;0CACtD,6LAAC;gCAAE,WAAU;0CAAyB,UAAU,WAAW;;;;;;;;;;;;kCAE7D,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;;oCAAqB;oCAAU;oCAAI;;;;;;;0CAChD,6LAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;;;;;;;0BAIzC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,WAAW,CAAC,oBAAoB,EAAE,UAAU,KAAK,EAAE;oBACnD,OAAO;wBAAE,OAAO,GAAG,WAAW,CAAC,CAAC;oBAAC;;;;;;;;;;;0BAIrC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;4BAAG;4BAAW;;;;;;;oBACd,eAAe,oBACd,6LAAC;wBAAE,WAAU;kCAA6B;;;;;6CAE1C,6LAAC;;4BAAG,QAAQ;4BAAU;4BAAM,QAAQ,cAAc,IAAI,MAAM;4BAAG;;;;;;;;;;;;;0BAKnE,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,OAAM;4BAA6B,WAAU;4BAA8B,MAAK;4BAAO,SAAQ;4BAAY,QAAO;sCACrH,cAAA,6LAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAa;gCAAG,GAAE;;;;;;;;;;;sCAEvE,6LAAC;4BAAE,WAAU;;8CACX,6LAAC;oCAAK,WAAU;8CAAc;;;;;;gCAAqB;;;;;;;;;;;;;;;;;;;;;;;;AAM/D;KA9EM;uCAgFS","debugId":null}},
    {"offset": {"line": 5237, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/dashboard/SeedCounter.tsx"],"sourcesContent":["// app/components/dashboard/SeedCounter.tsx\n'use client';\nimport { useRouter } from 'next/navigation';\nimport { useState } from 'react';\n\n\ninterface SeedCounterProps {\n  seeds: number;\n}\n\nconst SeedCounter: React.FC<SeedCounterProps> = ({ seeds }) => {\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div className=\"bg-green-50 border border-green-100 rounded-full px-4 py-2 flex items-center\">\n        <img\n          src=\"/images/seed-icon.png\"\n          alt=\"Seeds\"\n          className=\"w-5 h-5 mr-2\"\n        />\n        <span className=\"font-bold text-green-800\">{seeds}</span>\n        <button\n          type=\"submit\"\n          onClick={() => router.push('/store')}\n        >\n          <div className=\"bg-green-200 hover:bg-green-300 border border-green-300 hover:cursor-pointer rounded-full ml-4 px-4 py-2 flex items-center\">\n            <span className=\"font-bold text-green-800\">Buy Seeds</span>\n          </div>\n        </button>\n\n      </div>\n      <p className=\"text-xs text-gray-500 mt-1\">Total Seeds</p>\n    </div>\n  );\n};\n\nexport default SeedCounter;\n"],"names":[],"mappings":"AAAA,2CAA2C;;;;;AAE3C;AACA;;;AAFA;;;AASA,MAAM,cAA0C,CAAC,EAAE,KAAK,EAAE;;IACxD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,KAAI;wBACJ,KAAI;wBACJ,WAAU;;;;;;kCAEZ,6LAAC;wBAAK,WAAU;kCAA4B;;;;;;kCAC5C,6LAAC;wBACC,MAAK;wBACL,SAAS,IAAM,OAAO,IAAI,CAAC;kCAE3B,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAK,WAAU;0CAA2B;;;;;;;;;;;;;;;;;;;;;;0BAKjD,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;;;;;;;AAGhD;GAzBM;;QACW,qIAAA,CAAA,YAAS;;;KADpB;uCA2BS","debugId":null}},
    {"offset": {"line": 5338, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/map/OpportunityMarker.tsx"],"sourcesContent":["// app/components/map/OpportunityMarker.tsx\n'use client';\n\nimport { Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport { VolunteerTask } from '@/app/lib/firebase/firestore';\n\ninterface OpportunityMarkerProps {\n  task: VolunteerTask;\n  position: [number, number]; // [latitude, longitude]\n}\n\nconst OpportunityMarker: React.FC<OpportunityMarkerProps> = ({ task, position }) => {\n  // Create category-specific icons\n  const getCategoryIcon = (category: string) => {\n    let color;\n    switch (category) {\n      case 'communityService':\n        color = 'purple';\n        break;\n      case 'environmentalAction':\n        color = 'green';\n        break;\n      case 'educationYouthSupport':\n        color = 'yellow';\n        break;\n      case 'healthWellness':\n        color = 'blue';\n        break;\n      default:\n        color = 'gray';\n    }\n    \n    return new Icon({\n      iconUrl: `/images/markers/${color}-marker.png`,\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34]\n    });\n  };\n  \n  // Format category for display\n  const formatCategory = (category: string) => {\n    switch (category) {\n      case 'communityService':\n        return 'Community Service';\n      case 'environmentalAction':\n        return 'Environmental Action';\n      case 'educationYouthSupport':\n        return 'Education & Youth';\n      case 'healthWellness':\n        return 'Health & Wellness';\n      default:\n        return category;\n    }\n  };\n  \n  return (\n    <Marker \n      position={position} \n      icon={getCategoryIcon(task.category)}\n    >\n      <Popup>\n        <div className=\"max-w-sm\">\n          <h3 className=\"font-semibold text-md\">{task.title}</h3>\n          <p className=\"text-sm text-gray-600 mt-1\">{task.description}</p>\n          \n          <div className=\"mt-2 flex flex-wrap gap-1\">\n            <span className={`text-xs px-2 py-1 rounded-full \n              ${task.category === 'communityService' ? 'bg-purple-100 text-purple-800' : \n                task.category === 'environmentalAction' ? 'bg-green-100 text-green-800' : \n                task.category === 'educationYouthSupport' ? 'bg-yellow-100 text-yellow-800' : \n                'bg-blue-100 text-blue-800'}`}\n            >\n              {formatCategory(task.category)}\n            </span>\n            \n            <span className=\"text-xs px-2 py-1 bg-gray-100 text-gray-800 rounded-full\">\n              {task.estimatedTime} min\n            </span>\n            \n            <span className=\"text-xs px-2 py-1 bg-gray-100 text-gray-800 rounded-full\">\n              {task.locationType === 'remote' ? 'Do from home' : \n                task.locationType === 'inPerson' ? 'In-person' : 'Virtual meeting'}\n            </span>\n          </div>\n          \n          <div className=\"mt-3 pt-2 border-t border-gray-200\">\n            <button className=\"w-full text-sm py-1 bg-green-600 hover:bg-green-700 text-white rounded-md\">\n              View Details\n            </button>\n          </div>\n        </div>\n      </Popup>\n    </Marker>\n  );\n};\n\nexport default OpportunityMarker;\n"],"names":[],"mappings":"AAAA,2CAA2C;;;;;AAG3C;AAAA;AACA;AAHA;;;;AAWA,MAAM,oBAAsD,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;IAC7E,iCAAiC;IACjC,MAAM,kBAAkB,CAAC;QACvB,IAAI;QACJ,OAAQ;YACN,KAAK;gBACH,QAAQ;gBACR;YACF,KAAK;gBACH,QAAQ;gBACR;YACF,KAAK;gBACH,QAAQ;gBACR;YACF,KAAK;gBACH,QAAQ;gBACR;YACF;gBACE,QAAQ;QACZ;QAEA,OAAO,IAAI,oJAAA,CAAA,OAAI,CAAC;YACd,SAAS,CAAC,gBAAgB,EAAE,MAAM,WAAW,CAAC;YAC9C,UAAU;gBAAC;gBAAI;aAAG;YAClB,YAAY;gBAAC;gBAAI;aAAG;YACpB,aAAa;gBAAC;gBAAG,CAAC;aAAG;QACvB;IACF;IAEA,8BAA8B;IAC9B,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,6LAAC,oJAAA,CAAA,SAAM;QACL,UAAU;QACV,MAAM,gBAAgB,KAAK,QAAQ;kBAEnC,cAAA,6LAAC,mJAAA,CAAA,QAAK;sBACJ,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAyB,KAAK,KAAK;;;;;;kCACjD,6LAAC;wBAAE,WAAU;kCAA8B,KAAK,WAAW;;;;;;kCAE3D,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAK,WAAW,CAAC;cAChB,EAAE,KAAK,QAAQ,KAAK,qBAAqB,kCACvC,KAAK,QAAQ,KAAK,wBAAwB,gCAC1C,KAAK,QAAQ,KAAK,0BAA0B,kCAC5C,6BAA6B;0CAE9B,eAAe,KAAK,QAAQ;;;;;;0CAG/B,6LAAC;gCAAK,WAAU;;oCACb,KAAK,aAAa;oCAAC;;;;;;;0CAGtB,6LAAC;gCAAK,WAAU;0CACb,KAAK,YAAY,KAAK,WAAW,iBAChC,KAAK,YAAY,KAAK,aAAa,cAAc;;;;;;;;;;;;kCAIvD,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAO,WAAU;sCAA4E;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ1G;KApFM;uCAsFS","debugId":null}},
    {"offset": {"line": 5506, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/map/Greenhouse.tsx"],"sourcesContent":["// app/components/map/Greenhouse.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport { db } from '@/app/lib/firebase/config';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { UserProfile } from '@/app/lib/firebase/auth';\nimport { useRouter } from 'next/navigation';\n\ninterface GreenhouseProps {\n  position: [number, number]; // [latitude, longitude]\n  userId: string;\n}\n\nconst Greenhouse: React.FC<GreenhouseProps> = ({ position, userId }) => {\n  const router = useRouter();\n  const [userData, setUserData] = useState<UserProfile | null>(null);\n  const [loading, setLoading] = useState(true);\n  \n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const userDoc = await getDoc(doc(db, 'users', userId));\n        if (userDoc.exists()) {\n          setUserData(userDoc.data() as UserProfile);\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchUserData();\n  }, [userId]);\n  \n  // Create greenhouse icon\n  const greenhouseIcon = new Icon({\n    iconUrl: '/images/greenhouse.png',\n    iconSize: [40, 40],\n    iconAnchor: [20, 40],\n    popupAnchor: [0, -40]\n  });\n  \n  // Calculate tree count based on seeds\n  const getTreeCount = (seeds: number) => {\n    // Every 10 seeds = 1 tree\n    return Math.floor(seeds / 10);\n  };\n  \n  // Handle button click to navigate to greenhouse page\n  const handleViewGreenhouse = () => {\n    router.push('/greenhouse');\n  };\n  \n  if (loading) {\n    return null;\n  }\n  \n  return (\n    <Marker \n      position={position} \n      icon={greenhouseIcon}\n    >\n      <Popup>\n        <div className=\"max-w-sm\">\n          <h3 className=\"font-semibold text-md\">{userData?.displayName}'s Greenhouse</h3>\n          \n          <div className=\"mt-2 bg-green-50 p-3 rounded-md border border-green-100\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <p className=\"text-sm text-gray-700\">\n                  <span className=\"font-medium text-green-800\">{userData?.seeds || 0}</span> seeds collected\n                </p>\n                {userData && userData.seeds >= 10 && (\n                  <p className=\"text-sm text-gray-700\">\n                    <span className=\"font-medium text-green-800\">{getTreeCount(userData.seeds)}</span> trees planted\n                  </p>\n                )}\n              </div>\n              <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\n                <img \n                  src=\"/images/seed-icon.png\" \n                  alt=\"Seeds\" \n                  className=\"w-6 h-6\"\n                />\n              </div>\n            </div>\n          </div>\n          \n          {userData && userData.seeds < 10 && (\n            <p className=\"text-xs text-gray-500 mt-2\">\n              Collect 10 seeds to plant your first virtual tree!\n            </p>\n          )}\n          \n          <div className=\"mt-3\">\n            <button \n              onClick={handleViewGreenhouse}\n              className=\"w-full text-sm py-1 bg-green-600 hover:bg-green-700 text-white rounded-md\"\n            >\n              View Greenhouse\n            </button>\n          </div>\n        </div>\n      </Popup>\n    </Marker>\n  );\n};\n\nexport default Greenhouse;"],"names":[],"mappings":"AAAA,oCAAoC;;;;;AAGpC;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;;;AARA;;;;;;;AAeA,MAAM,aAAwC,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE;;IACjE,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IAC7D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,MAAM;sDAAgB;oBACpB,IAAI;wBACF,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,mIAAA,CAAA,KAAE,EAAE,SAAS;wBAC9C,IAAI,QAAQ,MAAM,IAAI;4BACpB,YAAY,QAAQ,IAAI;wBAC1B;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,6BAA6B;oBAC7C,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;+BAAG;QAAC;KAAO;IAEX,yBAAyB;IACzB,MAAM,iBAAiB,IAAI,oJAAA,CAAA,OAAI,CAAC;QAC9B,SAAS;QACT,UAAU;YAAC;YAAI;SAAG;QAClB,YAAY;YAAC;YAAI;SAAG;QACpB,aAAa;YAAC;YAAG,CAAC;SAAG;IACvB;IAEA,sCAAsC;IACtC,MAAM,eAAe,CAAC;QACpB,0BAA0B;QAC1B,OAAO,KAAK,KAAK,CAAC,QAAQ;IAC5B;IAEA,qDAAqD;IACrD,MAAM,uBAAuB;QAC3B,OAAO,IAAI,CAAC;IACd;IAEA,IAAI,SAAS;QACX,OAAO;IACT;IAEA,qBACE,6LAAC,oJAAA,CAAA,SAAM;QACL,UAAU;QACV,MAAM;kBAEN,cAAA,6LAAC,mJAAA,CAAA,QAAK;sBACJ,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;;4BAAyB,UAAU;4BAAY;;;;;;;kCAE7D,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAE,WAAU;;8DACX,6LAAC;oDAAK,WAAU;8DAA8B,UAAU,SAAS;;;;;;gDAAS;;;;;;;wCAE3E,YAAY,SAAS,KAAK,IAAI,oBAC7B,6LAAC;4CAAE,WAAU;;8DACX,6LAAC;oDAAK,WAAU;8DAA8B,aAAa,SAAS,KAAK;;;;;;gDAAS;;;;;;;;;;;;;8CAIxF,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCACC,KAAI;wCACJ,KAAI;wCACJ,WAAU;;;;;;;;;;;;;;;;;;;;;;oBAMjB,YAAY,SAAS,KAAK,GAAG,oBAC5B,6LAAC;wBAAE,WAAU;kCAA6B;;;;;;kCAK5C,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;GA9FM;;QACW,qIAAA,CAAA,YAAS;;;KADpB;uCAgGS","debugId":null}},
    {"offset": {"line": 5735, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/map/VolunteerMap.tsx"],"sourcesContent":["// app/components/map/VolunteerMap.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Icon } from 'leaflet';\nimport { getNearbyOpportunities, VolunteerTask } from '@/app/lib/firebase/firestore';\nimport { UserLevel } from '@/app/lib/firebase/auth';\nimport OpportunityMarker from './OpportunityMarker';\nimport Greenhouse from './Greenhouse';\nimport dynamic from 'next/dynamic';\n\nconst DynamicMap = dynamic(\n  () => import('./VolunteerMap'),\n  {\n    ssr: false,\n    loading: () => (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-green-500\"></div>\n      </div>\n    )\n  }\n);\n\n// Workaround for Leaflet marker icons in Next.js\n// This needs to be done because Next.js server-side rendering doesn't include the Leaflet CSS\n// Define icons here to avoid issues with server/client rendering\nconst defaultIcon = new Icon({\n  iconUrl: '/images/marker-icon.png',\n  shadowUrl: '/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Set the default icon for all markers\n// @ts-ignore\ndelete Icon.Default.prototype._getIconUrl;\nIcon.Default.mergeOptions({\n  iconRetinaUrl: '/images/marker-icon-2x.png',\n  iconUrl: '/images/marker-icon.png',\n  shadowUrl: '/images/marker-shadow.png',\n});\n\n// Map center update component\nconst MapCenterUpdater = ({ location }: { location: { latitude: number; longitude: number } }) => {\n  const map = useMap();\n\n  useEffect(() => {\n    if (location) {\n      map.setView([location.latitude, location.longitude], 12);\n    }\n  }, [location, map]);\n\n  return null;\n};\n\ninterface VolunteerMapProps {\n  userLocation?: {\n    latitude: number;\n    longitude: number;\n  };\n  userLevel: UserLevel;\n  userId: string;\n}\n\nconst VolunteerMap: React.FC<VolunteerMapProps> = ({ userLocation, userLevel, userId }) => {\n  const [opportunities, setOpportunities] = useState<VolunteerTask[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Default location (New York City) if user location is not available\n  const defaultLocation = { latitude: 40.7128, longitude: -74.0060 };\n  const location = userLocation && userLocation.latitude !== 0\n    ? userLocation\n    : defaultLocation;\n\n  useEffect(() => {\n    const fetchOpportunities = async () => {\n      if (!userLocation || userLocation.latitude === 0) {\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const nearbyOpps = await getNearbyOpportunities(\n          userLocation.latitude,\n          userLocation.longitude,\n          10, // 10km radius\n          userLevel\n        );\n\n        setOpportunities(nearbyOpps);\n      } catch (err: any) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchOpportunities();\n  }, [userLocation, userLevel]);\n\n  // Prompt user to share location if not already set\n  const requestLocationPermission = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          // Here you would normally update the user's location in the database\n          // For demo purposes, we'll just log it\n          console.log('Location updated:', {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          });\n        },\n        (err) => {\n          setError('Unable to retrieve your location. ' + err.message);\n        }\n      );\n    } else {\n      setError('Geolocation is not supported by your browser.');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-green-500\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-full w-full map-container relative\">\n      {error && (\n        <div className=\"absolute top-2 left-2 right-2 z-10 bg-red-100 text-red-700 p-2 rounded-md text-sm\">\n          {error}\n        </div>\n      )}\n\n      <MapContainer\n        center={[location.latitude, location.longitude]}\n        zoom={12}\n        style={{ height: '100%', width: '100%', borderRadius: '0.5rem' }}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {/* Update map center when location changes */}\n        <MapCenterUpdater location={location} />\n\n        {/* User's Greenhouse */}\n        <Greenhouse\n          position={[location.latitude, location.longitude]}\n          userId={userId}\n        />\n\n        {/* Opportunity Markers */}\n        {/* Opportunity Markers */}\n        {opportunities.map((opportunity) => (\n          opportunity.location?.coordinates?.latitude && opportunity.location?.coordinates?.longitude ? (\n            <OpportunityMarker\n              key={opportunity.id}\n              task={opportunity}\n              position={[opportunity.location.coordinates.latitude, opportunity.location.coordinates.longitude]}\n            />\n          ) : null\n        ))}\n\n        {/* Message if no opportunities found */}\n        {opportunities.length === 0 && !loading && (\n          <div className=\"absolute bottom-4 left-4 right-4 bg-white p-3 rounded-md shadow-md z-10\">\n            <p className=\"text-sm text-gray-700\">\n              No volunteer opportunities found nearby. Try expanding your search area or check back later.\n            </p>\n            {(!userLocation || userLocation.latitude === 0) && (\n              <button\n                onClick={requestLocationPermission}\n                className=\"mt-2 text-sm text-green-600 font-medium hover:text-green-800\"\n              >\n                Share your location to see nearby opportunities\n              </button>\n            )}\n          </div>\n        )}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default VolunteerMap;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6024, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/auth/LocationPermission.tsx"],"sourcesContent":["// app/components/auth/LocationPermission.tsx\n'use client';\n\nimport { useState } from 'react';\nimport { UserLevel } from '@/app/lib/firebase/auth';\nimport { requestLocationPermission } from '@/app/lib/location/locationService';\nimport { collection, doc, getDoc, updateDoc, getDocs, query, where, orderBy, serverTimestamp, arrayUnion, writeBatch, addDoc, limit } from 'firebase/firestore';\n\ninterface LocationPermissionProps {\n  userLevel: UserLevel;\n  userId: string;\n  onLocationUpdated: (location?: { latitude: number; longitude: number }) => void;\n}\n\nconst LocationPermission: React.FC<LocationPermissionProps> = ({\n  userLevel,\n  userId,\n  onLocationUpdated\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [permissionGranted, setPermissionGranted] = useState(false);\n\n  // Only ask for location if user is Bud or Bloom level\n  const shouldRequestLocation = userLevel === 'Bud' || userLevel === 'Bloom';\n  \n  const handleRequestLocation = async () => {\n    if (!shouldRequestLocation) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const result = await requestLocationPermission(userId);\n      \n      if (result.success) {\n        setPermissionGranted(true);\n        onLocationUpdated(result.location);\n      } else {\n        setError(result.error || 'Failed to get location');\n      }\n    } catch (err: any) {\n      setError(err.message || 'An unexpected error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleSkip = () => {\n    // Skip location permission, but still inform parent component\n    onLocationUpdated();\n  };\n  \n  if (!shouldRequestLocation) {\n    return null;\n  }\n  \n  if (permissionGranted) {\n    return (\n      <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm font-medium text-green-800\">\n              Location permission granted! We'll use this to find volunteer opportunities near you.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"p-6 bg-white border rounded-lg shadow-sm\">\n      <h3 className=\"text-lg font-semibold mb-2\">Enable Location Services</h3>\n      \n      <p className=\"text-gray-600 mb-4\">\n        {userLevel === 'Bud'\n          ? 'As a Bud level volunteer, enabling location allows you to see volunteering opportunities near you and connect with local volunteers.'\n          : 'As a Bloom level volunteer, enabling location allows you to create and find local opportunities and mentor others in your area.'}\n      </p>\n      \n      {error && (\n        <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded-md text-sm\">\n          {error}\n        </div>\n      )}\n      \n      <div className=\"flex flex-col sm:flex-row gap-3 mt-4\">\n        <button\n          onClick={handleRequestLocation}\n          disabled={loading}\n          className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-medium rounded-md flex items-center justify-center\"\n        >\n          {loading ? (\n            <>\n              <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-white mr-2\"></div>\n              Getting Location...\n            </>\n          ) : (\n            <>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n              Enable Location\n            </>\n          )}\n        </button>\n        \n        <button\n          onClick={handleSkip}\n          disabled={loading}\n          className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-800 font-medium rounded-md\"\n        >\n          Skip for Now\n        </button>\n      </div>\n      \n      <p className=\"text-xs text-gray-500 mt-3\">\n        Your location will only be used to find volunteer opportunities near you. You can update your location permissions at any time in your profile settings.\n      </p>\n    </div>\n  );\n};\n\nexport default LocationPermission;"],"names":[],"mappings":"AAAA,6CAA6C;;;;;AAG7C;AAEA;;;AAJA;;;AAaA,MAAM,qBAAwD,CAAC,EAC7D,SAAS,EACT,MAAM,EACN,iBAAiB,EAClB;;IACC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3D,sDAAsD;IACtD,MAAM,wBAAwB,cAAc,SAAS,cAAc;IAEnE,MAAM,wBAAwB;QAC5B,IAAI,CAAC,uBAAuB;QAE5B,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,SAAS,MAAM,CAAA,GAAA,4IAAA,CAAA,4BAAyB,AAAD,EAAE;YAE/C,IAAI,OAAO,OAAO,EAAE;gBAClB,qBAAqB;gBACrB,kBAAkB,OAAO,QAAQ;YACnC,OAAO;gBACL,SAAS,OAAO,KAAK,IAAI;YAC3B;QACF,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO,IAAI;QAC1B,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,aAAa;QACjB,8DAA8D;QAC9D;IACF;IAEA,IAAI,CAAC,uBAAuB;QAC1B,OAAO;IACT;IAEA,IAAI,mBAAmB;QACrB,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,OAAM;4BAA6B,WAAU;4BAAyB,MAAK;4BAAO,SAAQ;4BAAY,QAAO;sCAChH,cAAA,6LAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAa;gCAAG,GAAE;;;;;;;;;;;;;;;;kCAGzE,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAE,WAAU;sCAAqC;;;;;;;;;;;;;;;;;;;;;;IAO5D;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAE3C,6LAAC;gBAAE,WAAU;0BACV,cAAc,QACX,yIACA;;;;;;YAGL,uBACC,6LAAC;gBAAI,WAAU;0BACZ;;;;;;0BAIL,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,SAAS;wBACT,UAAU;wBACV,WAAU;kCAET,wBACC;;8CACE,6LAAC;oCAAI,WAAU;;;;;;gCAAkF;;yDAInG;;8CACE,6LAAC;oCAAI,OAAM;oCAA6B,WAAU;oCAAe,MAAK;oCAAO,SAAQ;oCAAY,QAAO;;sDACtG,6LAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;sDACrE,6LAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;gCACjE;;;;;;;;kCAMZ,6LAAC;wBACC,SAAS;wBACT,UAAU;wBACV,WAAU;kCACX;;;;;;;;;;;;0BAKH,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;;;;;;;AAKhD;GAlHM;KAAA;uCAoHS","debugId":null}},
    {"offset": {"line": 6262, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/dashboard/Dashboard.tsx"],"sourcesContent":["// app/components/dashboard/Dashboard.tsx\n'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { auth } from '@/app/lib/firebase/config';\nimport { getUserProfile, UserProfile } from '@/app/lib/firebase/auth';\nimport { getUserTasks, VolunteerTask } from '@/app/lib/firebase/firestore';\nimport { assignWeeklyTasks } from '@/app/lib/firebase/tasksService';\nimport { requestLocationPermission } from '@/app/lib/location/locationService';\nimport TasksList from './TasksList';\nimport ProgressStats from './ProgressStats';\nimport SeedCounter from './SeedCounter';\nimport VolunteerMap from '../map/VolunteerMap';\nimport LocationPermission from '../auth/LocationPermission';\nimport { getStorage, ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { doc, updateDoc } from 'firebase/firestore';\nimport { db } from '@/app/lib/firebase/config';\n\n// Upload image to Firebase Storage\nconst uploadImageToStorage = async (file, userId) => {\n  try {\n    // Create a storage reference\n    const storage = getStorage();\n    const storageRef = ref(storage, `profileImages/${userId}`);\n    \n    // Upload the file\n    const snapshot = await uploadBytes(storageRef, file);\n    console.log('Image uploaded successfully');\n    \n    // Get the download URL\n    const downloadURL = await getDownloadURL(snapshot.ref);\n    \n    // Update the user's profile with the new image URL\n    await updateUserProfile(userId, { photoURL: downloadURL });\n    \n    return downloadURL;\n  } catch (error) {\n    console.error('Error uploading image:', error);\n    throw error;\n  }\n};\n\n// Update user profile in Firestore\nconst updateUserProfile = async (userId, updateData) => {\n  try {\n    const userRef = doc(db, 'users', userId);\n    await updateDoc(userRef, updateData);\n    console.log('User profile updated successfully');\n  } catch (error) {\n    console.error('Error updating user profile:', error);\n    throw error;\n  }\n};\n\n// Remove profile image\nconst removeProfileImage = async (userId) => {\n  try {\n    // First, delete the image from Storage\n    const storage = getStorage();\n    const storageRef = ref(storage, `profileImages/${userId}`);\n    \n    try {\n      await deleteObject(storageRef);\n      console.log('Profile image deleted from storage');\n    } catch (storageError) {\n      // The file might not exist, which is fine\n      console.log('No existing profile image to delete or error:', storageError);\n    }\n    \n    // Then update the user profile to remove the photoURL\n    await updateUserProfile(userId, { photoURL: null });\n    \n    return true;\n  } catch (error) {\n    console.error('Error removing profile image:', error);\n    throw error;\n  }\n};\n\nconst Dashboard = () => {\n  const router = useRouter();\n  const [user, setUser] = useState<any>(null);\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [tasks, setTasks] = useState<VolunteerTask[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [locationPromptShown, setLocationPromptShown] = useState(false);\n  const [assigningTasks, setAssigningTasks] = useState(false);\n  \n  // Profile image state\n  const [profileImage, setProfileImage] = useState<string | null>(null);\n  const [isHovering, setIsHovering] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadError, setUploadError] = useState<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    // Check if user is authenticated\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        setUser(user);\n        try {\n          // Get user profile\n          const userProfile = await getUserProfile(user.uid);\n          if (userProfile) {\n            setProfile(userProfile);\n            setProfileImage(userProfile.photoURL || null);\n            \n            // Get user's tasks\n            const userTasks = await getUserTasks(user.uid);\n            setTasks(userTasks);\n            \n            // Check if we need to request location\n            if (\n              !locationPromptShown && \n              (userProfile.level === 'Bud' || userProfile.level === 'Bloom') &&\n              (!userProfile.location || userProfile.location.latitude === 0)\n            ) {\n              setLocationPromptShown(true);\n            }\n          } else {\n            // Profile not found, redirect to onboarding\n            router.push('/auth/onboarding');\n          }\n        } catch (err: any) {\n          setError(err.message);\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        // Not authenticated, redirect to login\n        router.push('/auth/sign-in');\n      }\n    });\n\n    return () => unsubscribe();\n  }, [router]);\n\n  // Handle profile image upload\n  const handleImageUpload = async (event) => {\n    const file = event.target.files?.[0];\n    if (file && user) {\n      setIsUploading(true);\n      setUploadError(null);\n      \n      try {\n        // Show preview immediately for better UX\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          setProfileImage(e.target?.result as string);\n        };\n        reader.readAsDataURL(file);\n        \n        // Upload to Firebase\n        const downloadURL = await uploadImageToStorage(file, user.uid);\n        \n        // Update local profile state\n        if (profile) {\n          setProfile({\n            ...profile,\n            photoURL: downloadURL\n          });\n        }\n      } catch (error: any) {\n        console.error('Error in upload process:', error);\n        setUploadError('Failed to upload image. Please try again.');\n        // Revert to previous state\n        setProfileImage(profile?.photoURL || null);\n      } finally {\n        setIsUploading(false);\n      }\n    }\n  };\n\n  // Handle profile image removal\n  const handleRemoveImage = async () => {\n    if (!user) return;\n    \n    setIsUploading(true);\n    setUploadError(null);\n    \n    try {\n      await removeProfileImage(user.uid);\n      setProfileImage(null);\n      \n      // Update local profile state\n      if (profile) {\n        setProfile({\n          ...profile,\n          photoURL: null\n        });\n      }\n    } catch (error: any) {\n      console.error('Error removing image:', error);\n      setUploadError('Failed to remove image. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Trigger file input click\n  const triggerFileInput = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // Handle location update\n  const handleLocationUpdated = (location?: { latitude: number; longitude: number }) => {\n    if (profile && location) {\n      setProfile({\n        ...profile,\n        location\n      });\n    }\n  };\n\n  // Assign weekly tasks if user doesn't have any\n  const handleAssignTasks = async () => {\n    if (!user || !profile) return;\n    \n    try {\n      setAssigningTasks(true);\n      const assignedTasks = await assignWeeklyTasks(user.uid);\n      setTasks(assignedTasks);\n    } catch (err: any) {\n      setError(`Failed to assign tasks: ${err.message}`);\n    } finally {\n      setAssigningTasks(false);\n    }\n  };\n\n  useEffect(() => {\n    // Auto-assign tasks if user has none\n    if (user && profile && tasks.length === 0 && !loading && !assigningTasks) {\n      handleAssignTasks();\n    }\n  }, [user, profile, tasks, loading]);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"p-4 bg-red-100 text-red-700 rounded-md\">\n          <p>Error: {error}</p>\n          <button\n            onClick={() => router.push('/auth/sign-in')}\n            className=\"mt-4 px-4 py-2 bg-red-600 text-white rounded-md\"\n          >\n            Return to Sign In\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <div className=\"container mx-auto p-4 max-w-6xl\">\n      {/* Location Permission Prompt */}\n      {locationPromptShown && (\n        <div className=\"mb-8\">\n          <LocationPermission \n            userLevel={profile.level} \n            userId={user.uid}\n            onLocationUpdated={handleLocationUpdated}\n          />\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n        {/* Profile Summary Card */}\n        <div className=\"bg-white rounded-lg shadow-md p-6 flex flex-col items-center justify-center md:col-span-1\">\n          <div className=\"mb-4 relative\">\n            <div \n              className=\"relative\"\n              onMouseEnter={() => setIsHovering(true)}\n              onMouseLeave={() => setIsHovering(false)}\n            >\n              {profileImage ? (\n                <img \n                  src={profileImage} \n                  alt={profile.displayName} \n                  className=\"w-24 h-24 rounded-full object-cover\"\n                />\n              ) : (\n                <div className={`w-24 h-24 rounded-full flex items-center justify-center text-3xl font-bold text-white ${\n                  profile.level === 'Sprout' ? 'bg-green-400' :\n                  profile.level === 'Bud' ? 'bg-green-600' : 'bg-green-800'\n                }`}>\n                  {profile.displayName.charAt(0)}\n                </div>\n              )}\n              \n              {/* Hover overlay */}\n              {isHovering && !isUploading && (\n                <div \n                  className=\"absolute inset-0 bg-black bg-opacity-50 rounded-full flex flex-col items-center justify-center cursor-pointer\"\n                  onClick={triggerFileInput}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-white mb-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\" />\n                  </svg>\n                </div>\n              )}\n              \n              {/* Loading overlay */}\n              {isUploading && (\n                <div className=\"absolute inset-0 bg-black bg-opacity-50 rounded-full flex items-center justify-center\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-white\"></div>\n                </div>\n              )}\n              \n              {/* Hidden file input */}\n              <input \n                type=\"file\" \n                ref={fileInputRef} \n                onChange={handleImageUpload}\n                accept=\"image/*\"\n                className=\"hidden\"\n              />\n              \n              {/* Remove photo button - show only when there's a profile image */}\n              {profileImage && !isUploading && (\n                <button \n                  onClick={handleRemoveImage}\n                  className=\"absolute -bottom-2 -left-2 bg-red-500 text-white rounded-full p-1 shadow-md hover:bg-red-600 hover:cursor-pointer\"\n                  title=\"Remove photo\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              )}\n            </div>\n\n            {/* Level badge */}\n            <div className=\"absolute bottom-0 right-0 bg-white rounded-full p-1 shadow-md\">\n              <img \n                src={`/images/${profile.level.toLowerCase()}-badge.png`} \n                alt={`${profile.level} Badge`} \n                className=\"w-8 h-8\"\n              />\n            </div>\n          </div>\n          \n          {/* Error message */}\n          {uploadError && (\n            <div className=\"text-red-500 text-xs mt-1 mb-2 text-center\">\n              {uploadError}\n            </div>\n          )}\n          \n          <h2 className=\"text-xl font-bold mb-1\">{profile.displayName}</h2>\n          <p className=\"text-gray-600 mb-4\">{profile.level} Level</p>\n          <SeedCounter seeds={profile.seeds} />\n        </div>\n\n        {/* Progress Stats */}\n        <div className=\"bg-white rounded-lg shadow-md p-6 md:col-span-2\">\n          <h2 className=\"text-xl font-bold mb-4\">Your Progress</h2>\n          <ProgressStats \n            total={tasks.length} \n            completed={tasks.filter(task => task.completedBy?.includes(user.uid)).length} \n            level={profile.level}\n          />\n        </div>\n      </div>\n\n      {/* Weekly Tasks Section */}\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-bold\">Your Weekly Volunteering Tasks</h2>\n          \n          {tasks.length === 0 && !assigningTasks && (\n            <button\n              onClick={handleAssignTasks}\n              className=\"px-4 py-2 bg-green-600 hover:bg-green-700 hover:cursor-pointer text-white text-sm font-medium rounded-md\"\n            >\n              Get New Tasks\n            </button>\n          )}\n        </div>\n        \n        {assigningTasks ? (\n          <div className=\"p-8 flex flex-col items-center justify-center\">\n            <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-green-500 mb-4\"></div>\n            <p className=\"text-gray-600\">Finding the perfect volunteering opportunities for you...</p>\n          </div>\n        ) : (\n          <TasksList tasks={tasks} userId={user.uid} />\n        )}\n      </div>\n\n      {/* Map Section (only for Bud and Bloom levels) */}\n      {profile.level !== 'Sprout' && (\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <h2 className=\"text-xl font-bold mb-4\">Volunteering Opportunities Near You</h2>\n          {profile.location && profile.location.latitude !== 0 ? (\n            <div className=\"h-96\">\n              <VolunteerMap \n                userLocation={profile.location} \n                userLevel={profile.level}\n                userId={user.uid}\n              />\n            </div>\n          ) : (\n            <div className=\"bg-gray-50 rounded-lg p-6 text-center\">\n              <p className=\"text-gray-600 mb-2\">Enable location services to see volunteering opportunities near you.</p>\n              <button\n                onClick={() => setLocationPromptShown(true)}\n                className=\"px-4 py-2 bg-green-600 hover:bg-green-700 hover:cursor-pointer text-white text-sm font-medium rounded-md\"\n              >\n                Enable Location\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6957, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/dashboard/page.tsx"],"sourcesContent":["// app/dashboard/page.tsx\n'use client';\n\nimport Dashboard from '@/app/components/dashboard/Dashboard';\n\nexport default function DashboardPage() {\n  return <Dashboard />;\n}\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;AAGzB;AAFA;;;AAIe,SAAS;IACtB,qBAAO,6LAAC,+IAAA,CAAA,UAAS;;;;;AACnB;KAFwB","debugId":null}}]
}