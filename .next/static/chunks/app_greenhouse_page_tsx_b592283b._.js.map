{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/greenhouse/page.tsx"],"sourcesContent":["// app/greenhouse/page.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { auth, db } from '@/app/lib/firebase/config';\nimport { getUserProfile, UserProfile } from '@/app/lib/firebase/auth';\nimport {\n  doc,\n  getDoc,\n  updateDoc,\n  serverTimestamp\n} from 'firebase/firestore';\n\ninterface PlantOrItem {\n  id: string;\n  name: string;\n  image: string;\n  description: string;\n  seedCost: number;\n  type: 'plant' | 'accessory' | 'special';\n  placement?: {\n    room: string;\n    position: {\n      x: number;\n      y: number;\n    };\n  };\n}\n\ninterface PlacedItem {\n  id: string;\n  itemId: string;\n  position: { x: number; y: number };\n  type: 'plant' | 'accessory' | 'special';\n}\n\nconst Greenhouse = () => {\n  const router = useRouter();\n  const [user, setUser] = useState<any>(null);\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [inventory, setInventory] = useState<PlantOrItem[]>([]);\n  const [placedItems, setPlacedItems] = useState<PlacedItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedItem, setSelectedItem] = useState<PlantOrItem | null>(null);\n  const [showItemDetails, setShowItemDetails] = useState(false);\n  const [isPlacingMode, setIsPlacingMode] = useState(false);\n  const [selectedInventoryItem, setSelectedInventoryItem] = useState<PlantOrItem | null>(null);\n  const [activeTab, setActiveTab] = useState<'garden' | 'inventory'>('garden');\n\n  // All available items from store\n  const allStoreItems: PlantOrItem[] = [\n    // Plants\n    {\n      id: 'plant1',\n      name: 'Sunflower',\n      image: '/images/plants/sunflower.png',\n      description: 'A tall, cheerful flower that follows the sun. Sunflowers represent adoration, loyalty, and longevity.',\n      seedCost: 5,\n      type: 'plant'\n    },\n    {\n      id: 'plant2',\n      name: 'Oak Tree',\n      image: '/images/plants/oak.png',\n      description: 'A strong, majestic tree that can live for hundreds of years. Oak trees symbolize strength, endurance, and wisdom.',\n      seedCost: 50,\n      type: 'plant'\n    },\n    {\n      id: 'plant3',\n      name: 'Rose Bush',\n      image: '/images/plants/rose.png',\n      description: 'Beautiful flowers with thorny stems. Roses are traditional symbols of love and passion.',\n      seedCost: 25,\n      type: 'plant'\n    },\n    {\n      id: 'plant4',\n      name: 'Cactus',\n      image: '/images/plants/cactus.png',\n      description: 'A hardy desert plant that requires little water. Cacti represent endurance and protection.',\n      seedCost: 15,\n      type: 'plant'\n    },\n    {\n      id: 'plant5',\n      name: 'Bonsai Tree',\n      image: '/images/plants/bonsai.png',\n      description: 'A miniature tree grown in a small container. Bonsai trees symbolize harmony, balance, and patience.',\n      seedCost: 100,\n      type: 'plant'\n    },\n    {\n      id: 'plant6',\n      name: 'Lavender Bush',\n      image: '/images/plants/lavender.png',\n      description: 'A calming purple plant known for its soothing aroma and beautiful blooms.',\n      seedCost: 20,\n      type: 'plant'\n    },\n    {\n      id: 'plant7',\n      name: 'Apple Tree',\n      image: '/images/plants/apple-tree.png',\n      description: 'A fruit-bearing tree that produces delicious apples. A symbol of abundance and nourishment.',\n      seedCost: 75,\n      type: 'plant'\n    },\n    {\n      id: 'plant8',\n      name: 'Hanging Fern',\n      image: '/images/plants/hanging-fern.png',\n      description: 'A lush green fern perfect for adding vertical interest to your greenhouse.',\n      seedCost: 15,\n      type: 'plant'\n    },\n    // Accessories\n    {\n      id: 'accessory1',\n      name: 'Watering Can',\n      image: '/images/accessories/watering-can.png',\n      description: 'A decorative watering can for your virtual greenhouse.',\n      seedCost: 20,\n      type: 'accessory'\n    },\n    {\n      id: 'accessory2',\n      name: 'Garden Bench',\n      image: '/images/accessories/bench.png',\n      description: 'A peaceful place to sit and admire your plants.',\n      seedCost: 30,\n      type: 'accessory'\n    },\n    {\n      id: 'accessory3',\n      name: 'Bird Bath',\n      image: '/images/accessories/bird-bath.png',\n      description: 'Attract virtual birds to your greenhouse.',\n      seedCost: 35,\n      type: 'accessory'\n    },\n    {\n      id: 'accessory4',\n      name: 'Compost Bin',\n      image: '/images/accessories/compost.png',\n      description: 'A natural way to recycle plant waste and boost your greenhouse\\'s eco-friendly feel.',\n      seedCost: 25,\n      type: 'accessory'\n    },\n    {\n      id: 'accessory5',\n      name: 'Plant Shelf',\n      image: '/images/accessories/plant-shelf.png',\n      description: 'An attractive wooden shelf perfect for organizing and displaying your smaller plants.',\n      seedCost: 35,\n      type: 'accessory'\n    },\n    // Special Items\n    {\n      id: 'special1',\n      name: 'Rare Orchid',\n      image: '/images/plants/rare-orchid.png',\n      description: 'An ultra-rare flower with stunning blooms. A true collector\\'s item for your greenhouse.',\n      seedCost: 150,\n      type: 'special'\n    },\n    {\n      id: 'special2',\n      name: 'Bee Box',\n      image: '/images/accessories/bee-box.png',\n      description: 'Houses virtual bees that help pollinate nearby plants, enhancing their appearance.',\n      seedCost: 40,\n      type: 'special'\n    },\n    {\n      id: 'special3',\n      name: 'Holiday Lights',\n      image: '/images/accessories/holiday-lights.png',\n      description: 'Festive lights to brighten your greenhouse during special seasonal events.',\n      seedCost: 20,\n      type: 'special'\n    }\n  ];\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        setUser(user);\n        try {\n          // Get user profile\n          const userProfile = await getUserProfile(user.uid);\n          if (userProfile) {\n            setProfile(userProfile);\n            await fetchUserItems(user.uid);\n          } else {\n            router.push('/auth/onboarding');\n          }\n        } catch (err: any) {\n          console.error('Error loading greenhouse:', err);\n          if (err.code === 'permission-denied') {\n            setError('Permission denied. Please make sure you are signed in and try again.');\n          } else {\n            setError('Failed to load your greenhouse: ' + err.message);\n          }\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        router.push('/auth/sign-in');\n      }\n    });\n\n    return () => unsubscribe();\n  }, [router]);\n\n  // Fetch user's purchased items and their placements\n  const fetchUserItems = async (userId: string) => {\n    try {\n      setError('');\n\n      // Get user's document\n      const userDoc = await getDoc(doc(db, 'users', userId));\n\n      if (!userDoc.exists()) {\n        throw new Error('User profile not found');\n      }\n\n      const userData = userDoc.data() as UserProfile & {\n        ownedItems?: {\n          plants?: string[];\n          accessories?: string[];\n          specials?: string[];\n        };\n        greenhouseLayout?: PlacedItem[];\n      };\n\n      // Get owned items from user profile\n      const ownedItems = userData.ownedItems || {\n        plants: [],\n        accessories: [],\n        specials: []\n      };\n\n      // Create inventory from owned items\n      const userInventory = allStoreItems.filter(item => {\n        if (item.type === 'plant') return ownedItems.plants?.includes(item.id);\n        if (item.type === 'accessory') return ownedItems.accessories?.includes(item.id);\n        if (item.type === 'special') return ownedItems.specials?.includes(item.id);\n        return false;\n      });\n\n      setInventory(userInventory);\n\n      // Load placed items from user's greenhouse layout\n      setPlacedItems(userData.greenhouseLayout || []);\n\n    } catch (err: any) {\n      console.error('Error fetching user items:', err);\n      if (err.code === 'permission-denied') {\n        setError('Permission denied. Please make sure you are signed in.');\n      } else {\n        setError('Failed to load your greenhouse inventory: ' + err.message);\n      }\n    }\n  };\n\n  const handlePlaceItem = (inventoryItem: PlantOrItem) => {\n    setSelectedInventoryItem(inventoryItem);\n    setIsPlacingMode(true);\n    setActiveTab('garden'); // Switch to garden view\n  };\n\n  const handleGridClick = async (x: number, y: number) => {\n    if (!isPlacingMode || !selectedInventoryItem || !user) return;\n\n    // Check if position is already occupied\n    const isOccupied = placedItems.some(item => item.position.x === x && item.position.y === y);\n    if (isOccupied) {\n      setError('This position is already occupied');\n      return;\n    }\n\n    try {\n      setError('');\n\n      const newPlacedItem: PlacedItem = {\n        id: `placed_${Date.now()}`,\n        itemId: selectedInventoryItem.id,\n        position: { x, y },\n        type: selectedInventoryItem.type\n      };\n\n      const updatedPlacedItems = [...placedItems, newPlacedItem];\n\n      // Update local state first for immediate feedback\n      setPlacedItems(updatedPlacedItems);\n\n      // Update in Firestore\n      await updateDoc(doc(db, 'users', user.uid), {\n        greenhouseLayout: updatedPlacedItems,\n        updatedAt: serverTimestamp()\n      });\n\n      // Reset placing mode\n      setIsPlacingMode(false);\n      setSelectedInventoryItem(null);\n    } catch (err: any) {\n      console.error('Error placing item:', err);\n      // Revert local state on error\n      setPlacedItems(placedItems);\n\n      if (err.code === 'permission-denied') {\n        setError('Permission denied. Please make sure you are signed in and try again.');\n      } else {\n        setError('Failed to place item: ' + err.message);\n      }\n    }\n  };\n\n  const handleRemoveItem = async (placedItemId: string) => {\n    if (!user) return;\n\n    try {\n      setError('');\n\n      const updatedPlacedItems = placedItems.filter(item => item.id !== placedItemId);\n\n      // Update local state first for immediate feedback\n      setPlacedItems(updatedPlacedItems);\n\n      // Update in Firestore\n      await updateDoc(doc(db, 'users', user.uid), {\n        greenhouseLayout: updatedPlacedItems,\n        updatedAt: serverTimestamp()\n      });\n    } catch (err: any) {\n      console.error('Error removing item:', err);\n      // Revert local state on error\n      setPlacedItems(placedItems);\n\n      if (err.code === 'permission-denied') {\n        setError('Permission denied. Please make sure you are signed in and try again.');\n      } else {\n        setError('Failed to remove item: ' + err.message);\n      }\n    }\n  };\n\n  const getItemById = (itemId: string) => {\n    return allStoreItems.find(item => item.id === itemId);\n  };\n\n  const getPlacedItemAtPosition = (x: number, y: number) => {\n    return placedItems.find(item => item.position.x === x && item.position.y === y);\n  };\n\n  const renderGreenhouseGrid = () => {\n    const gridSize = 8; // 8x8 grid\n    const grid = [];\n\n    for (let y = 0; y < gridSize; y++) {\n      for (let x = 0; x < gridSize; x++) {\n        const placedItem = getPlacedItemAtPosition(x, y);\n        const item = placedItem ? getItemById(placedItem.itemId) : null;\n\n        grid.push(\n          <div\n            key={`${x}-${y}`}\n            className={`\n            w-16 h-16 border border-gray-200 flex items-center justify-center cursor-pointer\n            transition-colors duration-200 relative group\n            ${isPlacingMode && !placedItem ? 'hover:bg-green-100 border-green-300' : ''}\n            ${placedItem ? 'bg-green-50 hover:bg-green-100' : 'bg-gray-50 hover:bg-gray-100'}\n          `}\n            onClick={() => {\n              if (isPlacingMode && !placedItem) {\n                handleGridClick(x, y);\n              }\n            }}\n          >\n            {item && (\n              <>\n                <img\n                  src={item.image}\n                  alt={item.name}\n                  className=\"w-12 h-12 object-contain\"\n                />\n                {/* Remove/Unplace button - shows on hover */}\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleRemoveItem(placedItem.id);\n                  }}\n                  className=\"absolute -top-1 -right-1 w-6 h-6 bg-red-500 hover:bg-red-600 text-white rounded-full text-xs opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center\"\n                  title={`Unplace ${item.name}`}\n                >\n                  ×\n                </button>\n              </>\n            )}\n            {isPlacingMode && !placedItem && (\n              <div className=\"text-gray-400 text-xs\">+</div>\n            )}\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className=\"grid grid-cols-8 gap-1 bg-green-100 p-4 rounded-lg border-2 border-green-200\">\n        {grid}\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"></div>\n      </div>\n    );\n  }\n\n  if (error && !profile) {\n    return (\n      <div className=\"container mx-auto p-4 max-w-4xl\">\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-6 text-center\">\n          <div className=\"text-red-600 mb-4\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 mx-auto mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-semibold text-red-800 mb-2\">Unable to Load Greenhouse</h3>\n          <p className=\"text-red-700 mb-4\">{error}</p>\n          <div className=\"space-x-4\">\n            <button\n              onClick={() => window.location.reload()}\n              className=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-md\"\n            >\n              Try Again\n            </button>\n            <button\n              onClick={() => auth.signOut()}\n              className=\"px-4 py-2 border border-red-600 text-red-600 hover:bg-red-50 rounded-md\"\n            >\n              Sign Out & Sign In Again\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!profile) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"p-4 bg-red-100 text-red-700 rounded-md\">\n          Error loading your greenhouse. Please try again later.\n        </div>\n      </div>\n    );\n  }\n\n  // Categorize inventory items\n  const plants = inventory.filter(item => item.type === 'plant');\n  const accessories = inventory.filter(item => item.type === 'accessory');\n  const specialItems = inventory.filter(item => item.type === 'special');\n\n  return (\n    <div className=\"container mx-auto p-4 max-w-6xl\">\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-green-800\">Your Greenhouse</h2>\n            <p className=\"text-gray-600\">Arrange your plants and accessories in your virtual greenhouse</p>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center\">\n              <img\n                src=\"/images/seed-icon.png\"\n                alt=\"Seeds\"\n                className=\"w-6 h-6 mr-2\"\n              />\n              <span className=\"font-bold text-green-800\">{profile.seeds}</span>\n            </div>\n            <button\n              onClick={() => router.push('/store')}\n              className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md text-sm\"\n            >\n              Visit Store\n            </button>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\n            {error}\n            <button\n              onClick={() => setError('')}\n              className=\"ml-2 text-red-800 hover:text-red-900\"\n            >\n              ×\n            </button>\n          </div>\n        )}\n\n        {/* Inventory summary */}\n        <div className=\"grid grid-cols-3 gap-4 mb-6\">\n          <div className=\"bg-green-50 p-4 rounded-lg\">\n            <h3 className=\"font-medium mb-2\">Plants</h3>\n            <div className=\"flex items-center\">\n              <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mr-2\">\n                <span className=\"text-green-600 font-bold\">🌱</span>\n              </div>\n              <span className=\"text-lg font-bold\">{plants.length}</span>\n            </div>\n          </div>\n\n          <div className=\"bg-yellow-50 p-4 rounded-lg\">\n            <h3 className=\"font-medium mb-2\">Accessories</h3>\n            <div className=\"flex items-center\">\n              <div className=\"w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center mr-2\">\n                <span className=\"text-yellow-600 font-bold\">🛠️</span>\n              </div>\n              <span className=\"text-lg font-bold\">{accessories.length}</span>\n            </div>\n          </div>\n\n          <div className=\"bg-purple-50 p-4 rounded-lg\">\n            <h3 className=\"font-medium mb-2\">Special Items</h3>\n            <div className=\"flex items-center\">\n              <div className=\"w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center mr-2\">\n                <span className=\"text-purple-600 font-bold\">✨</span>\n              </div>\n              <span className=\"text-lg font-bold\">{specialItems.length}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"flex mb-6 border-b\">\n          <button\n            onClick={() => setActiveTab('garden')}\n            className={`px-4 py-2 text-sm font-medium ${activeTab === 'garden'\n              ? 'text-green-700 border-b-2 border-green-500'\n              : 'text-gray-500 hover:text-gray-700'\n              }`}\n          >\n            My Garden\n          </button>\n          <button\n            onClick={() => setActiveTab('inventory')}\n            className={`px-4 py-2 text-sm font-medium ${activeTab === 'inventory'\n              ? 'text-green-700 border-b-2 border-green-500'\n              : 'text-gray-500 hover:text-gray-700'\n              }`}\n          >\n            Inventory ({inventory.length})\n          </button>\n        </div>\n\n        {activeTab === 'garden' && (\n          <div>\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold\">Virtual Garden</h3>\n              {isPlacingMode ? (\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-sm text-blue-600\">\n                    Click on an empty spot to place {selectedInventoryItem?.name}\n                  </span>\n                  <button\n                    onClick={() => {\n                      setIsPlacingMode(false);\n                      setSelectedInventoryItem(null);\n                    }}\n                    className=\"px-3 py-1 bg-gray-500 hover:bg-gray-600 text-white rounded-md text-sm\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              ) : (\n                <span className=\"text-sm text-gray-600\">\n                  {placedItems.length} items placed\n                </span>\n              )}\n            </div>\n\n            <div className=\"flex justify-center mb-6\">\n              {renderGreenhouseGrid()}\n            </div>\n\n            {placedItems.length === 0 && (\n              <div className=\"text-center py-8 text-gray-500\">\n                <p>Your greenhouse is empty. Visit the inventory tab to place items!</p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'inventory' && (\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Your Inventory</h3>\n\n            {inventory.length === 0 ? (\n              <div className=\"text-center py-8 text-gray-500\">\n                <p>Your inventory is empty.</p>\n                <button\n                  onClick={() => router.push('/store')}\n                  className=\"mt-4 px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md\"\n                >\n                  Visit Store to Buy Items\n                </button>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                {/* Plants */}\n                <div>\n                  <h4 className=\"font-medium mb-3 flex items-center\">\n                    <span className=\"w-5 h-5 bg-green-100 rounded-full mr-2\"></span>\n                    Plants ({plants.length})\n                  </h4>\n\n                  {plants.length === 0 ? (\n                    <div className=\"bg-gray-50 p-4 rounded text-center text-gray-500\">\n                      No plants yet\n                    </div>\n                  ) : (\n                    <div className=\"space-y-2\">\n                      {plants.map((plant) => {\n                        const isPlaced = placedItems.some(placed => placed.itemId === plant.id);\n\n                        return (\n                          <div\n                            key={plant.id}\n                            className=\"border rounded-lg p-3 hover:shadow-md transition-shadow\"\n                          >\n                            <div className=\"flex items-center space-x-3\">\n                              <div className=\"w-12 h-12 bg-green-50 rounded-full flex items-center justify-center\">\n                                <img\n                                  src={plant.image}\n                                  alt={plant.name}\n                                  className=\"w-8 h-8 object-contain\"\n                                />\n                              </div>\n                              <div className=\"flex-1\">\n                                <h5 className=\"text-sm font-medium\">{plant.name}</h5>\n                                <p className=\"text-xs text-gray-500\">{plant.seedCost} seeds</p>\n                              </div>\n                              <div>\n                                {isPlaced ? (\n                                  <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">\n                                    Placed\n                                  </span>\n                                ) : (\n                                  <button\n                                    onClick={() => handlePlaceItem(plant)}\n                                    className=\"text-xs bg-blue-100 hover:bg-blue-200 text-blue-800 px-3 py-1 rounded-full\"\n                                  >\n                                    Place\n                                  </button>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  )}\n                </div>\n\n                {/* Accessories */}\n                <div>\n                  <h4 className=\"font-medium mb-3 flex items-center\">\n                    <span className=\"w-5 h-5 bg-yellow-100 rounded-full mr-2\"></span>\n                    Accessories ({accessories.length})\n                  </h4>\n\n                  {accessories.length === 0 ? (\n                    <div className=\"bg-gray-50 p-4 rounded text-center text-gray-500\">\n                      No accessories yet\n                    </div>\n                  ) : (\n                    <div className=\"space-y-2\">\n                      {accessories.map((accessory) => {\n                        const isPlaced = placedItems.some(placed => placed.itemId === accessory.id);\n\n                        return (\n                          <div\n                            key={accessory.id}\n                            className=\"border rounded-lg p-3 hover:shadow-md transition-shadow\"\n                          >\n                            <div className=\"flex items-center space-x-3\">\n                              <div className=\"w-12 h-12 bg-yellow-50 rounded-full flex items-center justify-center\">\n                                <img\n                                  src={accessory.image}\n                                  alt={accessory.name}\n                                  className=\"w-8 h-8 object-contain\"\n                                />\n                              </div>\n                              <div className=\"flex-1\">\n                                <h5 className=\"text-sm font-medium\">{accessory.name}</h5>\n                                <p className=\"text-xs text-gray-500\">{accessory.seedCost} seeds</p>\n                              </div>\n                              <div>\n                                {isPlaced ? (\n                                  <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">\n                                    Placed\n                                  </span>\n                                ) : (\n                                  <button\n                                    onClick={() => handlePlaceItem(accessory)}\n                                    className=\"text-xs bg-blue-100 hover:bg-blue-200 text-blue-800 px-3 py-1 rounded-full\"\n                                  >\n                                    Place\n                                  </button>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  )}\n                </div>\n\n                {/* Special Items */}\n                <div>\n                  <h4 className=\"font-medium mb-3 flex items-center\">\n                    <span className=\"w-5 h-5 bg-purple-100 rounded-full mr-2\"></span>\n                    Special Items ({specialItems.length})\n                  </h4>\n\n                  {specialItems.length === 0 ? (\n                    <div className=\"bg-gray-50 p-4 rounded text-center text-gray-500\">\n                      No special items yet\n                    </div>\n                  ) : (\n                    <div className=\"space-y-2\">\n                      {specialItems.map((item) => {\n                        const isPlaced = placedItems.some(placed => placed.itemId === item.id);\n\n                        return (\n                          <div\n                            key={item.id}\n                            className=\"border rounded-lg p-3 hover:shadow-md transition-shadow\"\n                          >\n                            <div className=\"flex items-center space-x-3\">\n                              <div className=\"w-12 h-12 bg-purple-50 rounded-full flex items-center justify-center\">\n                                <img\n                                  src={item.image}\n                                  alt={item.name}\n                                  className=\"w-8 h-8 object-contain\"\n                                />\n                              </div>\n                              <div className=\"flex-1\">\n                                <h5 className=\"text-sm font-medium\">{item.name}</h5>\n                                <p className=\"text-xs text-gray-500\">{item.seedCost} seeds</p>\n                              </div>\n                              <div>\n                                {isPlaced ? (\n                                  <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">\n                                    Placed\n                                  </span>\n                                ) : (\n                                  <button\n                                    onClick={() => handlePlaceItem(item)}\n                                    className=\"text-xs bg-blue-100 hover:bg-blue-200 text-blue-800 px-3 py-1 rounded-full\"\n                                  >\n                                    Place\n                                  </button>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Statistics Panel */}\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <h2 className=\"text-xl font-bold text-green-800 mb-4\">Greenhouse Statistics</h2>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Items in Inventory</p>\n            <p className=\"text-2xl font-bold text-green-800\">{inventory.length}</p>\n          </div>\n\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Items Placed</p>\n            <p className=\"text-2xl font-bold text-green-800\">{placedItems.length}</p>\n          </div>\n\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Plants</p>\n            <p className=\"text-2xl font-bold text-green-800\">{plants.length}</p>\n          </div>\n\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Accessories</p>\n            <p className=\"text-2xl font-bold text-green-800\">{accessories.length}</p>\n          </div>\n        </div>\n\n        {/* Visit Store Banner */}\n        <div className=\"mt-6 border-t pt-6\">\n          <div className=\"bg-green-50 rounded-lg p-4 flex justify-between items-center\">\n            <div>\n              <h3 className=\"font-medium text-green-800\">Need more plants or accessories?</h3>\n              <p className=\"text-sm text-gray-600\">Visit the store to expand your collection.</p>\n            </div>\n            <button\n              onClick={() => router.push('/store')}\n              className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md\"\n            >\n              Visit Store\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Item Details Modal */}\n      {showItemDetails && selectedItem && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg max-w-md w-full p-6\">\n            <div className=\"flex justify-between items-start mb-4\">\n              <h3 className=\"text-xl font-semibold\">{selectedItem.name}</h3>\n              <button\n                onClick={() => setShowItemDetails(false)}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            <div className=\"flex justify-center mb-4\">\n              <div className=\"w-32 h-32 rounded-full flex items-center justify-center bg-green-50\">\n                <img\n                  src={selectedItem.image}\n                  alt={selectedItem.name}\n                  className=\"w-24 h-24 object-contain\"\n                />\n              </div>\n            </div>\n\n            <p className=\"text-gray-600 mb-4\">{selectedItem.description}</p>\n\n            <div className=\"bg-gray-50 p-3 rounded-md mb-4\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm font-medium\">Seed Cost:</span>\n                <div className=\"flex items-center\">\n                  <img\n                    src=\"/images/seed-icon.png\"\n                    alt=\"Seeds\"\n                    className=\"w-4 h-4 mr-1\"\n                  />\n                  <span className=\"font-bold\">{selectedItem.seedCost}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex justify-between\">\n              <button\n                onClick={() => setShowItemDetails(false)}\n                className=\"px-4 py-2 border rounded-md text-gray-600 hover:bg-gray-50\"\n              >\n                Close\n              </button>\n\n              {!placedItems.some(placed => placed.itemId === selectedItem.id) && (\n                <button\n                  onClick={() => {\n                    setShowItemDetails(false);\n                    handlePlaceItem(selectedItem);\n                  }}\n                  className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md\"\n                >\n                  Place in Greenhouse\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Greenhouse;"],"names":[],"mappings":"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","debugId":null}}]
}