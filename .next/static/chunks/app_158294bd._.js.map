{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/components/greenhouse/Greenhouse.tsx"],"sourcesContent":["// app/components/greenhouse/Greenhouse.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { UserProfile } from '@/app/lib/firebase/auth';\nimport { db } from '@/app/lib/firebase/config';\nimport { collection, doc, getDoc, updateDoc, getDocs, query, where, orderBy, serverTimestamp, arrayUnion, writeBatch, addDoc, limit } from 'firebase/firestore';\n\ninterface GreenhouseProps {\n  userId: string;\n}\n\ninterface Plant {\n  id: string;\n  name: string;\n  image: string;\n  description: string;\n  seedCost: number;\n  owned: boolean;\n  type: 'plant' | 'accessory' | 'special';\n  placed?: boolean;\n  position?: { x: number; y: number };\n}\n\ninterface PlacedItem {\n  id: string;\n  itemId: string;\n  position: { x: number; y: number };\n  type: 'plant' | 'accessory' | 'special';\n}\n\nconst Greenhouse: React.FC<GreenhouseProps> = ({ userId }) => {\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [inventory, setInventory] = useState<Plant[]>([]);\n  const [placedItems, setPlacedItems] = useState<PlacedItem[]>([]);\n  const [selectedItem, setSelectedItem] = useState<Plant | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isIdentityConfirmed, setIsIdentityConfirmed] = useState(false);\n  const [fullName, setFullName] = useState('');\n  const [isPlacingMode, setIsPlacingMode] = useState(false);\n  const [selectedInventoryItem, setSelectedInventoryItem] = useState<Plant | null>(null);\n  const [activeTab, setActiveTab] = useState<'garden' | 'inventory'>('garden');\n\n  // All available items (from store)\n  const allStoreItems: Plant[] = [\n    // Plants\n    {\n      id: 'plant1',\n      name: 'Sunflower',\n      image: '/images/plants/sunflower.png',\n      description: 'A tall, cheerful flower that follows the sun.',\n      seedCost: 5,\n      owned: false,\n      type: 'plant'\n    },\n    {\n      id: 'plant2',\n      name: 'Oak Tree',\n      image: '/images/plants/oak.png',\n      description: 'A strong, majestic tree that can live for hundreds of years.',\n      seedCost: 50,\n      owned: false,\n      type: 'plant'\n    },\n    {\n      id: 'plant3',\n      name: 'Rose Bush',\n      image: '/images/plants/rose.png',\n      description: 'Beautiful flowers with thorny stems.',\n      seedCost: 25,\n      owned: false,\n      type: 'plant'\n    },\n    {\n      id: 'plant4',\n      name: 'Cactus',\n      image: '/images/plants/cactus.png',\n      description: 'A hardy desert plant that requires little water.',\n      seedCost: 15,\n      owned: false,\n      type: 'plant'\n    },\n    {\n      id: 'plant5',\n      name: 'Bonsai Tree',\n      image: '/images/plants/bonsai.png',\n      description: 'A miniature tree grown in a small container.',\n      seedCost: 100,\n      owned: false,\n      type: 'plant'\n    },\n    {\n      id: 'plant6',\n      name: 'Lavender Bush',\n      image: '/images/plants/lavender.png',\n      description: 'A calming purple plant known for its soothing aroma.',\n      seedCost: 20,\n      owned: false,\n      type: 'plant'\n    },\n    {\n      id: 'plant7',\n      name: 'Apple Tree',\n      image: '/images/plants/apple-tree.png',\n      description: 'A fruit-bearing tree that produces delicious apples.',\n      seedCost: 75,\n      owned: false,\n      type: 'plant'\n    },\n    {\n      id: 'plant8',\n      name: 'Hanging Fern',\n      image: '/images/plants/hanging-fern.png',\n      description: 'A lush green fern perfect for adding vertical interest.',\n      seedCost: 15,\n      owned: false,\n      type: 'plant'\n    },\n    // Accessories\n    {\n      id: 'accessory1',\n      name: 'Watering Can',\n      image: '/images/accessories/watering-can.png',\n      description: 'A decorative watering can for your virtual greenhouse.',\n      seedCost: 20,\n      owned: false,\n      type: 'accessory'\n    },\n    {\n      id: 'accessory2',\n      name: 'Garden Bench',\n      image: '/images/accessories/bench.png',\n      description: 'A peaceful place to sit and admire your plants.',\n      seedCost: 30,\n      owned: false,\n      type: 'accessory'\n    },\n    {\n      id: 'accessory3',\n      name: 'Bird Bath',\n      image: '/images/accessories/bird-bath.png',\n      description: 'Attract virtual birds to your greenhouse.',\n      seedCost: 35,\n      owned: false,\n      type: 'accessory'\n    },\n    // Special Items\n    {\n      id: 'special1',\n      name: 'Rare Orchid',\n      image: '/images/plants/rare-orchid.png',\n      description: 'An ultra-rare flower with stunning blooms.',\n      seedCost: 150,\n      owned: false,\n      type: 'special'\n    },\n    {\n      id: 'special2',\n      name: 'Bee Box',\n      image: '/images/accessories/bee-box.png',\n      description: 'Houses virtual bees that help pollinate nearby plants.',\n      seedCost: 40,\n      owned: false,\n      type: 'special'\n    }\n  ];\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        \n        // Check if user is authenticated\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n          setError('You must be signed in to access your greenhouse');\n          return;\n        }\n\n        // Verify the userId matches the authenticated user\n        if (currentUser.uid !== userId) {\n          setError('You can only access your own greenhouse');\n          return;\n        }\n        \n        // Get user profile\n        const userDoc = await getDoc(doc(db, 'users', userId));\n        \n        if (userDoc.exists()) {\n          const userData = userDoc.data() as UserProfile & {\n            ownedItems?: {\n              plants?: string[];\n              accessories?: string[];\n              specials?: string[];\n            };\n            greenhouseLayout?: PlacedItem[];\n          };\n          \n          setProfile(userData);\n          \n          // Process owned items\n          const ownedPlants = userData.ownedItems?.plants || [];\n          const ownedAccessories = userData.ownedItems?.accessories || [];\n          const ownedSpecials = userData.ownedItems?.specials || [];\n          \n          // Create inventory from owned items\n          const userInventory = allStoreItems\n            .filter(item => {\n              if (item.type === 'plant') return ownedPlants.includes(item.id);\n              if (item.type === 'accessory') return ownedAccessories.includes(item.id);\n              if (item.type === 'special') return ownedSpecials.includes(item.id);\n              return false;\n            })\n            .map(item => ({ ...item, owned: true }));\n          \n          setInventory(userInventory);\n          \n          // Load placed items from user's greenhouse layout\n          setPlacedItems(userData.greenhouseLayout || []);\n        } else {\n          setError('User profile not found. Please complete your onboarding process.');\n        }\n        \n      } catch (err: any) {\n        console.error('Error fetching user data:', err);\n        if (err.code === 'permission-denied') {\n          setError('Failed to load your greenhouse inventory: Missing or insufficient permissions. Please make sure you are signed in.');\n        } else if (err.code === 'not-found') {\n          setError('Your profile was not found. Please complete the onboarding process.');\n        } else {\n          setError(`Failed to load your greenhouse: ${err.message}`);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    // Only fetch data if we have a userId\n    if (userId) {\n      fetchUserData();\n    } else {\n      setError('No user ID provided');\n      setLoading(false);\n    }\n  }, [userId]);\n\n  const handleIdentityConfirmation = () => {\n    if (!profile) return;\n    \n    if (fullName.trim() === '') {\n      setError('Please enter your full name');\n      return;\n    }\n    \n    setIsIdentityConfirmed(true);\n    setError('');\n  };\n\n  const handlePlaceItem = (inventoryItem: Plant) => {\n    setSelectedInventoryItem(inventoryItem);\n    setIsPlacingMode(true);\n  };\n\n  const handleGridClick = async (x: number, y: number) => {\n    if (!isPlacingMode || !selectedInventoryItem) return;\n    \n    // Check if position is already occupied\n    const isOccupied = placedItems.some(item => item.position.x === x && item.position.y === y);\n    if (isOccupied) {\n      setError('This position is already occupied');\n      return;\n    }\n\n    try {\n      setError(''); // Clear any previous errors\n      \n      const newPlacedItem: PlacedItem = {\n        id: `placed_${Date.now()}`,\n        itemId: selectedInventoryItem.id,\n        position: { x, y },\n        type: selectedInventoryItem.type\n      };\n\n      const updatedPlacedItems = [...placedItems, newPlacedItem];\n\n      // Update local state first for immediate feedback\n      setPlacedItems(updatedPlacedItems);\n      \n      // Update in Firestore\n      await updateDoc(doc(db, 'users', userId), {\n        greenhouseLayout: updatedPlacedItems\n      });\n\n      // Reset placing mode\n      setIsPlacingMode(false);\n      setSelectedInventoryItem(null);\n    } catch (err: any) {\n      console.error('Error placing item:', err);\n      // Revert local state on error\n      setPlacedItems(placedItems);\n      \n      if (err.code === 'permission-denied') {\n        setError('Permission denied. Please make sure you are signed in and try again.');\n      } else {\n        setError('Failed to place item: ' + err.message);\n      }\n    }\n  };\n\n  const handleRemoveItem = async (placedItemId: string) => {\n    try {\n      setError(''); // Clear any previous errors\n      \n      const updatedPlacedItems = placedItems.filter(item => item.id !== placedItemId);\n      \n      // Update local state first for immediate feedback\n      setPlacedItems(updatedPlacedItems);\n      \n      // Update in Firestore\n      await updateDoc(doc(db, 'users', userId), {\n        greenhouseLayout: updatedPlacedItems\n      });\n    } catch (err: any) {\n      console.error('Error removing item:', err);\n      // Revert local state on error\n      setPlacedItems(placedItems);\n      \n      if (err.code === 'permission-denied') {\n        setError('Permission denied. Please make sure you are signed in and try again.');\n      } else {\n        setError('Failed to remove item: ' + err.message);\n      }\n    }\n  };\n\n  const getItemById = (itemId: string) => {\n    return allStoreItems.find(item => item.id === itemId);\n  };\n\n  const getPlacedItemAtPosition = (x: number, y: number) => {\n    return placedItems.find(item => item.position.x === x && item.position.y === y);\n  };\n\n  const renderGreenhouseGrid = () => {\n    const gridSize = 8; // 8x8 grid\n    const grid = [];\n    \n    for (let y = 0; y < gridSize; y++) {\n      for (let x = 0; x < gridSize; x++) {\n        const placedItem = getPlacedItemAtPosition(x, y);\n        const item = placedItem ? getItemById(placedItem.itemId) : null;\n        \n        grid.push(\n          <div\n            key={`${x}-${y}`}\n            className={`\n              w-16 h-16 border border-gray-200 flex items-center justify-center cursor-pointer\n              transition-colors duration-200 relative\n              ${isPlacingMode && !placedItem ? 'hover:bg-green-100 border-green-300' : ''}\n              ${placedItem ? 'bg-green-50' : 'bg-gray-50 hover:bg-gray-100'}\n            `}\n            onClick={() => {\n              if (isPlacingMode && !placedItem) {\n                handleGridClick(x, y);\n              }\n            }}\n          >\n            {item && (\n              <>\n                <img\n                  src={item.image}\n                  alt={item.name}\n                  className=\"w-12 h-12 object-contain\"\n                />\n                {/* Remove button on hover */}\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleRemoveItem(placedItem.id);\n                  }}\n                  className=\"absolute -top-1 -right-1 w-5 h-5 bg-red-500 text-white rounded-full text-xs opacity-0 hover:opacity-100 transition-opacity\"\n                  title=\"Remove item\"\n                >\n                  ×\n                </button>\n              </>\n            )}\n            {isPlacingMode && !placedItem && (\n              <div className=\"text-gray-400 text-xs\">+</div>\n            )}\n          </div>\n        );\n      }\n    }\n    \n    return (\n      <div className=\"grid grid-cols-8 gap-1 bg-green-100 p-4 rounded-lg border-2 border-green-200\">\n        {grid}\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"></div>\n      </div>\n    );\n  }\n\n  if (!profile) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"p-4 bg-red-100 text-red-700 rounded-md\">\n          Error loading your greenhouse. Please try again later.\n        </div>\n      </div>\n    );\n  }\n\n  if (!isIdentityConfirmed) {\n    return (\n      <div className=\"max-w-md mx-auto my-10 p-6 bg-white rounded-lg shadow-lg\">\n        <h2 className=\"text-2xl font-bold text-green-800 mb-6\">Welcome to Your Greenhouse</h2>\n        <p className=\"text-gray-600 mb-4\">\n          Please confirm your identity to access your greenhouse.\n        </p>\n        \n        {error && (\n          <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\n            {error}\n          </div>\n        )}\n        \n        <div className=\"mb-4\">\n          <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Full Name\n          </label>\n          <input\n            type=\"text\"\n            id=\"fullName\"\n            value={fullName}\n            onChange={(e) => setFullName(e.target.value)}\n            className=\"w-full px-3 py-2 border rounded-md\"\n            placeholder=\"Enter your full name\"\n          />\n        </div>\n        \n        <button\n          onClick={handleIdentityConfirmation}\n          className=\"w-full py-2 bg-green-600 hover:bg-green-700 text-white rounded-md\"\n        >\n          Enter Greenhouse\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-4 max-w-6xl\">\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-green-800\">Your Greenhouse</h2>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center\">\n              <img \n                src=\"/images/seed-icon.png\" \n                alt=\"Seeds\" \n                className=\"w-6 h-6 mr-2\"\n              />\n              <span className=\"font-bold text-green-800\">{profile.seeds}</span>\n            </div>\n            <button\n              onClick={() => window.location.href = '/store'}\n              className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md text-sm\"\n            >\n              Visit Store\n            </button>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\n            {error}\n          </div>\n        )}\n\n        {/* Tab Navigation */}\n        <div className=\"flex mb-6 border-b\">\n          <button\n            onClick={() => setActiveTab('garden')}\n            className={`px-4 py-2 text-sm font-medium ${\n              activeTab === 'garden'\n                ? 'text-green-700 border-b-2 border-green-500'\n                : 'text-gray-500 hover:text-gray-700'\n            }`}\n          >\n            My Garden\n          </button>\n          <button\n            onClick={() => setActiveTab('inventory')}\n            className={`px-4 py-2 text-sm font-medium ${\n              activeTab === 'inventory'\n                ? 'text-green-700 border-b-2 border-green-500'\n                : 'text-gray-500 hover:text-gray-700'\n            }`}\n          >\n            Inventory ({inventory.length})\n          </button>\n        </div>\n\n        {activeTab === 'garden' && (\n          <div>\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold\">Virtual Garden</h3>\n              {isPlacingMode ? (\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-sm text-blue-600\">\n                    Click on an empty spot to place {selectedInventoryItem?.name}\n                  </span>\n                  <button\n                    onClick={() => {\n                      setIsPlacingMode(false);\n                      setSelectedInventoryItem(null);\n                    }}\n                    className=\"px-3 py-1 bg-gray-500 hover:bg-gray-600 text-white rounded-md text-sm\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              ) : (\n                <span className=\"text-sm text-gray-600\">\n                  {placedItems.length} items placed\n                </span>\n              )}\n            </div>\n            \n            <div className=\"flex justify-center mb-6\">\n              {renderGreenhouseGrid()}\n            </div>\n            \n            {placedItems.length === 0 && (\n              <div className=\"text-center py-8 text-gray-500\">\n                <p>Your greenhouse is empty. Visit the inventory tab to place items!</p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'inventory' && (\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Your Inventory</h3>\n            \n            {inventory.length === 0 ? (\n              <div className=\"text-center py-8 text-gray-500\">\n                <p>Your inventory is empty.</p>\n                <button\n                  onClick={() => window.location.href = '/store'}\n                  className=\"mt-4 px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md\"\n                >\n                  Visit Store to Buy Items\n                </button>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {inventory.map(item => {\n                  const isPlaced = placedItems.some(placed => placed.itemId === item.id);\n                  \n                  return (\n                    <div \n                      key={item.id}\n                      className={`border rounded-lg p-4 hover:shadow-md cursor-pointer transition-shadow ${\n                        selectedItem?.id === item.id ? 'border-green-500 ring-2 ring-green-200' : 'border-gray-200'\n                      }`}\n                      onClick={() => setSelectedItem(item)}\n                    >\n                      <div className=\"flex justify-center mb-3\">\n                        <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center\">\n                          <img \n                            src={item.image} \n                            alt={item.name}\n                            className=\"w-16 h-16\"\n                          />\n                        </div>\n                      </div>\n                      <h4 className=\"text-center font-medium mb-2\">{item.name}</h4>\n                      <div className=\"flex justify-center\">\n                        {isPlaced ? (\n                          <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">\n                            Placed in Garden\n                          </span>\n                        ) : (\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handlePlaceItem(item);\n                            }}\n                            className=\"text-xs bg-blue-100 hover:bg-blue-200 text-blue-800 px-3 py-1 rounded-full\"\n                          >\n                            Place in Garden\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Item Details Panel */}\n        {selectedItem && activeTab === 'inventory' && (\n          <div className=\"mt-6 bg-gray-50 rounded-lg p-4\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center\">\n                <img \n                  src={selectedItem.image} \n                  alt={selectedItem.name}\n                  className=\"w-12 h-12\"\n                />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-lg\">{selectedItem.name}</h4>\n                <p className=\"text-gray-600 text-sm\">{selectedItem.description}</p>\n                <div className=\"flex items-center mt-2\">\n                  <span className=\"text-xs bg-gray-100 px-2 py-1 rounded-full mr-2\">\n                    {selectedItem.type.charAt(0).toUpperCase() + selectedItem.type.slice(1)}\n                  </span>\n                  <span className=\"text-xs text-gray-500\">\n                    Cost: {selectedItem.seedCost} seeds\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Statistics Panel */}\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <h2 className=\"text-xl font-bold text-green-800 mb-4\">Greenhouse Statistics</h2>\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Items in Inventory</p>\n            <p className=\"text-2xl font-bold text-green-800\">{inventory.length}</p>\n          </div>\n\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Items Placed</p>\n            <p className=\"text-2xl font-bold text-green-800\">{placedItems.length}</p>\n          </div>\n\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Plants</p>\n            <p className=\"text-2xl font-bold text-green-800\">\n              {inventory.filter(item => item.type === 'plant').length}\n            </p>\n          </div>\n\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Accessories</p>\n            <p className=\"text-2xl font-bold text-green-800\">\n              {inventory.filter(item => item.type === 'accessory').length}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Greenhouse;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1042, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/greenhouse/page.tsx"],"sourcesContent":["// app/greenhouse/page.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { auth } from '@/app/lib/firebase/config';\nimport { getUserProfile, UserProfile } from '@/app/lib/firebase/auth';\nimport Greenhouse from '@/app/components/greenhouse/Greenhouse';\n\nconst GreenhousePage = () => {\n  const router = useRouter();\n  const [user, setUser] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        setUser(user);\n        setLoading(false);\n      } else {\n        router.push('/auth/sign-in');\n      }\n    });\n\n    return () => unsubscribe();\n  }, [router]);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"></div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"p-4 bg-red-100 text-red-700 rounded-md\">\n          Please sign in to access your greenhouse.\n        </div>\n      </div>\n    );\n  }\n\n  return <Greenhouse userId={user.uid} />;\n};\n\nexport default GreenhousePage;"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAG1B;AACA;AACA;AAEA;;;AANA;;;;;AAQA,MAAM,iBAAiB;;IACrB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IACtC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,MAAM,cAAc,mIAAA,CAAA,OAAI,CAAC,kBAAkB;wDAAC,OAAO;oBACjD,IAAI,MAAM;wBACR,QAAQ;wBACR,WAAW;oBACb,OAAO;wBACL,OAAO,IAAI,CAAC;oBACd;gBACF;;YAEA;4CAAO,IAAM;;QACf;mCAAG;QAAC;KAAO;IAEX,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,IAAI,CAAC,MAAM;QACT,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BAAyC;;;;;;;;;;;IAK9D;IAEA,qBAAO,6LAAC,iJAAA,CAAA,UAAU;QAAC,QAAQ,KAAK,GAAG;;;;;;AACrC;GArCM;;QACW,qIAAA,CAAA,YAAS;;;KADpB;uCAuCS","debugId":null}}]
}