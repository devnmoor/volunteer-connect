{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/history/page.tsx"],"sourcesContent":["// app/history/page.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { auth } from '@/app/lib/firebase/config';\nimport { getUserProfile, UserProfile } from '@/app/lib/firebase/auth';\nimport { db } from '@/app/lib/firebase/config';\nimport { collection, doc, getDoc, updateDoc, getDocs, query, where, orderBy, serverTimestamp, arrayUnion, writeBatch, addDoc, limit } from 'firebase/firestore';\nimport { VolunteerTask } from '@/app/lib/firebase/firestore';\n\n\ninterface TaskCompletion {\n  id: string;\n  taskId: string;\n  userId: string;\n  completionDate: any;\n  imageUrl: string;\n  summary: string;\n  contactInfo: string;\n  rating: number;\n  feedback?: string;\n  timeSpent: number;\n  task?: VolunteerTask;\n}\n\nconst HistoryPage = () => {\n  const router = useRouter();\n  const [user, setUser] = useState<any>(null);\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [completedTasks, setCompletedTasks] = useState<TaskCompletion[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedCompletion, setSelectedCompletion] = useState<TaskCompletion | null>(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        setUser(user);\n        try {\n          // Get user profile\n          const userProfile = await getUserProfile(user.uid);\n          if (userProfile) {\n            setProfile(userProfile);\n\n            // Fetch completed tasks\n            await fetchCompletedTasks(user.uid);\n          } else {\n            router.push('/auth/onboarding');\n          }\n        } catch (err: any) {\n          setError(err.message);\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        router.push('/auth/sign-in');\n      }\n    });\n\n    return () => unsubscribe();\n  }, [router]);\n\n  const fetchCompletedTasks = async (userId: string) => {\n    try {\n      // Get task completions\n      const completionsQuery = query(\n        collection(db, 'taskCompletions'),\n        where('userId', '==', userId),\n        orderBy('completionDate', 'desc')\n      );\n\n      const completionsSnapshot = await getDocs(completionsQuery);\n      const completions: TaskCompletion[] = [];\n\n      // Get associated tasks\n      for (const docSnapshot of completionsSnapshot.docs) {\n        const completion = docSnapshot.data() as TaskCompletion;\n        completion.id = docSnapshot.id;\n\n        // Get task details\n        if (completion.taskId) {\n          try {\n            const taskDocRef = doc(db, 'tasks', completion.taskId);\n            const taskDoc = await getDoc(taskDocRef);\n            if (taskDoc.exists()) {\n              completion.task = { id: taskDoc.id, ...taskDoc.data() } as VolunteerTask;\n            }\n          } catch (err) {\n            console.error('Error fetching task:', err);\n          }\n        }\n\n        completions.push(completion);\n      }\n\n      setCompletedTasks(completions);\n    } catch (err: any) {\n      setError('Error fetching task history: ' + err.message);\n    }\n  };\n\n  // Format elapsed time for display\n  const formatTime = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n\n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    } else {\n      return `${minutes}m`;\n    }\n  };\n\n  // Format date for display\n  const formatDate = (timestamp: any) => {\n    if (!timestamp) return 'Unknown date';\n\n    const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(date);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-4 max-w-6xl\">\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n        <h2 className=\"text-2xl font-bold text-green-800 mb-6\">Your Volunteering History</h2>\n\n        {error && (\n          <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\n            {error}\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {/* Task History List */}\n          <div className=\"md:col-span-2\">\n            <h3 className=\"text-lg font-semibold mb-4\">Completed Tasks</h3>\n\n            {completedTasks.length === 0 ? (\n              <div className=\"bg-gray-50 p-6 rounded-lg text-center\">\n                <p className=\"text-gray-600\">You haven't completed any tasks yet.</p>\n                <button\n                  onClick={() => router.push('/dashboard')}\n                  className=\"mt-4 px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md\"\n                >\n                  Find Tasks to Complete\n                </button>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {completedTasks.map((completion) => (\n                  <div\n                    key={completion.id}\n                    className={`border rounded-lg overflow-hidden hover:shadow-md cursor-pointer transition-shadow ${selectedCompletion?.id === completion.id ? 'border-green-500 ring-2 ring-green-200' : 'border-gray-200'\n                      }`}\n                    onClick={() => setSelectedCompletion(completion)}\n                  >\n                    <div className=\"p-4\">\n                      <div className=\"flex justify-between items-start mb-2\">\n                        <h4 className=\"font-medium\">\n                          {completion.task?.title || 'Untitled Task'}\n                        </h4>\n                        <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">\n                          {formatDate(completion.completionDate)}\n                        </span>\n                      </div>\n\n                      <p className=\"text-sm text-gray-600 mb-3 line-clamp-2\">\n                        {completion.summary}\n                      </p>\n\n                      <div className=\"flex flex-wrap gap-2\">\n                        <div className=\"text-xs bg-gray-100 rounded-full px-2 py-1 flex items-center\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                          </svg>\n                          {formatTime(completion.timeSpent)}\n                        </div>\n\n                        <div className=\"text-xs bg-gray-100 rounded-full px-2 py-1 flex items-center\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 mr-1 text-yellow-400\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path fillRule=\"evenodd\" d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\n                          </svg>\n                          {completion.rating}/5\n                        </div>\n\n                        <div className=\"text-xs bg-gray-100 rounded-full px-2 py-1 flex items-center\">\n                          {completion.task?.category === 'communityService' ? 'Community Service' :\n                            completion.task?.category === 'environmentalAction' ? 'Environmental' :\n                              completion.task?.category === 'educationYouthSupport' ? 'Education' :\n                                completion.task?.category === 'healthWellness' ? 'Health' : 'Other'}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Task Details */}\n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            {selectedCompletion ? (\n              <div>\n                <h3 className=\"text-xl font-semibold mb-2\">\n                  {selectedCompletion.task?.title || 'Untitled Task'}\n                </h3>\n\n                <p className=\"text-gray-500 text-sm mb-4\">\n                  Completed on {formatDate(selectedCompletion.completionDate)}\n                </p>\n\n                {/* Image gallery */}\n                <div className=\"mb-4\">\n                  <h4 className=\"font-medium text-sm text-gray-700 mb-2\">Photos:</h4>\n                  <div className=\"grid grid-cols-3 gap-2\">\n                    {selectedCompletion.imageUrl.split(',').map((url, index) => (\n                      <div key={index} className=\"aspect-square bg-gray-200 rounded-md overflow-hidden\">\n                        <img\n                          src={url}\n                          alt={`Task completion ${index + 1}`}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Summary */}\n                <div className=\"mb-4\">\n                  <h4 className=\"font-medium text-sm text-gray-700 mb-1\">Your Summary:</h4>\n                  <p className=\"text-gray-600 text-sm\">{selectedCompletion.summary}</p>\n                </div>\n\n                {/* Time spent */}\n                <div className=\"mb-4 bg-green-50 p-3 rounded-md\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium text-green-800\">Time spent:</span>\n                    <span className=\"font-bold text-green-800\">{formatTime(selectedCompletion.timeSpent)}</span>\n                  </div>\n                </div>\n\n                {/* Feedback */}\n                {selectedCompletion.feedback && (\n                  <div className=\"mb-4\">\n                    <h4 className=\"font-medium text-sm text-gray-700 mb-1\">Your Feedback:</h4>\n                    <p className=\"text-gray-600 text-sm\">{selectedCompletion.feedback}</p>\n                  </div>\n                )}\n\n                {/* Rating */}\n                <div className=\"mb-4\">\n                  <h4 className=\"font-medium text-sm text-gray-700 mb-1\">Your Rating:</h4>\n                  <div className=\"flex\">\n                    {[1, 2, 3, 4, 5].map((star) => (\n                      <svg\n                        key={star}\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className={`h-5 w-5 ${selectedCompletion.rating >= star ? 'text-yellow-400' : 'text-gray-300'}`}\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                      >\n                        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                      </svg>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"text-center py-8 text-gray-500\">\n                <p>Select a task to view details</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Section */}\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <h2 className=\"text-xl font-bold text-green-800 mb-4\">Your Stats</h2>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Total Tasks Completed</p>\n            <p className=\"text-2xl font-bold text-green-800\">{completedTasks.length}</p>\n          </div>\n\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Seeds Earned</p>\n            <p className=\"text-2xl font-bold text-green-800\">{profile?.seeds || 0}</p>\n          </div>\n\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Total Time Spent</p>\n            <p className=\"text-2xl font-bold text-green-800\">\n              {formatTime(completedTasks.reduce((total, task) => total + (task.timeSpent || 0), 0))}\n            </p>\n          </div>\n\n          <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n            <p className=\"text-sm text-gray-600\">Average Rating</p>\n            <p className=\"text-2xl font-bold text-green-800\">\n              {completedTasks.length > 0\n                ? (completedTasks.reduce((total, task) => total + task.rating, 0) / completedTasks.length).toFixed(1)\n                : 'N/A'\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryPage;"],"names":[],"mappings":"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","debugId":null}}]
}