{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///Users/noramoor/Downloads/Programming/Applications/Volunteer%20Connect/volunteer-connect/app/greenhouse/page.tsx"],"sourcesContent":["// app/greenhouse/page.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { auth, db } from '@/app/lib/firebase/config';\nimport { getUserProfile, UserProfile } from '@/app/lib/firebase/auth';\nimport { \n  doc, \n  getDoc, \n  updateDoc, \n  collection, \n  query, \n  where, \n  getDocs,\n  serverTimestamp\n} from 'firebase/firestore';\nimport GreenhouseVisualization from '@/app/components/greenhouse/GreenhouseVisualization';\n\ninterface PlantOrItem {\n  id: string;\n  name: string;\n  image: string;\n  description: string;\n  seedCost: number;\n  type: 'plant' | 'accessory' | 'special';\n  placement?: {\n    room: string;\n    position: {\n      x: number;\n      y: number;\n    };\n  };\n}\n\nconst Greenhouse = () => {\n  const router = useRouter();\n  const [user, setUser] = useState<any>(null);\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [plants, setPlants] = useState<PlantOrItem[]>([]);\n  const [accessories, setAccessories] = useState<PlantOrItem[]>([]);\n  const [specialItems, setSpecialItems] = useState<PlantOrItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isIdentityConfirmed, setIsIdentityConfirmed] = useState(true); // Changed to true for demo\n  const [fullName, setFullName] = useState('');\n  const [showItemDetails, setShowItemDetails] = useState(false);\n  const [selectedItem, setSelectedItem] = useState<PlantOrItem | null>(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        setUser(user);\n        try {\n          // Get user profile\n          const userProfile = await getUserProfile(user.uid);\n          if (userProfile) {\n            setProfile(userProfile);\n            \n            // Fetch user's items from Firestore\n            await fetchUserItems(user.uid);\n          } else {\n            router.push('/auth/onboarding');\n          }\n        } catch (err: any) {\n          setError(err.message);\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        router.push('/auth/sign-in');\n      }\n    });\n\n    return () => unsubscribe();\n  }, [router]);\n\n  // Fetch user's purchased items\n  const fetchUserItems = async (userId: string) => {\n    try {\n      // Get user's document\n      const userDoc = await getDoc(doc(db, 'users', userId));\n      \n      if (!userDoc.exists()) {\n        throw new Error('User not found');\n      }\n      \n      const userData = userDoc.data();\n      \n      // Get owned items from user profile\n      const ownedItems = userData.ownedItems || {\n        plants: [],\n        accessories: [],\n        specials: []\n      };\n      \n      // Fetch all store items\n      const storeItemsRef = collection(db, 'storeItems');\n      const storeItemsSnapshot = await getDocs(storeItemsRef);\n      \n      const allStoreItems: { [key: string]: PlantOrItem } = {};\n      \n      storeItemsSnapshot.forEach(doc => {\n        allStoreItems[doc.id] = { \n          id: doc.id, \n          ...doc.data() \n        } as PlantOrItem;\n      });\n      \n      // If there are no store items in the database yet, use demo data\n      if (storeItemsSnapshot.empty) {\n        // Fetch plants\n        const userPlants = await fetchDemoPlants(ownedItems.plants || []);\n        const userAccessories = await fetchDemoAccessories(ownedItems.accessories || []);\n        const userSpecialItems = await fetchDemoSpecialItems(ownedItems.specials || []);\n        \n        setPlants(userPlants);\n        setAccessories(userAccessories);\n        setSpecialItems(userSpecialItems);\n      } else {\n        // Filter owned items\n        const userPlants = ownedItems.plants\n          .map(id => allStoreItems[id])\n          .filter(item => item);\n          \n        const userAccessories = ownedItems.accessories\n          .map(id => allStoreItems[id])\n          .filter(item => item);\n          \n        const userSpecialItems = ownedItems.specials\n          .map(id => allStoreItems[id])\n          .filter(item => item);\n          \n        setPlants(userPlants);\n        setAccessories(userAccessories);\n        setSpecialItems(userSpecialItems);\n      }\n    } catch (err: any) {\n      console.error('Error fetching user items:', err);\n      setError('Failed to load your greenhouse inventory: ' + err.message);\n    }\n  };\n  \n  // If no store items exist yet, use demo data\n  const fetchDemoPlants = async (ownedPlantIds: string[]) => {\n    // This simulates fetching plants from a database\n    const demoPlants = [\n      {\n        id: 'plant1',\n        name: 'Sunflower',\n        image: '/images/plants/sunflower.png',\n        description: 'A tall, cheerful flower that follows the sun. Sunflowers represent adoration, loyalty, and longevity.',\n        seedCost: 10,\n        type: 'plant' as const\n      },\n      {\n        id: 'plant2',\n        name: 'Oak Tree',\n        image: '/images/plants/oak.png',\n        description: 'A strong, majestic tree that can live for hundreds of years. Oak trees symbolize strength, endurance, and wisdom.',\n        seedCost: 50,\n        type: 'plant' as const\n      },\n      {\n        id: 'plant3',\n        name: 'Rose Bush',\n        image: '/images/plants/rose.png',\n        description: 'Beautiful flowers with thorny stems. Roses are traditional symbols of love and passion.',\n        seedCost: 25,\n        type: 'plant' as const\n      },\n      {\n        id: 'plant6',\n        name: 'Lavender Bush',\n        image: '/images/plants/lavender.png',\n        description: 'A calming purple plant known for its soothing aroma and beautiful blooms.',\n        seedCost: 20,\n        type: 'plant' as const\n      },\n      {\n        id: 'plant7',\n        name: 'Apple Tree',\n        image: '/images/plants/apple-tree.png',\n        description: 'A fruit-bearing tree that produces delicious apples. A symbol of abundance and nourishment.',\n        seedCost: 75,\n        type: 'plant' as const\n      }\n    ];\n    \n    // Filter to return only owned plants\n    return demoPlants.filter(plant => ownedPlantIds.includes(plant.id));\n  };\n  \n  const fetchDemoAccessories = async (ownedAccessoryIds: string[]) => {\n    const demoAccessories = [\n      {\n        id: 'accessory1',\n        name: 'Watering Can',\n        image: '/images/accessories/watering-can.png',\n        description: 'A decorative watering can for your virtual greenhouse.',\n        seedCost: 20,\n        type: 'accessory' as const\n      },\n      {\n        id: 'accessory2',\n        name: 'Garden Bench',\n        image: '/images/accessories/bench.png',\n        description: 'A peaceful place to sit and admire your plants.',\n        seedCost: 30,\n        type: 'accessory' as const\n      },\n      {\n        id: 'accessory3',\n        name: 'Bird Bath',\n        image: '/images/accessories/bird-bath.png',\n        description: 'Attract virtual birds to your greenhouse.',\n        seedCost: 35,\n        type: 'accessory' as const\n      },\n      {\n        id: 'accessory4',\n        name: 'Compost Bin',\n        image: '/images/accessories/compost.png',\n        description: 'A natural way to recycle plant waste and boost your greenhouse\\'s eco-friendly feel.',\n        seedCost: 25,\n        type: 'accessory' as const\n      },\n      {\n        id: 'accessory5',\n        name: 'Plant Shelf',\n        image: '/images/accessories/plant-shelf.png',\n        description: 'An attractive wooden shelf perfect for organizing and displaying your smaller plants.',\n        seedCost: 35,\n        type: 'accessory' as const\n      }\n    ];\n    \n    return demoAccessories.filter(acc => ownedAccessoryIds.includes(acc.id));\n  };\n  \n  const fetchDemoSpecialItems = async (ownedSpecialIds: string[]) => {\n    const demoSpecialItems = [\n      {\n        id: 'special1',\n        name: 'Rare Orchid',\n        image: '/images/plants/rare-orchid.png',\n        description: 'An ultra-rare flower with stunning blooms. A true collector\\'s item for your greenhouse.',\n        seedCost: 150,\n        type: 'special' as const\n      },\n      {\n        id: 'special2',\n        name: 'Bee Box',\n        image: '/images/accessories/bee-box.png',\n        description: 'Houses virtual bees that help pollinate nearby plants, enhancing their appearance.',\n        seedCost: 40,\n        type: 'special' as const\n      },\n      {\n        id: 'special3',\n        name: 'Holiday Lights',\n        image: '/images/accessories/holiday-lights.png',\n        description: 'Festive lights to brighten your greenhouse during special seasonal events.',\n        seedCost: 20,\n        type: 'special' as const\n      }\n    ];\n    \n    return demoSpecialItems.filter(item => ownedSpecialIds.includes(item.id));\n  };\n\n  // Handle item placement in the greenhouse\n  const handleItemPlace = async (item, room, position) => {\n    if (!user) return;\n    \n    try {\n      // Update the item placement in the database\n      const userRef = doc(db, 'users', user.uid);\n      \n      // Create placement data\n      const placementData = {\n        room,\n        position\n      };\n      \n      // Create the update object using the correct path for the specific item\n      const updateData = {\n        [`itemPlacements.${item.id}`]: placementData,\n        updatedAt: serverTimestamp()\n      };\n      \n      // Update Firestore\n      await updateDoc(userRef, updateData);\n      \n      // Update local state\n      if (item.type === 'plant') {\n        setPlants(prev => prev.map(p => \n          p.id === item.id ? { ...p, placement: placementData } : p\n        ));\n      } else if (item.type === 'accessory') {\n        setAccessories(prev => prev.map(a => \n          a.id === item.id ? { ...a, placement: placementData } : a\n        ));\n      } else if (item.type === 'special') {\n        setSpecialItems(prev => prev.map(s => \n          s.id === item.id ? { ...s, placement: placementData } : s\n        ));\n      }\n    } catch (err) {\n      console.error('Error updating item placement:', err);\n    }\n  };\n\n  // Handle item movement within the greenhouse\n  const handleItemMove = async (item, room, position) => {\n    if (!user) return;\n    \n    try {\n      // Update the item placement in the database\n      const userRef = doc(db, 'users', user.uid);\n      \n      // Create placement data\n      const placementData = {\n        room,\n        position\n      };\n      \n      // Create the update object\n      const updateData = {\n        [`itemPlacements.${item.id}`]: placementData,\n        updatedAt: serverTimestamp()\n      };\n      \n      // Update Firestore\n      await updateDoc(userRef, updateData);\n      \n      // Update local state\n      if (item.type === 'plant') {\n        setPlants(prev => prev.map(p => \n          p.id === item.id ? { ...p, placement: placementData } : p\n        ));\n      } else if (item.type === 'accessory') {\n        setAccessories(prev => prev.map(a => \n          a.id === item.id ? { ...a, placement: placementData } : a\n        ));\n      } else if (item.type === 'special') {\n        setSpecialItems(prev => prev.map(s => \n          s.id === item.id ? { ...s, placement: placementData } : s\n        ));\n      }\n    } catch (err) {\n      console.error('Error updating item placement:', err);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"></div>\n      </div>\n    );\n  }\n\n  if (!profile) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"p-4 bg-red-100 text-red-700 rounded-md\">\n          Error loading your greenhouse. Please try again later.\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-4 max-w-6xl\">\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-green-800\">Your Greenhouse</h2>\n            <p className=\"text-gray-600\">Arrange your plants and accessories in your virtual greenhouse</p>\n          </div>\n          <div className=\"flex items-center\">\n            <img \n              src=\"/images/seed-icon.png\" \n              alt=\"Seeds\" \n              className=\"w-6 h-6 mr-2\"\n            />\n            <span className=\"font-bold text-green-800\">{profile.seeds}</span>\n          </div>\n        </div>\n        \n        {error && (\n          <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\n            {error}\n          </div>\n        )}\n        \n        {/* Inventory summary */}\n        <div className=\"grid grid-cols-3 gap-4 mb-6\">\n          <div className=\"bg-green-50 p-4 rounded-lg\">\n            <h3 className=\"font-medium mb-2\">Plants</h3>\n            <div className=\"flex items-center\">\n              <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mr-2\">\n                <img src=\"/images/plants/sunflower.png\" alt=\"Plants\" className=\"w-6 h-6\" />\n              </div>\n              <span className=\"text-lg font-bold\">{plants.length}</span>\n            </div>\n          </div>\n          \n          <div className=\"bg-green-50 p-4 rounded-lg\">\n            <h3 className=\"font-medium mb-2\">Accessories</h3>\n            <div className=\"flex items-center\">\n              <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mr-2\">\n                <img src=\"/images/accessories/watering-can.png\" alt=\"Accessories\" className=\"w-6 h-6\" />\n              </div>\n              <span className=\"text-lg font-bold\">{accessories.length}</span>\n            </div>\n          </div>\n          \n          <div className=\"bg-green-50 p-4 rounded-lg\">\n            <h3 className=\"font-medium mb-2\">Special Items</h3>\n            <div className=\"flex items-center\">\n              <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mr-2\">\n                <img src=\"/images/accessories/bee-box.png\" alt=\"Special Items\" className=\"w-6 h-6\" />\n              </div>\n              <span className=\"text-lg font-bold\">{specialItems.length}</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* 3D Greenhouse Visualization */}\n        <div className=\"h-[600px] border border-gray-200 rounded-lg overflow-hidden\">\n          <GreenhouseVisualization \n            plants={plants}\n            accessories={accessories}\n            specialItems={specialItems}\n            onItemPlace={handleItemPlace}\n            onItemMove={handleItemMove}\n          />\n        </div>\n        \n        {/* Store link banner */}\n        {plants.length === 0 && accessories.length === 0 && (\n          <div className=\"mt-6 bg-green-50 rounded-lg p-6 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-800 mb-2\">Your greenhouse is empty!</h3>\n            <p className=\"text-gray-600 mb-4\">\n              Visit the store to purchase plants and accessories for your greenhouse.\n            </p>\n            <button\n              onClick={() => router.push('/store')}\n              className=\"px-6 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg\"\n            >\n              Visit Store\n            </button>\n          </div>\n        )}\n      </div>\n      \n      {/* Inventory Section */}\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <h2 className=\"text-xl font-bold text-green-800 mb-4\">Your Greenhouse Inventory</h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {/* Plants */}\n          <div>\n            <h3 className=\"font-medium mb-3 flex items-center\">\n              <span className=\"w-5 h-5 bg-green-100 rounded-full mr-2\"></span>\n              Plants\n            </h3>\n            \n            {plants.length === 0 ? (\n              <div className=\"bg-gray-50 p-4 rounded text-center text-gray-500\">\n                No plants yet\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-2 gap-3\">\n                {plants.map((plant) => (\n                  <div \n                    key={plant.id} \n                    className=\"border rounded-lg p-3 cursor-pointer hover:shadow-md transition-shadow\"\n                    onClick={() => {\n                      setSelectedItem(plant);\n                      setShowItemDetails(true);\n                    }}\n                  >\n                    <div className=\"flex justify-center mb-2\">\n                      <div className=\"w-16 h-16 bg-green-50 rounded-full flex items-center justify-center\">\n                        <img \n                          src={plant.image} \n                          alt={plant.name}\n                          className=\"w-12 h-12 object-contain\"\n                        />\n                      </div>\n                    </div>\n                    <h4 className=\"text-sm font-medium text-center\">{plant.name}</h4>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          \n          {/* Accessories */}\n          <div>\n            <h3 className=\"font-medium mb-3 flex items-center\">\n              <span className=\"w-5 h-5 bg-yellow-100 rounded-full mr-2\"></span>\n              Accessories\n            </h3>\n            \n            {accessories.length === 0 ? (\n              <div className=\"bg-gray-50 p-4 rounded text-center text-gray-500\">\n                No accessories yet\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-2 gap-3\">\n                {accessories.map((accessory) => (\n                  <div \n                    key={accessory.id} \n                    className=\"border rounded-lg p-3 cursor-pointer hover:shadow-md transition-shadow\"\n                    onClick={() => {\n                      setSelectedItem(accessory);\n                      setShowItemDetails(true);\n                    }}\n                  >\n                    <div className=\"flex justify-center mb-2\">\n                      <div className=\"w-16 h-16 bg-yellow-50 rounded-full flex items-center justify-center\">\n                        <img \n                          src={accessory.image} \n                          alt={accessory.name}\n                          className=\"w-12 h-12 object-contain\"\n                        />\n                      </div>\n                    </div>\n                    <h4 className=\"text-sm font-medium text-center\">{accessory.name}</h4>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          \n          {/* Special Items */}\n          <div>\n            <h3 className=\"font-medium mb-3 flex items-center\">\n              <span className=\"w-5 h-5 bg-purple-100 rounded-full mr-2\"></span>\n              Special Items\n            </h3>\n            \n            {specialItems.length === 0 ? (\n              <div className=\"bg-gray-50 p-4 rounded text-center text-gray-500\">\n                No special items yet\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-2 gap-3\">\n                {specialItems.map((item) => (\n                  <div \n                    key={item.id} \n                    className=\"border rounded-lg p-3 cursor-pointer hover:shadow-md transition-shadow\"\n                    onClick={() => {\n                      setSelectedItem(item);\n                      setShowItemDetails(true);\n                    }}\n                  >\n                    <div className=\"flex justify-center mb-2\">\n                      <div className=\"w-16 h-16 bg-purple-50 rounded-full flex items-center justify-center\">\n                        <img \n                          src={item.image} \n                          alt={item.name}\n                          className=\"w-12 h-12 object-contain\"\n                        />\n                      </div>\n                    </div>\n                    <h4 className=\"text-sm font-medium text-center\">{item.name}</h4>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Visit Store Banner */}\n        <div className=\"mt-8 border-t pt-6\">\n          <div className=\"bg-green-50 rounded-lg p-4 flex justify-between items-center\">\n            <div>\n              <h3 className=\"font-medium text-green-800\">Need more plants or accessories?</h3>\n              <p className=\"text-sm text-gray-600\">Visit the store to expand your collection.</p>\n            </div>\n            <button\n              onClick={() => router.push('/store')}\n              className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md\"\n            >\n              Visit Store\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Item Details Modal */}\n      {showItemDetails && selectedItem && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg max-w-md w-full p-6\">\n            <div className=\"flex justify-between items-start mb-4\">\n              <h3 className=\"text-xl font-semibold\">{selectedItem.name}</h3>\n              <button\n                onClick={() => setShowItemDetails(false)}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            <div className=\"flex justify-center mb-4\">\n              <div className=\"w-32 h-32 rounded-full flex items-center justify-center bg-green-50\">\n                <img \n                  src={selectedItem.image} \n                  alt={selectedItem.name}\n                  className=\"w-24 h-24 object-contain\"\n                />\n              </div>\n            </div>\n            \n            <p className=\"text-gray-600 mb-4\">{selectedItem.description}</p>\n            \n            <div className=\"bg-gray-50 p-3 rounded-md mb-4\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm font-medium\">Seed Cost:</span>\n                <div className=\"flex items-center\">\n                  <img \n                    src=\"/images/seed-icon.png\" \n                    alt=\"Seeds\" \n                    className=\"w-4 h-4 mr-1\"\n                  />\n                  <span className=\"font-bold\">{selectedItem.seedCost}</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between\">\n              <button\n                onClick={() => setShowItemDetails(false)}\n                className=\"px-4 py-2 border rounded-md text-gray-600 hover:bg-gray-50\"\n              >\n                Close\n              </button>\n              \n              {!selectedItem.placement && (\n                <button\n                  onClick={() => {\n                    setShowItemDetails(false);\n                    // Code to place item in greenhouse visualization\n                  }}\n                  className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md\"\n                >\n                  Place in Greenhouse\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Greenhouse;"],"names":[],"mappings":"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","debugId":null}}]
}